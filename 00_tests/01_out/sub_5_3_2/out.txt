no cupy available, imported numpy as usual
Custom getstate functions for dwave.cloud.config.models.ClientConfig, dwave.cloud.client.qpu.Client, dwave.cloud.solver.StructuredSolver, dwave.system.samplers.dwave_sampler.DWaveSampler, dwave.system.composites.embedding.FixedEmbeddingComposite have been initialized.
This is the main process
01 {'attrs': {}, 'data': np.bytes_(b'emb_5_5_mm01.h5')}
0 b'emb_5_5_mm01.h5'
((-0.22372882328927518, -0.5845331032760441, -0.3326491601765156, 0.15498154410734077), b'zz_6064717830') ('sets', 'identifiers')
(-0.22372882328927518, -0.5845331032760441, -0.3326491601765156, 0.15498154410734077) ('anneal_offsets_1_qubits', 'anneal_offsets_2_qubits', 'anneal_offsets_3_qubits', 'estimated_runtime')
['anneal_offsets_1_qubits', 'anneal_offsets_2_qubits', 'anneal_offsets_3_qubits']
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6747346934 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_7606317011 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0583988708 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2788338479 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0361306051 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6259398707 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9230029004 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9439544350 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_4285806320 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0277687505 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2260395055 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2239038483 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6835473743 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2871354184 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_1089975612 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6016382926 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_7146200131 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6878848354 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3413098363 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5080149557 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_1078675606 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2344528541 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_7476695043 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0850550946 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3528964636 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2398936663 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6026927798 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0050481658 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0378490713 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2357446328 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3953747332 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0001863196 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_4933543679 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8721690652 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2699010835 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6419836897 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5205717936 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6278981758 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6270472886 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_7471821836 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9489144589 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3918938749 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2654810283 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2068306658 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_4526454422 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5004330110 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0802311939 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8746424212 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6292597806 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_4334158375 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6241994977 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5611322142 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9064081178 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9427452893 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_7720896514 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6882327039 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2258027639 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2791652904 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2921244493 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_7899741822 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6577828538 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_4983060353 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6074050616 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3358737269 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9585089572 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8705539192 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_7988238591 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_1871566606 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8941210343 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8890212945 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_1445418313 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9873706342 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6986245643 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9142185862 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9584060801 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_4282889685 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0946095345 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6368149696 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5857141561 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3147064965 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_4262621135 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9283730726 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5744954469 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0538469761 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_7063111329 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8884820367 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_7350679553 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0163190663 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3591442681 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_1697148923 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9774242506 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3354126626 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_1121819247 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6864603226 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5757275986 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_4863812233 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9489630532 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_1950776516 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8754965043 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_7909671180 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2631571852 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3085251181 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6600677120 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_7591282265 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_4056127159 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0959642795 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2720660293 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6774697119 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5452407354 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9471019571 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0317017085 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0255343551 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8074406757 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_1451684479 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0689312377 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_4090347922 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9812242872 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2487327787 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9504682920 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9439897319 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0295310170 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3387349060 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_1701713947 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5533357779 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8290171268 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2117849290 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8714690430 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_7841130710 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3511504764 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0893645049 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_4167523720 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3527907281 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_4971361908 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0534179516 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3231454862 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2676805068 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8061135779 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5874969018 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6600341654 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8036213424 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_4518778851 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0816389504 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8472903645 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2750285710 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9043043111 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6027592363 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6244783629 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_4660896733 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0690618443 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_4833429819 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3544680810 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0889364291 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5683679450 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6820111222 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0291999630 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9806083889 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8633696827 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_1860673799 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_4496173481 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3984838668 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_7155401937 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_1116142614 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0742356033 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_1686890781 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9425772738 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8678592529 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_7901044990 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2598524958 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6026204315 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8714453254 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3274278151 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6277987427 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_1372475312 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_4171203299 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9220287810 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5365434579 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5971996237 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6489818378 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_4709661397 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_4815697258 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0931578977 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8942337152 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8276325827 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3851427014 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6184411292 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8537666218 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3150467143 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0724324444 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_7827271507 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_7973082253 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8474831389 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5487697862 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3404157325 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3818605985 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5818637686 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8525724730 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0848920188 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2593283829 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3079327571 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5377045315 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_1726102831 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_7625459406 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_7766207770 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0458068226 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_7781104199 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_4413425408 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2992420796 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0285172740 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_1534170724 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_7421375757 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_4197625176 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8229547046 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8661404323 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2290663268 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0085220014 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_7223102935 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5061896232 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_4833824559 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9040679618 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6887129085 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6417317480 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0155935328 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_4355150326 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3319605940 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_7629313757 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_4275832690 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_1916212122 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0609764094 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5314019901 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0651999763 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2868668091 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_7619482988 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_1566314580 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0984166701 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_4213021836 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9713990306 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_7103584348 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_1130858706 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3657359779 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2835206639 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5853151821 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9480036090 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6710953139 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6118499488 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6870904713 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6827423238 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9832808442 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0698736184 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0487520058 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_1208695640 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6935795118 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6255233176 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2236080878 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8530174265 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0140728978 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8100679620 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0446214293 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2497804221 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0318641083 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9818300553 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6269837941 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3559114144 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8129357418 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0180383007 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0602320444 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8821900078 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2362810253 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_4944517933 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_1007359256 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9073880962 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2040850932 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5578972868 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8355420116 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0675013443 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_4978626801 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_4874220685 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0061234211 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6502573580 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5775954040 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5860958113 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3172680174 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_7137191291 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5044724301 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3454216945 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8611608945 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_1357117085 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8281893723 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0616570644 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3202394964 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5249775500 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5309607385 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3545900650 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6575155837 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2959573595 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5096381632 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6731131214 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3451907868 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8267963959 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3242687376 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5125038959 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5347903740 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0437237586 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_4160526692 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6514437321 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_7975579866 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2752062414 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5325823637 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0244546704 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8557696436 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_4820464946 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_1047118313 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8965497403 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9571001973 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_1728207492 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3761453891 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3729648486 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8687733182 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0960471698 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3237559296 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3614144584 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0357328613 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9456648355 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5585617994 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2411961934 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8486709234 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0229631392 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5919623735 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2106543518 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_4790003576 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5768432036 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8770741114 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0167361147 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0857212263 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9009261444 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3593098853 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8519333792 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5060062432 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8522227065 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9358651368 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9027338350 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9188041178 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5478785105 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_7338686412 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5387552259 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9812323767 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8705643469 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_1183798611 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_4337938137 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6252892828 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_1663139989 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8342877442 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_3002816115 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_8979952804 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_6214128419 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_5988593358 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_9085162316 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_0991124024 would be executed
n_qubits_anneal_offsets [['1']]
n_qubits_anneal_offsets [['1'], ['2']]
n_qubits_anneal_offsets [['1'], ['2'], ['3']]
names []
num_particles: 5 nearest_neighbours: 5
max_num_particles: 5
Q
num_reads
label
anneal_offsets
flux_drift_compensation
zz_2486085441 would be executed
358 psets will be executed
num_chunks = 15
__main__
chunk 1 of 15
chunk 2 of 15
chunk 3 of 15
chunk 4 of 15
chunk 5 of 15
chunk 6 of 15
chunk 7 of 15
chunk 8 of 15
no cupy available, imported numpy as usual
Custom getstate functions for dwave.cloud.config.models.ClientConfig, dwave.cloud.client.qpu.Client, dwave.cloud.solver.StructuredSolver, dwave.system.samplers.dwave_sampler.DWaveSampler, dwave.system.composites.embedding.FixedEmbeddingComposite have been initialized.
 Process-1 started with inputs {'print_prefix': ' ', 'kwargs_dwavesampler': {'token': 'JG5Y-1f0a1b755b7b93b5466f23e3abf1c3a1920c15fb', 'region': 'eu-central-1', 'architecture': 'pegasus', 'name': 'Advantage_system5.4'}, 'folder_path_main': '/mnt/RAID/home/adam-1aeqn8vhvpjnv4u/mast_sub5/Quantum_Annealing_for_Particle_Matching/00_tests/01_out/sub_5_3_2', 'info_file_name': 'study_params_sub5_3_2.h5'}
Available solvers based on specifications (client):  [StructuredSolver(id='Advantage_system5.4')]
Chosen solver based on specifications (solver):  StructuredSolver(id='Advantage_system5.4') , status is online:  True
    Solver properties keys:  dict_keys(['num_qubits', 'qubits', 'couplers', 'h_range', 'j_range', 'supported_problem_types', 'parameters', 'vfyc', 'anneal_offset_ranges', 'anneal_offset_step', 'anneal_offset_step_phi0', 'annealing_time_range', 'chip_id', 'default_annealing_time', 'default_programming_thermalization', 'default_readout_thermalization', 'extended_j_range', 'fast_anneal_time_range', 'h_gain_schedule_range', 'max_anneal_schedule_points', 'max_h_gain_schedule_points', 'num_reads_range', 'per_qubit_coupling_range', 'problem_run_duration_range', 'problem_timing_data', 'programming_thermalization_range', 'readout_thermalization_range', 'tags', 'topology', 'category', 'quota_conversion_rate'])
        problem_run_duration_range:  [0.0, 1000000.0]
    Solver parameters keys:  dict_keys(['anneal_offsets', 'anneal_schedule', 'annealing_time', 'answer_mode', 'auto_scale', 'flux_biases', 'flux_drift_compensation', 'h_gain_schedule', 'initial_state', 'max_answers', 'num_reads', 'programming_thermalization', 'readout_thermalization', 'reduce_intersample_correlation', 'reinitialize_state', 'fast_anneal'])
    Solver properties parameters keys:  dict_keys(['anneal_offsets', 'anneal_schedule', 'annealing_time', 'answer_mode', 'auto_scale', 'flux_biases', 'flux_drift_compensation', 'h_gain_schedule', 'initial_state', 'max_answers', 'num_reads', 'programming_thermalization', 'readout_thermalization', 'reduce_intersample_correlation', 'reinitialize_state', 'fast_anneal'])
Execution started.
 starting thread Thread_submittter_000
 start working on problem zz_6747346934
 starting thread Thread_submittter_001
 start working on problem zz_7606317011
 starting thread Thread_submittter_002
 start working on problem zz_0583988708
 starting thread Thread_submittter_003
 start working on problem zz_2788338479
 starting thread Thread_submittter_004
 start working on problem zz_0361306051
 starting thread Thread_submittter_005
 start working on problem zz_6259398707
 starting thread Thread_submittter_006
 start working on problem zz_9230029004
 starting thread Thread_submittter_007
 start working on problem zz_9439544350
 starting thread Thread_writer_000
 starting thread Thread_writer_001
 starting thread Thread_reporter_000
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 problem zz_6259398707 will take can be sampled with a single run
 problem zz_6259398707 will be solved 1 times per run
 start run 0 for problem zz_6259398707
   start samplings 1000 for problem zz_6259398707
sampled for problem zz_6259398707
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 problem zz_0361306051 will take can be sampled with a single run
 problem zz_0361306051 will be solved 1 times per run
 problem zz_2788338479 will take can be sampled with a single run
 problem zz_2788338479 will be solved 1 times per run
 start run 0 for problem zz_0361306051
   start samplings 1000 for problem zz_0361306051
 problem zz_7606317011 will take can be sampled with a single run
 problem zz_7606317011 will be solved 1 times per run
 problem zz_6747346934 will take can be sampled with a single run
 problem zz_6747346934 will be solved 1 times per run
 problem zz_0583988708 will take can be sampled with a single run
 problem zz_0583988708 will be solved 1 times per run
 problem zz_9230029004 will take can be sampled with a single run
 problem zz_9230029004 will be solved 1 times per run
 start run 0 for problem zz_7606317011
   start samplings 1000 for problem zz_7606317011
 problem zz_9439544350 will take can be sampled with a single run
 problem zz_9439544350 will be solved 1 times per run
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6259398707
finished samples sampling for zz_6259398707
 finished run 0 for problem zz_6259398707
 start run 1 for problem zz_6259398707
   start samplings 1000 for problem zz_6259398707
sampled for problem zz_7606317011
sampled for problem zz_0361306051
sampled for problem zz_6259398707
 start run 0 for problem zz_6747346934
   start samplings 1000 for problem zz_6747346934
sampled for problem zz_6747346934
 start run 0 for problem zz_2788338479
   start samplings 1000 for problem zz_2788338479
sampled for problem zz_2788338479
 start run 0 for problem zz_9230029004
   start samplings 1000 for problem zz_9230029004
sampled for problem zz_9230029004
 start run 0 for problem zz_9439544350
   start samplings 1000 for problem zz_9439544350
sampled for problem zz_9439544350
 start run 0 for problem zz_0583988708
   start samplings 1000 for problem zz_0583988708
sampled for problem zz_0583988708
sampled for problem zz_0361306051
finished samples sampling for zz_0361306051
 finished run 0 for problem zz_0361306051
 start run 1 for problem zz_0361306051
   start samplings 1000 for problem zz_0361306051
sampled for problem zz_0361306051
sampled for problem zz_7606317011
finished samples sampling for zz_7606317011
 finished run 0 for problem zz_7606317011
 start run 1 for problem zz_7606317011
   start samplings 1000 for problem zz_7606317011
sampled for problem zz_7606317011
sampled for problem zz_6259398707
finished samples sampling for zz_6259398707
 finished run 1 for problem zz_6259398707
 start run 2 for problem zz_6259398707
   start samplings 1000 for problem zz_6259398707
sampled for problem zz_6259398707
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6747346934
finished samples sampling for zz_6747346934
 finished run 0 for problem zz_6747346934
 start run 1 for problem zz_6747346934
   start samplings 1000 for problem zz_6747346934
sampled for problem zz_6747346934
sampled for problem zz_2788338479
finished samples sampling for zz_2788338479
 finished run 0 for problem zz_2788338479
 start run 1 for problem zz_2788338479
   start samplings 1000 for problem zz_2788338479
sampled for problem zz_2788338479
sampled for problem zz_9230029004
finished samples sampling for zz_9230029004
 finished run 0 for problem zz_9230029004
 start run 1 for problem zz_9230029004
   start samplings 1000 for problem zz_9230029004
sampled for problem zz_9230029004
sampled for problem zz_9439544350
finished samples sampling for zz_9439544350
 finished run 0 for problem zz_9439544350
 start run 1 for problem zz_9439544350
   start samplings 1000 for problem zz_9439544350
sampled for problem zz_9439544350
sampled for problem zz_0583988708
finished samples sampling for zz_0583988708
 finished run 0 for problem zz_0583988708
 start run 1 for problem zz_0583988708
   start samplings 1000 for problem zz_0583988708
sampled for problem zz_0583988708
sampled for problem zz_0361306051
finished samples sampling for zz_0361306051
 finished run 1 for problem zz_0361306051
 start run 2 for problem zz_0361306051
   start samplings 1000 for problem zz_0361306051
sampled for problem zz_0361306051
sampled for problem zz_7606317011
finished samples sampling for zz_7606317011
 finished run 1 for problem zz_7606317011
 start run 2 for problem zz_7606317011
   start samplings 1000 for problem zz_7606317011
sampled for problem zz_7606317011
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6259398707
finished samples sampling for zz_6259398707no cupy available, imported numpy as usual
Custom getstate functions for dwave.cloud.config.models.ClientConfig, dwave.cloud.client.qpu.Client, dwave.cloud.solver.StructuredSolver, dwave.system.samplers.dwave_sampler.DWaveSampler, dwave.system.composites.embedding.FixedEmbeddingComposite have been initialized.
 Process-2 started with inputs {'print_prefix': ' ', 'kwargs_dwavesampler': {'token': 'JG5Y-1f0a1b755b7b93b5466f23e3abf1c3a1920c15fb', 'region': 'eu-central-1', 'architecture': 'pegasus', 'name': 'Advantage_system5.4'}, 'folder_path_main': '/mnt/RAID/home/adam-1aeqn8vhvpjnv4u/mast_sub5/Quantum_Annealing_for_Particle_Matching/00_tests/01_out/sub_5_3_2', 'info_file_name': 'study_params_sub5_3_2.h5'}
Available solvers based on specifications (client):  [StructuredSolver(id='Advantage_system5.4')]
Chosen solver based on specifications (solver):  StructuredSolver(id='Advantage_system5.4') , status is online:  True
    Solver properties keys:  dict_keys(['num_qubits', 'qubits', 'couplers', 'h_range', 'j_range', 'supported_problem_types', 'parameters', 'vfyc', 'anneal_offset_ranges', 'anneal_offset_step', 'anneal_offset_step_phi0', 'annealing_time_range', 'chip_id', 'default_annealing_time', 'default_programming_thermalization', 'default_readout_thermalization', 'extended_j_range', 'fast_anneal_time_range', 'h_gain_schedule_range', 'max_anneal_schedule_points', 'max_h_gain_schedule_points', 'num_reads_range', 'per_qubit_coupling_range', 'problem_run_duration_range', 'problem_timing_data', 'programming_thermalization_range', 'readout_thermalization_range', 'tags', 'topology', 'category', 'quota_conversion_rate'])
        problem_run_duration_range:  [0.0, 1000000.0]
    Solver parameters keys:  dict_keys(['anneal_offsets', 'anneal_schedule', 'annealing_time', 'answer_mode', 'auto_scale', 'flux_biases', 'flux_drift_compensation', 'h_gain_schedule', 'initial_state', 'max_answers', 'num_reads', 'programming_thermalization', 'readout_thermalization', 'reduce_intersample_correlation', 'reinitialize_state', 'fast_anneal'])
    Solver properties parameters keys:  dict_keys(['anneal_offsets', 'anneal_schedule', 'annealing_time', 'answer_mode', 'auto_scale', 'flux_biases', 'flux_drift_compensation', 'h_gain_schedule', 'initial_state', 'max_answers', 'num_reads', 'programming_thermalization', 'readout_thermalization', 'reduce_intersample_correlation', 'reinitialize_state', 'fast_anneal'])
Execution started.
 starting thread Thread_submittter_000
 start working on problem zz_3528964636
 starting thread Thread_submittter_001
 start working on problem zz_2398936663
 starting thread Thread_submittter_002
 start working on problem zz_6026927798
 starting thread Thread_submittter_003
 start working on problem zz_0050481658
 starting thread Thread_submittter_004
 start working on problem zz_0378490713
 starting thread Thread_submittter_005
 start working on problem zz_2357446328
 starting thread Thread_submittter_006
 start working on problem zz_3953747332
 starting thread Thread_submittter_007
 start working on problem zz_0001863196
 starting thread Thread_writer_000
 starting thread Thread_writer_001
 starting thread Thread_reporter_000
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 problem zz_2398936663 will take can be sampled with a single run
 problem zz_2398936663 will be solved 1 times per run
 start run 0 for problem zz_2398936663
   start samplings 1000 for problem zz_2398936663
sampled for problem zz_2398936663
 problem zz_0050481658 will take can be sampled with a single run
 problem zz_0050481658 will be solved 1 times per run
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 start run 0 for problem zz_0050481658
   start samplings 1000 for problem zz_0050481658
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0050481658
 problem zz_2357446328 will take can be sampled with a single run
 problem zz_2357446328 will be solved 1 times per run
 problem zz_0378490713 will take can be sampled with a single run
 problem zz_0378490713 will be solved 1 times per run
 problem zz_3528964636 will take can be sampled with a single run
 problem zz_3528964636 will be solved 1 times per run
 start run 0 for problem zz_2357446328
   start samplings 1000 for problem zz_2357446328
 problem zz_6026927798 will take can be sampled with a single run
 problem zz_6026927798 will be solved 1 times per run
 start run 0 for problem zz_0378490713
   start samplings 1000 for problem zz_0378490713
sampled for problem zz_2398936663
finished samples sampling for zz_2398936663
 finished run 0 for problem zz_2398936663
 start run 1 for problem zz_2398936663
   start samplings 1000 for problem zz_2398936663
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 start run 0 for problem zz_3528964636
   start samplings 1000 for problem zz_3528964636
 problem zz_3953747332 will take can be sampled with a single run
 problem zz_3953747332 will be solved 1 times per run
 start run 0 for problem zz_6026927798
   start samplings 1000 for problem zz_6026927798
sampled for problem zz_0378490713
sampled for problem zz_2398936663
sampled for problem zz_2357446328
 problem zz_0001863196 will take can be sampled with a single run
 problem zz_0001863196 will be solved 1 times per run
sampled for problem zz_3528964636
 start run 0 for problem zz_3953747332
   start samplings 1000 for problem zz_3953747332
sampled for problem zz_6026927798
sampled for problem zz_3953747332
 start run 0 for problem zz_0001863196
   start samplings 1000 for problem zz_0001863196
sampled for problem zz_0001863196
sampled for problem zz_0050481658
finished samples sampling for zz_0050481658
 finished run 0 for problem zz_0050481658
 start run 1 for problem zz_0050481658
   start samplings 1000 for problem zz_0050481658
sampled for problem zz_0050481658
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2398936663
finished samples sampling for zz_2398936663
 finished run 1 for problem zz_2398936663
 start run 2 for problem zz_2398936663
   start samplings 1000 for problem zz_2398936663
sampled for problem zz_2398936663
sampled for problem zz_0378490713
finished samples sampling for zz_0378490713
 finished run 0 for problem zz_0378490713
 start run 1 for problem zz_0378490713
   start samplings 1000 for problem zz_0378490713
sampled for problem zz_0378490713
sampled for problem zz_2357446328
finished samples sampling for zz_2357446328
 finished run 0 for problem zz_2357446328
 start run 1 for problem zz_2357446328
   start samplings 1000 for problem zz_2357446328
sampled for problem zz_2357446328
sampled for problem zz_3528964636
finished samples sampling for zz_3528964636
 finished run 0 for problem zz_3528964636
 start run 1 for problem zz_3528964636
   start samplings 1000 for problem zz_3528964636
sampled for problem zz_3528964636
sampled for problem zz_6026927798
finished samples sampling for zz_6026927798
 finished run 0 for problem zz_6026927798
 start run 1 for problem zz_6026927798
   start samplings 1000 for problem zz_6026927798
sampled for problem zz_6026927798
sampled for problem zz_3953747332
finished samples sampling for zz_3953747332
 finished run 0 for problem zz_3953747332
 start run 1 for problem zz_3953747332
   start samplings 1000 for problem zz_3953747332
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3953747332
sampled for problem zz_0001863196
finished samples sampling for zz_0001863196
 finished run 0 for problem zz_0001863196
 start run 1 for problem zz_0001863196
   start samplings 1000 for problem zz_0001863196
sampled for problem zz_0001863196
sampled for problem zz_0050481658
finished samples sampling for zz_0050481658
 finished run 1 for problem zz_0050481658
 start run 2 for problem zz_0050481658
   start samplings 1000 for problem zz_0050481658
sampled for problem zz_0050481658
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2398936663
finished samples sampling for zz_2398936663
 finished run 2 for problem zz_2398936663
 start run 3 for problem zz_2398936663
   start samplings 1000 for problem zz_2398936663no cupy available, imported numpy as usual
Custom getstate functions for dwave.cloud.config.models.ClientConfig, dwave.cloud.client.qpu.Client, dwave.cloud.solver.StructuredSolver, dwave.system.samplers.dwave_sampler.DWaveSampler, dwave.system.composites.embedding.FixedEmbeddingComposite have been initialized.
 Process-3 started with inputs {'print_prefix': ' ', 'kwargs_dwavesampler': {'token': 'JG5Y-1f0a1b755b7b93b5466f23e3abf1c3a1920c15fb', 'region': 'eu-central-1', 'architecture': 'pegasus', 'name': 'Advantage_system5.4'}, 'folder_path_main': '/mnt/RAID/home/adam-1aeqn8vhvpjnv4u/mast_sub5/Quantum_Annealing_for_Particle_Matching/00_tests/01_out/sub_5_3_2', 'info_file_name': 'study_params_sub5_3_2.h5'}
Available solvers based on specifications (client):  [StructuredSolver(id='Advantage_system5.4')]
Chosen solver based on specifications (solver):  StructuredSolver(id='Advantage_system5.4') , status is online:  True
    Solver properties keys:  dict_keys(['num_qubits', 'qubits', 'couplers', 'h_range', 'j_range', 'supported_problem_types', 'parameters', 'vfyc', 'anneal_offset_ranges', 'anneal_offset_step', 'anneal_offset_step_phi0', 'annealing_time_range', 'chip_id', 'default_annealing_time', 'default_programming_thermalization', 'default_readout_thermalization', 'extended_j_range', 'fast_anneal_time_range', 'h_gain_schedule_range', 'max_anneal_schedule_points', 'max_h_gain_schedule_points', 'num_reads_range', 'per_qubit_coupling_range', 'problem_run_duration_range', 'problem_timing_data', 'programming_thermalization_range', 'readout_thermalization_range', 'tags', 'topology', 'category', 'quota_conversion_rate'])
        problem_run_duration_range:  [0.0, 1000000.0]
    Solver parameters keys:  dict_keys(['anneal_offsets', 'anneal_schedule', 'annealing_time', 'answer_mode', 'auto_scale', 'flux_biases', 'flux_drift_compensation', 'h_gain_schedule', 'initial_state', 'max_answers', 'num_reads', 'programming_thermalization', 'readout_thermalization', 'reduce_intersample_correlation', 'reinitialize_state', 'fast_anneal'])
    Solver properties parameters keys:  dict_keys(['anneal_offsets', 'anneal_schedule', 'annealing_time', 'answer_mode', 'auto_scale', 'flux_biases', 'flux_drift_compensation', 'h_gain_schedule', 'initial_state', 'max_answers', 'num_reads', 'programming_thermalization', 'readout_thermalization', 'reduce_intersample_correlation', 'reinitialize_state', 'fast_anneal'])
Execution started.
 starting thread Thread_submittter_000
 start working on problem zz_6292597806
 starting thread Thread_submittter_001
 start working on problem zz_4334158375
 starting thread Thread_submittter_002
 start working on problem zz_6241994977
 starting thread Thread_submittter_003
 start working on problem zz_5611322142
 starting thread Thread_submittter_004
 start working on problem zz_9064081178
 starting thread Thread_submittter_005
 start working on problem zz_9427452893
 starting thread Thread_submittter_006
 start working on problem zz_7720896514
 starting thread Thread_submittter_007
 start working on problem zz_6882327039
 starting thread Thread_writer_000
 starting thread Thread_writer_001
 starting thread Thread_reporter_000
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 problem zz_6292597806 will take can be sampled with a single run
 problem zz_6292597806 will be solved 1 times per run
 start run 0 for problem zz_6292597806
   start samplings 1000 for problem zz_6292597806
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6292597806
 problem zz_6241994977 will take can be sampled with a single run
 problem zz_6241994977 will be solved 1 times per run
 start run 0 for problem zz_6241994977
   start samplings 1000 for problem zz_6241994977
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6241994977
 problem zz_9427452893 will take can be sampled with a single run
 problem zz_9427452893 will be solved 1 times per run
 problem zz_6882327039 will take can be sampled with a single run
 problem zz_6882327039 will be solved 1 times per run
 problem zz_7720896514 will take can be sampled with a single run
 problem zz_7720896514 will be solved 1 times per run
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 problem zz_4334158375 will take can be sampled with a single run
 problem zz_4334158375 will be solved 1 times per run
 start run 0 for problem zz_9427452893
   start samplings 1000 for problem zz_9427452893
sampled for problem zz_9427452893
 problem zz_9064081178 will take can be sampled with a single run
 problem zz_9064081178 will be solved 1 times per run
 start run 0 for problem zz_6882327039
   start samplings 1000 for problem zz_6882327039
 problem zz_5611322142 will take can be sampled with a single run
 problem zz_5611322142 will be solved 1 times per run
sampled for problem zz_6882327039
 start run 0 for problem zz_4334158375
   start samplings 1000 for problem zz_4334158375
 start run 0 for problem zz_7720896514
   start samplings 1000 for problem zz_7720896514
sampled for problem zz_4334158375
 start run 0 for problem zz_9064081178
   start samplings 1000 for problem zz_9064081178
sampled for problem zz_7720896514
sampled for problem zz_6292597806
finished samples sampling for zz_6292597806
 finished run 0 for problem zz_6292597806
 start run 1 for problem zz_6292597806
   start samplings 1000 for problem zz_6292597806
sampled for problem zz_9064081178
 start run 0 for problem zz_5611322142
   start samplings 1000 for problem zz_5611322142
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5611322142
sampled for problem zz_6292597806
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6241994977
finished samples sampling for zz_6241994977
 finished run 0 for problem zz_6241994977
 start run 1 for problem zz_6241994977
   start samplings 1000 for problem zz_6241994977
sampled for problem zz_6241994977
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9427452893
finished samples sampling for zz_9427452893
 finished run 0 for problem zz_9427452893
 start run 1 for problem zz_9427452893
   start samplings 1000 for problem zz_9427452893
sampled for problem zz_9427452893
sampled for problem zz_6882327039
finished samples sampling for zz_6882327039
 finished run 0 for problem zz_6882327039
 start run 1 for problem zz_6882327039
   start samplings 1000 for problem zz_6882327039
sampled for problem zz_6882327039
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_4334158375
finished samples sampling for zz_4334158375
 finished run 0 for problem zz_4334158375
 start run 1 for problem zz_4334158375
   start samplings 1000 for problem zz_4334158375
sampled for problem zz_4334158375
sampled for problem zz_7720896514
finished samples sampling for zz_7720896514
 finished run 0 for problem zz_7720896514
 start run 1 for problem zz_7720896514
   start samplings 1000 for problem zz_7720896514
sampled for problem zz_7720896514
sampled for problem zz_9064081178
finished samples sampling for zz_9064081178
 finished run 0 for problem zz_9064081178
 start run 1 for problem zz_9064081178
   start samplings 1000 for problem zz_9064081178
sampled for problem zz_9064081178
sampled for problem zz_5611322142
finished samples sampling for zz_5611322142
 finished run 0 for problem zz_5611322142
 start run 1 for problem zz_5611322142
   start samplings 1000 for problem zz_5611322142
sampled for problem zz_5611322142
sampled for problem zz_6292597806
finished samples sampling for zz_6292597806
 finished run 1 for problem zz_6292597806
 start run 2 for problem zz_6292597806
   start samplings 1000 for problem zz_6292597806
sampled for problem zz_6292597806
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6241994977
finished samples sampling for zz_6241994977
 finished run 1 for problem zz_6241994977
 start run 2 for problem zz_6241994977
   start samplings 1000 for problem zz_6241994977
sampled for problem zz_6241994977
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 finished run 2 for problem zz_6259398707
 start run 3 for problem zz_6259398707
   start samplings 1000 for problem zz_6259398707
sampled for problem zz_6259398707
sampled for problem zz_6747346934
finished samples sampling for zz_6747346934
 finished run 1 for problem zz_6747346934
 start run 2 for problem zz_6747346934
   start samplings 1000 for problem zz_6747346934
sampled for problem zz_6747346934
sampled for problem zz_2788338479
finished samples sampling for zz_2788338479
 finished run 1 for problem zz_2788338479
 start run 2 for problem zz_2788338479
   start samplings 1000 for problem zz_2788338479
sampled for problem zz_2788338479
sampled for problem zz_9230029004
finished samples sampling for zz_9230029004
 finished run 1 for problem zz_9230029004
 start run 2 for problem zz_9230029004
   start samplings 1000 for problem zz_9230029004
sampled for problem zz_9230029004
sampled for problem zz_9439544350
finished samples sampling for zz_9439544350
 finished run 1 for problem zz_9439544350
 start run 2 for problem zz_9439544350
   start samplings 1000 for problem zz_9439544350
sampled for problem zz_9439544350
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0583988708
finished samples sampling for zz_0583988708
 finished run 1 for problem zz_0583988708
 start run 2 for problem zz_0583988708
   start samplings 1000 for problem zz_0583988708
sampled for problem zz_0583988708
sampled for problem zz_0361306051
finished samples sampling for zz_0361306051
 finished run 2 for problem zz_0361306051
 start run 3 for problem zz_0361306051
   start samplings 1000 for problem zz_0361306051
sampled for problem zz_0361306051
sampled for problem zz_7606317011
finished samples sampling for zz_7606317011
 finished run 2 for problem zz_7606317011
 start run 3 for problem zz_7606317011
   start samplings 1000 for problem zz_7606317011
sampled for problem zz_7606317011
sampled for problem zz_6259398707
finished samples sampling for zz_6259398707
 finished run 3 for problem zz_6259398707
 start run 4 for problem zz_6259398707
   start samplings 1000 for problem zz_6259398707
sampled for problem zz_6259398707
sampled for problem zz_6747346934
finished samples sampling for zz_6747346934
 finished run 2 for problem zz_6747346934
 start run 3 for problem zz_6747346934
   start samplings 1000 for problem zz_6747346934
sampled for problem zz_6747346934
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2788338479
finished samples sampling for zz_2788338479
 finished run 2 for problem zz_2788338479
 start run 3 for problem zz_2788338479
   start samplings 1000 for problem zz_2788338479
sampled for problem zz_2788338479
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9230029004
finished samples sampling for zz_9230029004
 finished run 2 for problem zz_9230029004
 start run 3 for problem zz_9230029004
   start samplings 1000 for problem zz_9230029004
sampled for problem zz_9230029004
sampled for problem zz_9439544350
finished samples sampling for zz_9439544350
 finished run 2 for problem zz_9439544350
 start run 3 for problem zz_9439544350
   start samplings 1000 for problem zz_9439544350
sampled for problem zz_9439544350
sampled for problem zz_0583988708
finished samples sampling for zz_0583988708
 finished run 2 for problem zz_0583988708
 start run 3 for problem zz_0583988708
   start samplings 1000 for problem zz_0583988708
sampled for problem zz_0583988708
sampled for problem zz_0361306051
finished samples sampling for zz_0361306051
 finished run 3 for problem zz_0361306051
 start run 4 for problem zz_0361306051
   start samplings 1000 for problem zz_0361306051
sampled for problem zz_0361306051
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_7606317011
finished samples sampling for zz_7606317011
 finished run 3 for problem zz_7606317011
 start run 4 for problem zz_7606317011
   start samplings 1000 for problem zz_7606317011
sampled for problem zz_7606317011
sampled for problem zz_6259398707
finished samples sampling for zz_6259398707
 finished run 4 for problem zz_6259398707
 start run 5 for problem zz_6259398707
   start samplings 1000 for problem zz_6259398707
sampled for problem zz_6259398707
sampled for problem zz_6747346934
finished samples sampling for zz_6747346934
 finished run 3 for problem zz_6747346934
 start run 4 for problem zz_6747346934
   start samplings 1000 for problem zz_6747346934
sampled for problem zz_6747346934
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2788338479
finished samples sampling for zz_2788338479
 finished run 3 for problem zz_2788338479
 start run 4 for problem zz_2788338479
   start samplings 1000 for problem zz_2788338479
sampled for problem zz_2788338479
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9230029004
finished samples sampling for zz_9230029004
 finished run 3 for problem zz_9230029004
 start run 4 for problem zz_9230029004
   start samplings 1000 for problem zz_9230029004
sampled for problem zz_9230029004
sampled for problem zz_9439544350
finished samples sampling for zz_9439544350
 finished run 3 for problem zz_9439544350
 start run 4 for problem zz_9439544350
   start samplings 1000 for problem zz_9439544350
sampled for problem zz_9439544350
sampled for problem zz_0583988708
finished samples sampling for zz_0583988708
 finished run 3 for problem zz_0583988708
 start run 4 for problem zz_0583988708
   start samplings 1000 for problem zz_0583988708
sampled for problem zz_0583988708
sampled for problem zz_0361306051
finished samples sampling for zz_0361306051
 finished run 4 for problem zz_0361306051
 start run 5 for problem zz_0361306051
   start samplings 1000 for problem zz_0361306051
sampled for problem zz_0361306051
sampled for problem zz_7606317011
finished samples sampling for zz_7606317011
 finished run 4 for problem zz_7606317011
 start run 5 for problem zz_7606317011
   start samplings 1000 for problem zz_7606317011
sampled for problem zz_7606317011
sampled for problem zz_6259398707
finished samples sampling for zz_6259398707
 finished run 5 for problem zz_6259398707
 start run 6 for problem zz_6259398707
   start samplings 1000 for problem zz_6259398707
sampled for problem zz_6259398707
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6747346934
finished samples sampling for zz_6747346934
 finished run 4 for problem zz_6747346934
 start run 5 for problem zz_6747346934
   start samplings 1000 for problem zz_6747346934
sampled for problem zz_6747346934
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2788338479
finished samples sampling for zz_2788338479
 finished run 4 for problem zz_2788338479
 start run 5 for problem zz_2788338479
   start samplings 1000 for problem zz_2788338479
sampled for problem zz_2788338479
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9230029004
finished samples sampling for zz_9230029004
 finished run 4 for problem zz_9230029004
 start run 5 for problem zz_9230029004
   start samplings 1000 for problem zz_9230029004
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9230029004
sampled for problem zz_9439544350
finished samples sampling for zz_9439544350
 finished run 4 for problem zz_9439544350
 start run 5 for problem zz_9439544350
   start samplings 1000 for problem zz_9439544350
sampled for problem zz_9439544350
sampled for problem zz_0583988708
finished samples sampling for zz_0583988708
 finished run 4 for problem zz_0583988708
 start run 5 for problem zz_0583988708
   start samplings 1000 for problem zz_0583988708
sampled for problem zz_0583988708
sampled for problem zz_0361306051
finished samples sampling for zz_0361306051
 finished run 5 for problem zz_0361306051
 start run 6 for problem zz_0361306051
   start samplings 1000 for problem zz_0361306051no cupy available, imported numpy as usual
Custom getstate functions for dwave.cloud.config.models.ClientConfig, dwave.cloud.client.qpu.Client, dwave.cloud.solver.StructuredSolver, dwave.system.samplers.dwave_sampler.DWaveSampler, dwave.system.composites.embedding.FixedEmbeddingComposite have been initialized.
 Process-4 started with inputs {'print_prefix': ' ', 'kwargs_dwavesampler': {'token': 'JG5Y-1f0a1b755b7b93b5466f23e3abf1c3a1920c15fb', 'region': 'eu-central-1', 'architecture': 'pegasus', 'name': 'Advantage_system5.4'}, 'folder_path_main': '/mnt/RAID/home/adam-1aeqn8vhvpjnv4u/mast_sub5/Quantum_Annealing_for_Particle_Matching/00_tests/01_out/sub_5_3_2', 'info_file_name': 'study_params_sub5_3_2.h5'}
Available solvers based on specifications (client):  [StructuredSolver(id='Advantage_system5.4')]
Chosen solver based on specifications (solver):  StructuredSolver(id='Advantage_system5.4') , status is online:  True
    Solver properties keys:  dict_keys(['num_qubits', 'qubits', 'couplers', 'h_range', 'j_range', 'supported_problem_types', 'parameters', 'vfyc', 'anneal_offset_ranges', 'anneal_offset_step', 'anneal_offset_step_phi0', 'annealing_time_range', 'chip_id', 'default_annealing_time', 'default_programming_thermalization', 'default_readout_thermalization', 'extended_j_range', 'fast_anneal_time_range', 'h_gain_schedule_range', 'max_anneal_schedule_points', 'max_h_gain_schedule_points', 'num_reads_range', 'per_qubit_coupling_range', 'problem_run_duration_range', 'problem_timing_data', 'programming_thermalization_range', 'readout_thermalization_range', 'tags', 'topology', 'category', 'quota_conversion_rate'])
        problem_run_duration_range:  [0.0, 1000000.0]
    Solver parameters keys:  dict_keys(['anneal_offsets', 'anneal_schedule', 'annealing_time', 'answer_mode', 'auto_scale', 'flux_biases', 'flux_drift_compensation', 'h_gain_schedule', 'initial_state', 'max_answers', 'num_reads', 'programming_thermalization', 'readout_thermalization', 'reduce_intersample_correlation', 'reinitialize_state', 'fast_anneal'])
    Solver properties parameters keys:  dict_keys(['anneal_offsets', 'anneal_schedule', 'annealing_time', 'answer_mode', 'auto_scale', 'flux_biases', 'flux_drift_compensation', 'h_gain_schedule', 'initial_state', 'max_answers', 'num_reads', 'programming_thermalization', 'readout_thermalization', 'reduce_intersample_correlation', 'reinitialize_state', 'fast_anneal'])
Execution started.
 starting thread Thread_submittter_000
 start working on problem zz_6986245643
 starting thread Thread_submittter_001
 start working on problem zz_9142185862
 starting thread Thread_submittter_002
 start working on problem zz_9584060801
 starting thread Thread_submittter_003
 start working on problem zz_4282889685
 starting thread Thread_submittter_004
 start working on problem zz_0946095345
 starting thread Thread_submittter_005
 start working on problem zz_6368149696
 starting thread Thread_submittter_006
 start working on problem zz_5857141561
 starting thread Thread_submittter_007
 start working on problem zz_3147064965
 starting thread Thread_writer_000
 starting thread Thread_writer_001
 starting thread Thread_reporter_000
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 problem zz_9584060801 will take can be sampled with a single run
 problem zz_9584060801 will be solved 1 times per run
 start run 0 for problem zz_9584060801
   start samplings 1000 for problem zz_9584060801
sampled for problem zz_9584060801
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 problem zz_5857141561 will take can be sampled with a single run
 problem zz_5857141561 will be solved 1 times per run
 problem zz_9142185862 will take can be sampled with a single run
 problem zz_9142185862 will be solved 1 times per run
 problem zz_6986245643 will take can be sampled with a single run
 problem zz_6986245643 will be solved 1 times per run
 start run 0 for problem zz_5857141561
   start samplings 1000 for problem zz_5857141561
 problem zz_3147064965 will take can be sampled with a single run
 problem zz_3147064965 will be solved 1 times per run
 problem zz_4282889685 will take can be sampled with a single run
 problem zz_4282889685 will be solved 1 times per run
 problem zz_0946095345 will take can be sampled with a single run
 problem zz_0946095345 will be solved 1 times per run
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 start run 0 for problem zz_9142185862
   start samplings 1000 for problem zz_9142185862
sampled for problem zz_5857141561
sampled for problem zz_9142185862
 start run 0 for problem zz_6986245643
   start samplings 1000 for problem zz_6986245643
 problem zz_6368149696 will take can be sampled with a single run
 problem zz_6368149696 will be solved 1 times per run
 start run 0 for problem zz_3147064965
   start samplings 1000 for problem zz_3147064965
 start run 0 for problem zz_4282889685
   start samplings 1000 for problem zz_4282889685
sampled for problem zz_6986245643
sampled for problem zz_3147064965
sampled for problem zz_9584060801
finished samples sampling for zz_9584060801
 finished run 0 for problem zz_9584060801
 start run 1 for problem zz_9584060801
   start samplings 1000 for problem zz_9584060801
 start run 0 for problem zz_0946095345
   start samplings 1000 for problem zz_0946095345
sampled for problem zz_4282889685
sampled for problem zz_9584060801
sampled for problem zz_0946095345
 start run 0 for problem zz_6368149696
   start samplings 1000 for problem zz_6368149696
sampled for problem zz_6368149696
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5857141561
finished samples sampling for zz_5857141561
 finished run 0 for problem zz_5857141561
 start run 1 for problem zz_5857141561
   start samplings 1000 for problem zz_5857141561
sampled for problem zz_5857141561
sampled for problem zz_9142185862
finished samples sampling for zz_9142185862
 finished run 0 for problem zz_9142185862
 start run 1 for problem zz_9142185862
   start samplings 1000 for problem zz_9142185862
sampled for problem zz_9142185862
sampled for problem zz_6986245643
finished samples sampling for zz_6986245643
 finished run 0 for problem zz_6986245643
 start run 1 for problem zz_6986245643
   start samplings 1000 for problem zz_6986245643
sampled for problem zz_6986245643
sampled for problem zz_9584060801
finished samples sampling for zz_9584060801
 finished run 1 for problem zz_9584060801
 start run 2 for problem zz_9584060801
   start samplings 1000 for problem zz_9584060801
sampled for problem zz_9584060801
sampled for problem zz_4282889685
finished samples sampling for zz_4282889685
 finished run 0 for problem zz_4282889685
 start run 1 for problem zz_4282889685
   start samplings 1000 for problem zz_4282889685
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_4282889685
sampled for problem zz_3147064965
finished samples sampling for zz_3147064965
 finished run 0 for problem zz_3147064965
 start run 1 for problem zz_3147064965
   start samplings 1000 for problem zz_3147064965
sampled for problem zz_3147064965
sampled for problem zz_0946095345
finished samples sampling for zz_0946095345
 finished run 0 for problem zz_0946095345
 start run 1 for problem zz_0946095345
   start samplings 1000 for problem zz_0946095345
sampled for problem zz_0946095345
sampled for problem zz_6368149696
finished samples sampling for zz_6368149696
 finished run 0 for problem zz_6368149696
 start run 1 for problem zz_6368149696
   start samplings 1000 for problem zz_6368149696
sampled for problem zz_6368149696
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5857141561
finished samples sampling for zz_5857141561no cupy available, imported numpy as usual
Custom getstate functions for dwave.cloud.config.models.ClientConfig, dwave.cloud.client.qpu.Client, dwave.cloud.solver.StructuredSolver, dwave.system.samplers.dwave_sampler.DWaveSampler, dwave.system.composites.embedding.FixedEmbeddingComposite have been initialized.
 Process-5 started with inputs {'print_prefix': ' ', 'kwargs_dwavesampler': {'token': 'JG5Y-1f0a1b755b7b93b5466f23e3abf1c3a1920c15fb', 'region': 'eu-central-1', 'architecture': 'pegasus', 'name': 'Advantage_system5.4'}, 'folder_path_main': '/mnt/RAID/home/adam-1aeqn8vhvpjnv4u/mast_sub5/Quantum_Annealing_for_Particle_Matching/00_tests/01_out/sub_5_3_2', 'info_file_name': 'study_params_sub5_3_2.h5'}
Available solvers based on specifications (client):  [StructuredSolver(id='Advantage_system5.4')]
Chosen solver based on specifications (solver):  StructuredSolver(id='Advantage_system5.4') , status is online:  True
    Solver properties keys:  dict_keys(['num_qubits', 'qubits', 'couplers', 'h_range', 'j_range', 'supported_problem_types', 'parameters', 'vfyc', 'anneal_offset_ranges', 'anneal_offset_step', 'anneal_offset_step_phi0', 'annealing_time_range', 'chip_id', 'default_annealing_time', 'default_programming_thermalization', 'default_readout_thermalization', 'extended_j_range', 'fast_anneal_time_range', 'h_gain_schedule_range', 'max_anneal_schedule_points', 'max_h_gain_schedule_points', 'num_reads_range', 'per_qubit_coupling_range', 'problem_run_duration_range', 'problem_timing_data', 'programming_thermalization_range', 'readout_thermalization_range', 'tags', 'topology', 'category', 'quota_conversion_rate'])
        problem_run_duration_range:  [0.0, 1000000.0]
    Solver parameters keys:  dict_keys(['anneal_offsets', 'anneal_schedule', 'annealing_time', 'answer_mode', 'auto_scale', 'flux_biases', 'flux_drift_compensation', 'h_gain_schedule', 'initial_state', 'max_answers', 'num_reads', 'programming_thermalization', 'readout_thermalization', 'reduce_intersample_correlation', 'reinitialize_state', 'fast_anneal'])
    Solver properties parameters keys:  dict_keys(['anneal_offsets', 'anneal_schedule', 'annealing_time', 'answer_mode', 'auto_scale', 'flux_biases', 'flux_drift_compensation', 'h_gain_schedule', 'initial_state', 'max_answers', 'num_reads', 'programming_thermalization', 'readout_thermalization', 'reduce_intersample_correlation', 'reinitialize_state', 'fast_anneal'])
Execution started.
 starting thread Thread_submittter_000
 start working on problem zz_9489630532
 starting thread Thread_submittter_001
 start working on problem zz_1950776516
 starting thread Thread_submittter_002
 start working on problem zz_8754965043
 starting thread Thread_submittter_003
 start working on problem zz_7909671180
 starting thread Thread_submittter_004
 start working on problem zz_2631571852
 starting thread Thread_submittter_005
 start working on problem zz_3085251181
 starting thread Thread_submittter_006
 start working on problem zz_6600677120
 starting thread Thread_submittter_007
 start working on problem zz_7591282265
 starting thread Thread_writer_000
 starting thread Thread_writer_001
 starting thread Thread_reporter_000
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 problem zz_9489630532 will take can be sampled with a single run
 problem zz_9489630532 will be solved 1 times per run
 start run 0 for problem zz_9489630532
   start samplings 1000 for problem zz_9489630532
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9489630532
 problem zz_3085251181 will take can be sampled with a single run
 problem zz_3085251181 will be solved 1 times per run
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 start run 0 for problem zz_3085251181
   start samplings 1000 for problem zz_3085251181
 problem zz_2631571852 will take can be sampled with a single run
 problem zz_2631571852 will be solved 1 times per run
 problem zz_1950776516 will take can be sampled with a single run
 problem zz_1950776516 will be solved 1 times per run
 start run 0 for problem zz_2631571852
   start samplings 1000 for problem zz_2631571852
 problem zz_7909671180 will take can be sampled with a single run
 problem zz_7909671180 will be solved 1 times per run
sampled for problem zz_3085251181
 problem zz_6600677120 will take can be sampled with a single run
 problem zz_6600677120 will be solved 1 times per run
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2631571852
 problem zz_7591282265 will take can be sampled with a single run
 problem zz_7591282265 will be solved 1 times per run
 start run 0 for problem zz_1950776516
   start samplings 1000 for problem zz_1950776516
 problem zz_8754965043 will take can be sampled with a single run
 problem zz_8754965043 will be solved 1 times per run
 start run 0 for problem zz_7909671180
   start samplings 1000 for problem zz_7909671180
sampled for problem zz_1950776516
 start run 0 for problem zz_6600677120
   start samplings 1000 for problem zz_6600677120
sampled for problem zz_7909671180
 start run 0 for problem zz_7591282265
   start samplings 1000 for problem zz_7591282265
sampled for problem zz_6600677120
sampled for problem zz_7591282265
 start run 0 for problem zz_8754965043
   start samplings 1000 for problem zz_8754965043
sampled for problem zz_8754965043
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9489630532
finished samples sampling for zz_9489630532
 finished run 0 for problem zz_9489630532
 start run 1 for problem zz_9489630532
   start samplings 1000 for problem zz_9489630532
sampled for problem zz_9489630532
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3085251181
finished samples sampling for zz_3085251181
 finished run 0 for problem zz_3085251181
 start run 1 for problem zz_3085251181
   start samplings 1000 for problem zz_3085251181
sampled for problem zz_3085251181
sampled for problem zz_2631571852
finished samples sampling for zz_2631571852
 finished run 0 for problem zz_2631571852
 start run 1 for problem zz_2631571852
   start samplings 1000 for problem zz_2631571852
sampled for problem zz_2631571852
sampled for problem zz_1950776516
finished samples sampling for zz_1950776516
 finished run 0 for problem zz_1950776516
 start run 1 for problem zz_1950776516
   start samplings 1000 for problem zz_1950776516
sampled for problem zz_1950776516
sampled for problem zz_7909671180
finished samples sampling for zz_7909671180
 finished run 0 for problem zz_7909671180
 start run 1 for problem zz_7909671180
   start samplings 1000 for problem zz_7909671180
sampled for problem zz_7909671180
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6600677120
finished samples sampling for zz_6600677120
 finished run 0 for problem zz_6600677120
 start run 1 for problem zz_6600677120
   start samplings 1000 for problem zz_6600677120
sampled for problem zz_6600677120
sampled for problem zz_7591282265
finished samples sampling for zz_7591282265
 finished run 0 for problem zz_7591282265
 start run 1 for problem zz_7591282265
   start samplings 1000 for problem zz_7591282265
sampled for problem zz_7591282265
sampled for problem zz_8754965043
finished samples sampling for zz_8754965043
 finished run 0 for problem zz_8754965043
 start run 1 for problem zz_8754965043
   start samplings 1000 for problem zz_8754965043
sampled for problem zz_8754965043
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9489630532
finished samples sampling for zz_9489630532
 finished run 1 for problem zz_9489630532
 start run 2 for problem zz_9489630532
   start samplings 1000 for problem zz_9489630532
sampled for problem zz_9489630532
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0no cupy available, imported numpy as usual
Custom getstate functions for dwave.cloud.config.models.ClientConfig, dwave.cloud.client.qpu.Client, dwave.cloud.solver.StructuredSolver, dwave.system.samplers.dwave_sampler.DWaveSampler, dwave.system.composites.embedding.FixedEmbeddingComposite have been initialized.
 Process-6 started with inputs {'print_prefix': ' ', 'kwargs_dwavesampler': {'token': 'JG5Y-1f0a1b755b7b93b5466f23e3abf1c3a1920c15fb', 'region': 'eu-central-1', 'architecture': 'pegasus', 'name': 'Advantage_system5.4'}, 'folder_path_main': '/mnt/RAID/home/adam-1aeqn8vhvpjnv4u/mast_sub5/Quantum_Annealing_for_Particle_Matching/00_tests/01_out/sub_5_3_2', 'info_file_name': 'study_params_sub5_3_2.h5'}
Available solvers based on specifications (client):  [StructuredSolver(id='Advantage_system5.4')]
Chosen solver based on specifications (solver):  StructuredSolver(id='Advantage_system5.4') , status is online:  True
    Solver properties keys:  dict_keys(['num_qubits', 'qubits', 'couplers', 'h_range', 'j_range', 'supported_problem_types', 'parameters', 'vfyc', 'anneal_offset_ranges', 'anneal_offset_step', 'anneal_offset_step_phi0', 'annealing_time_range', 'chip_id', 'default_annealing_time', 'default_programming_thermalization', 'default_readout_thermalization', 'extended_j_range', 'fast_anneal_time_range', 'h_gain_schedule_range', 'max_anneal_schedule_points', 'max_h_gain_schedule_points', 'num_reads_range', 'per_qubit_coupling_range', 'problem_run_duration_range', 'problem_timing_data', 'programming_thermalization_range', 'readout_thermalization_range', 'tags', 'topology', 'category', 'quota_conversion_rate'])
        problem_run_duration_range:  [0.0, 1000000.0]
    Solver parameters keys:  dict_keys(['anneal_offsets', 'anneal_schedule', 'annealing_time', 'answer_mode', 'auto_scale', 'flux_biases', 'flux_drift_compensation', 'h_gain_schedule', 'initial_state', 'max_answers', 'num_reads', 'programming_thermalization', 'readout_thermalization', 'reduce_intersample_correlation', 'reinitialize_state', 'fast_anneal'])
    Solver properties parameters keys:  dict_keys(['anneal_offsets', 'anneal_schedule', 'annealing_time', 'answer_mode', 'auto_scale', 'flux_biases', 'flux_drift_compensation', 'h_gain_schedule', 'initial_state', 'max_answers', 'num_reads', 'programming_thermalization', 'readout_thermalization', 'reduce_intersample_correlation', 'reinitialize_state', 'fast_anneal'])
Execution started.
 starting thread Thread_submittter_000
 start working on problem zz_0295310170
 starting thread Thread_submittter_001
 start working on problem zz_3387349060
 starting thread Thread_submittter_002
 start working on problem zz_1701713947
 starting thread Thread_submittter_003
 start working on problem zz_5533357779
 starting thread Thread_submittter_004
 start working on problem zz_8290171268
 starting thread Thread_submittter_005
 start working on problem zz_2117849290
 starting thread Thread_submittter_006
 start working on problem zz_8714690430
 starting thread Thread_submittter_007
 start working on problem zz_7841130710
 starting thread Thread_writer_000
 starting thread Thread_writer_001
 starting thread Thread_reporter_000
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 problem zz_3387349060 will take can be sampled with a single run
 problem zz_3387349060 will be solved 1 times per run
 problem zz_1701713947 will take can be sampled with a single run
 problem zz_1701713947 will be solved 1 times per run
 problem zz_0295310170 will take can be sampled with a single run
 problem zz_0295310170 will be solved 1 times per run
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 start run 0 for problem zz_3387349060
   start samplings 1000 for problem zz_3387349060
 problem zz_5533357779 will take can be sampled with a single run
 problem zz_5533357779 will be solved 1 times per run
 start run 0 for problem zz_1701713947
   start samplings 1000 for problem zz_1701713947
sampled for problem zz_3387349060
sampled for problem zz_1701713947
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 problem zz_8714690430 will take can be sampled with a single run
 problem zz_8714690430 will be solved 1 times per run
 problem zz_7841130710 will take can be sampled with a single run
 problem zz_7841130710 will be solved 1 times per run
 start run 0 for problem zz_0295310170
   start samplings 1000 for problem zz_0295310170
 problem zz_2117849290 will take can be sampled with a single run
 problem zz_2117849290 will be solved 1 times per run
 start run 0 for problem zz_5533357779
   start samplings 1000 for problem zz_5533357779
 problem zz_8290171268 will take can be sampled with a single run
 problem zz_8290171268 will be solved 1 times per run
sampled for problem zz_0295310170
 start run 0 for problem zz_8714690430
   start samplings 1000 for problem zz_8714690430
sampled for problem zz_5533357779
 start run 0 for problem zz_2117849290
   start samplings 1000 for problem zz_2117849290
 start run 0 for problem zz_7841130710
   start samplings 1000 for problem zz_7841130710
sampled for problem zz_8714690430
sampled for problem zz_2117849290
 start run 0 for problem zz_8290171268
   start samplings 1000 for problem zz_8290171268
sampled for problem zz_7841130710
sampled for problem zz_8290171268
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3387349060
finished samples sampling for zz_3387349060
 finished run 0 for problem zz_3387349060
 start run 1 for problem zz_3387349060
   start samplings 1000 for problem zz_3387349060
sampled for problem zz_3387349060
sampled for problem zz_1701713947
finished samples sampling for zz_1701713947
 finished run 0 for problem zz_1701713947
 start run 1 for problem zz_1701713947
   start samplings 1000 for problem zz_1701713947
sampled for problem zz_1701713947
sampled for problem zz_0295310170
finished samples sampling for zz_0295310170
 finished run 0 for problem zz_0295310170
 start run 1 for problem zz_0295310170
   start samplings 1000 for problem zz_0295310170
sampled for problem zz_0295310170
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5533357779
finished samples sampling for zz_5533357779
 finished run 0 for problem zz_5533357779
 start run 1 for problem zz_5533357779
   start samplings 1000 for problem zz_5533357779
sampled for problem zz_5533357779
sampled for problem zz_2117849290
finished samples sampling for zz_2117849290
 finished run 0 for problem zz_2117849290
 start run 1 for problem zz_2117849290
   start samplings 1000 for problem zz_2117849290
sampled for problem zz_2117849290
sampled for problem zz_8714690430
finished samples sampling for zz_8714690430
 finished run 0 for problem zz_8714690430
 start run 1 for problem zz_8714690430
   start samplings 1000 for problem zz_8714690430
sampled for problem zz_8714690430
sampled for problem zz_7841130710
finished samples sampling for zz_7841130710
 finished run 0 for problem zz_7841130710
 start run 1 for problem zz_7841130710
   start samplings 1000 for problem zz_7841130710
sampled for problem zz_7841130710
sampled for problem zz_8290171268
finished samples sampling for zz_8290171268
 finished run 0 for problem zz_8290171268
 start run 1 for problem zz_8290171268
   start samplings 1000 for problem zz_8290171268
sampled for problem zz_8290171268
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0no cupy available, imported numpy as usual
Custom getstate functions for dwave.cloud.config.models.ClientConfig, dwave.cloud.client.qpu.Client, dwave.cloud.solver.StructuredSolver, dwave.system.samplers.dwave_sampler.DWaveSampler, dwave.system.composites.embedding.FixedEmbeddingComposite have been initialized.
 Process-7 started with inputs {'print_prefix': ' ', 'kwargs_dwavesampler': {'token': 'JG5Y-1f0a1b755b7b93b5466f23e3abf1c3a1920c15fb', 'region': 'eu-central-1', 'architecture': 'pegasus', 'name': 'Advantage_system5.4'}, 'folder_path_main': '/mnt/RAID/home/adam-1aeqn8vhvpjnv4u/mast_sub5/Quantum_Annealing_for_Particle_Matching/00_tests/01_out/sub_5_3_2', 'info_file_name': 'study_params_sub5_3_2.h5'}
Available solvers based on specifications (client):  [StructuredSolver(id='Advantage_system5.4')]
Chosen solver based on specifications (solver):  StructuredSolver(id='Advantage_system5.4') , status is online:  True
    Solver properties keys:  dict_keys(['num_qubits', 'qubits', 'couplers', 'h_range', 'j_range', 'supported_problem_types', 'parameters', 'vfyc', 'anneal_offset_ranges', 'anneal_offset_step', 'anneal_offset_step_phi0', 'annealing_time_range', 'chip_id', 'default_annealing_time', 'default_programming_thermalization', 'default_readout_thermalization', 'extended_j_range', 'fast_anneal_time_range', 'h_gain_schedule_range', 'max_anneal_schedule_points', 'max_h_gain_schedule_points', 'num_reads_range', 'per_qubit_coupling_range', 'problem_run_duration_range', 'problem_timing_data', 'programming_thermalization_range', 'readout_thermalization_range', 'tags', 'topology', 'category', 'quota_conversion_rate'])
        problem_run_duration_range:  [0.0, 1000000.0]
    Solver parameters keys:  dict_keys(['anneal_offsets', 'anneal_schedule', 'annealing_time', 'answer_mode', 'auto_scale', 'flux_biases', 'flux_drift_compensation', 'h_gain_schedule', 'initial_state', 'max_answers', 'num_reads', 'programming_thermalization', 'readout_thermalization', 'reduce_intersample_correlation', 'reinitialize_state', 'fast_anneal'])
    Solver properties parameters keys:  dict_keys(['anneal_offsets', 'anneal_schedule', 'annealing_time', 'answer_mode', 'auto_scale', 'flux_biases', 'flux_drift_compensation', 'h_gain_schedule', 'initial_state', 'max_answers', 'num_reads', 'programming_thermalization', 'readout_thermalization', 'reduce_intersample_correlation', 'reinitialize_state', 'fast_anneal'])
Execution started.
 starting thread Thread_submittter_000
 start working on problem zz_9043043111
 starting thread Thread_submittter_001
 start working on problem zz_6027592363
 starting thread Thread_submittter_002
 start working on problem zz_6244783629
 starting thread Thread_submittter_003
 start working on problem zz_4660896733
 starting thread Thread_submittter_004
 start working on problem zz_0690618443
 starting thread Thread_submittter_005
 start working on problem zz_4833429819
 starting thread Thread_submittter_006
 start working on problem zz_3544680810
 starting thread Thread_submittter_007
 start working on problem zz_0889364291
 starting thread Thread_writer_000
 starting thread Thread_writer_001
 starting thread Thread_reporter_000
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 problem zz_6244783629 will take can be sampled with a single run
 problem zz_6244783629 will be solved 1 times per run
 start run 0 for problem zz_6244783629
   start samplings 1000 for problem zz_6244783629
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6244783629
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 problem zz_3544680810 will take can be sampled with a single run
 problem zz_3544680810 will be solved 1 times per run
 problem zz_4833429819 will take can be sampled with a single run
 problem zz_4833429819 will be solved 1 times per run
 problem zz_4660896733 will take can be sampled with a single run
 problem zz_4660896733 will be solved 1 times per run
 start run 0 for problem zz_4833429819
   start samplings 1000 for problem zz_4833429819
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 problem zz_9043043111 will take can be sampled with a single run
 problem zz_9043043111 will be solved 1 times per run
sampled for problem zz_4833429819
 problem zz_0889364291 will take can be sampled with a single run
 problem zz_0889364291 will be solved 1 times per run
 problem zz_6027592363 will take can be sampled with a single run
 problem zz_6027592363 will be solved 1 times per run
 start run 0 for problem zz_4660896733
   start samplings 1000 for problem zz_4660896733
 start run 0 for problem zz_3544680810
   start samplings 1000 for problem zz_3544680810
sampled for problem zz_4660896733
 start run 0 for problem zz_9043043111
   start samplings 1000 for problem zz_9043043111
 problem zz_0690618443 will take can be sampled with a single run
 problem zz_0690618443 will be solved 1 times per run
sampled for problem zz_3544680810
 start run 0 for problem zz_0889364291
   start samplings 1000 for problem zz_0889364291
sampled for problem zz_9043043111
 start run 0 for problem zz_6027592363
   start samplings 1000 for problem zz_6027592363
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 start run 0 for problem zz_0690618443
   start samplings 1000 for problem zz_0690618443
sampled for problem zz_0889364291
sampled for problem zz_6027592363
sampled for problem zz_0690618443
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6244783629
finished samples sampling for zz_6244783629
 finished run 0 for problem zz_6244783629
 start run 1 for problem zz_6244783629
   start samplings 1000 for problem zz_6244783629
sampled for problem zz_6244783629
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_4833429819
finished samples sampling for zz_4833429819
 finished run 0 for problem zz_4833429819
 start run 1 for problem zz_4833429819
   start samplings 1000 for problem zz_4833429819
sampled for problem zz_4833429819
sampled for problem zz_4660896733
finished samples sampling for zz_4660896733
 finished run 0 for problem zz_4660896733
 start run 1 for problem zz_4660896733
   start samplings 1000 for problem zz_4660896733
sampled for problem zz_4660896733
sampled for problem zz_3544680810
finished samples sampling for zz_3544680810
 finished run 0 for problem zz_3544680810
 start run 1 for problem zz_3544680810
   start samplings 1000 for problem zz_3544680810
sampled for problem zz_3544680810
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9043043111
finished samples sampling for zz_9043043111
 finished run 0 for problem zz_9043043111
 start run 1 for problem zz_9043043111
   start samplings 1000 for problem zz_9043043111
sampled for problem zz_9043043111
sampled for problem zz_0889364291
finished samples sampling for zz_0889364291
 finished run 0 for problem zz_0889364291
 start run 1 for problem zz_0889364291
   start samplings 1000 for problem zz_0889364291
sampled for problem zz_0889364291
sampled for problem zz_6027592363
finished samples sampling for zz_6027592363
 finished run 0 for problem zz_6027592363
 start run 1 for problem zz_6027592363
   start samplings 1000 for problem zz_6027592363
sampled for problem zz_6027592363
sampled for problem zz_0690618443
finished samples sampling for zz_0690618443
 finished run 0 for problem zz_0690618443
 start run 1 for problem zz_0690618443
   start samplings 1000 for problem zz_0690618443
sampled for problem zz_0690618443
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0no cupy available, imported numpy as usual
Custom getstate functions for dwave.cloud.config.models.ClientConfig, dwave.cloud.client.qpu.Client, dwave.cloud.solver.StructuredSolver, dwave.system.samplers.dwave_sampler.DWaveSampler, dwave.system.composites.embedding.FixedEmbeddingComposite have been initialized.
 Process-8 started with inputs {'print_prefix': ' ', 'kwargs_dwavesampler': {'token': 'JG5Y-1f0a1b755b7b93b5466f23e3abf1c3a1920c15fb', 'region': 'eu-central-1', 'architecture': 'pegasus', 'name': 'Advantage_system5.4'}, 'folder_path_main': '/mnt/RAID/home/adam-1aeqn8vhvpjnv4u/mast_sub5/Quantum_Annealing_for_Particle_Matching/00_tests/01_out/sub_5_3_2', 'info_file_name': 'study_params_sub5_3_2.h5'}
Available solvers based on specifications (client):  [StructuredSolver(id='Advantage_system5.4')]
Chosen solver based on specifications (solver):  StructuredSolver(id='Advantage_system5.4') , status is online:  True
    Solver properties keys:  dict_keys(['num_qubits', 'qubits', 'couplers', 'h_range', 'j_range', 'supported_problem_types', 'parameters', 'vfyc', 'anneal_offset_ranges', 'anneal_offset_step', 'anneal_offset_step_phi0', 'annealing_time_range', 'chip_id', 'default_annealing_time', 'default_programming_thermalization', 'default_readout_thermalization', 'extended_j_range', 'fast_anneal_time_range', 'h_gain_schedule_range', 'max_anneal_schedule_points', 'max_h_gain_schedule_points', 'num_reads_range', 'per_qubit_coupling_range', 'problem_run_duration_range', 'problem_timing_data', 'programming_thermalization_range', 'readout_thermalization_range', 'tags', 'topology', 'category', 'quota_conversion_rate'])
        problem_run_duration_range:  [0.0, 1000000.0]
    Solver parameters keys:  dict_keys(['anneal_offsets', 'anneal_schedule', 'annealing_time', 'answer_mode', 'auto_scale', 'flux_biases', 'flux_drift_compensation', 'h_gain_schedule', 'initial_state', 'max_answers', 'num_reads', 'programming_thermalization', 'readout_thermalization', 'reduce_intersample_correlation', 'reinitialize_state', 'fast_anneal'])
    Solver properties parameters keys:  dict_keys(['anneal_offsets', 'anneal_schedule', 'annealing_time', 'answer_mode', 'auto_scale', 'flux_biases', 'flux_drift_compensation', 'h_gain_schedule', 'initial_state', 'max_answers', 'num_reads', 'programming_thermalization', 'readout_thermalization', 'reduce_intersample_correlation', 'reinitialize_state', 'fast_anneal'])
Execution started.
 starting thread Thread_submittter_000
 start working on problem zz_6026204315
 starting thread Thread_submittter_001
 start working on problem zz_8714453254
 starting thread Thread_submittter_002
 start working on problem zz_3274278151
 starting thread Thread_submittter_003
 start working on problem zz_6277987427
 starting thread Thread_submittter_004
 start working on problem zz_1372475312
 starting thread Thread_submittter_005
 start working on problem zz_4171203299
 starting thread Thread_submittter_006
 start working on problem zz_9220287810
 starting thread Thread_submittter_007
 start working on problem zz_5365434579
 starting thread Thread_writer_000
 starting thread Thread_writer_001
 starting thread Thread_reporter_000
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 problem zz_6277987427 will take can be sampled with a single run
 problem zz_6277987427 will be solved 1 times per run
 start run 0 for problem zz_6277987427
   start samplings 1000 for problem zz_6277987427
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6277987427
 problem zz_9220287810 will take can be sampled with a single run
 problem zz_9220287810 will be solved 1 times per run
 problem zz_4171203299 will take can be sampled with a single run
 problem zz_4171203299 will be solved 1 times per run
 problem zz_1372475312 will take can be sampled with a single run
 problem zz_1372475312 will be solved 1 times per run
 problem zz_8714453254 will take can be sampled with a single run
 problem zz_8714453254 will be solved 1 times per run
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 start run 0 for problem zz_4171203299
   start samplings 1000 for problem zz_4171203299
 problem zz_3274278151 will take can be sampled with a single run
 problem zz_3274278151 will be solved 1 times per run
 problem zz_6026204315 will take can be sampled with a single run
 problem zz_6026204315 will be solved 1 times per run
 start run 0 for problem zz_9220287810
   start samplings 1000 for problem zz_9220287810
sampled for problem zz_4171203299
 problem zz_5365434579 will take can be sampled with a single run
 problem zz_5365434579 will be solved 1 times per run
 start run 0 for problem zz_1372475312
   start samplings 1000 for problem zz_1372475312
sampled for problem zz_9220287810
 start run 0 for problem zz_8714453254
   start samplings 1000 for problem zz_8714453254
 start run 0 for problem zz_3274278151
   start samplings 1000 for problem zz_3274278151
sampled for problem zz_1372475312
 start run 0 for problem zz_6026204315
   start samplings 1000 for problem zz_6026204315
sampled for problem zz_3274278151
sampled for problem zz_8714453254
 start run 0 for problem zz_5365434579
   start samplings 1000 for problem zz_5365434579
sampled for problem zz_6026204315
sampled for problem zz_5365434579
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6277987427
finished samples sampling for zz_6277987427
 finished run 0 for problem zz_6277987427
 start run 1 for problem zz_6277987427
   start samplings 1000 for problem zz_6277987427
sampled for problem zz_6277987427
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_4171203299
finished samples sampling for zz_4171203299
 finished run 0 for problem zz_4171203299
 start run 1 for problem zz_4171203299
   start samplings 1000 for problem zz_4171203299
sampled for problem zz_4171203299
sampled for problem zz_1372475312
finished samples sampling for zz_1372475312
 finished run 0 for problem zz_1372475312
 start run 1 for problem zz_1372475312
   start samplings 1000 for problem zz_1372475312
sampled for problem zz_1372475312
sampled for problem zz_9220287810
finished samples sampling for zz_9220287810
 finished run 0 for problem zz_9220287810
 start run 1 for problem zz_9220287810
   start samplings 1000 for problem zz_9220287810
sampled for problem zz_9220287810
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3274278151
finished samples sampling for zz_3274278151
 finished run 0 for problem zz_3274278151
 start run 1 for problem zz_3274278151
   start samplings 1000 for problem zz_3274278151
sampled for problem zz_3274278151
sampled for problem zz_8714453254
finished samples sampling for zz_8714453254
 finished run 0 for problem zz_8714453254
 start run 1 for problem zz_8714453254
   start samplings 1000 for problem zz_8714453254
sampled for problem zz_8714453254
sampled for problem zz_6026204315
finished samples sampling for zz_6026204315
 finished run 0 for problem zz_6026204315
 start run 1 for problem zz_6026204315
   start samplings 1000 for problem zz_6026204315
sampled for problem zz_6026204315
sampled for problem zz_5365434579
finished samples sampling for zz_5365434579
 finished run 0 for problem zz_5365434579
 start run 1 for problem zz_5365434579
   start samplings 1000 for problem zz_5365434579
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5365434579
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2398936663
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0378490713
finished samples sampling for zz_0378490713
 finished run 1 for problem zz_0378490713
 start run 2 for problem zz_0378490713
   start samplings 1000 for problem zz_0378490713
sampled for problem zz_0378490713
sampled for problem zz_2357446328
finished samples sampling for zz_2357446328
 finished run 1 for problem zz_2357446328
 start run 2 for problem zz_2357446328
   start samplings 1000 for problem zz_2357446328
sampled for problem zz_2357446328
sampled for problem zz_3528964636
finished samples sampling for zz_3528964636
 finished run 1 for problem zz_3528964636
 start run 2 for problem zz_3528964636
   start samplings 1000 for problem zz_3528964636
sampled for problem zz_3528964636
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6026927798
finished samples sampling for zz_6026927798
 finished run 1 for problem zz_6026927798
 start run 2 for problem zz_6026927798
   start samplings 1000 for problem zz_6026927798
sampled for problem zz_6026927798
sampled for problem zz_3953747332
finished samples sampling for zz_3953747332
 finished run 1 for problem zz_3953747332
 start run 2 for problem zz_3953747332
   start samplings 1000 for problem zz_3953747332
sampled for problem zz_3953747332
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0001863196
finished samples sampling for zz_0001863196
 finished run 1 for problem zz_0001863196
 start run 2 for problem zz_0001863196
   start samplings 1000 for problem zz_0001863196
sampled for problem zz_0001863196
sampled for problem zz_0050481658
finished samples sampling for zz_0050481658
 finished run 2 for problem zz_0050481658
 start run 3 for problem zz_0050481658
   start samplings 1000 for problem zz_0050481658
sampled for problem zz_0050481658
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2398936663
finished samples sampling for zz_2398936663
 finished run 3 for problem zz_2398936663
 start run 4 for problem zz_2398936663
   start samplings 1000 for problem zz_2398936663
sampled for problem zz_2398936663
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0378490713
finished samples sampling for zz_0378490713
 finished run 2 for problem zz_0378490713
 start run 3 for problem zz_0378490713
   start samplings 1000 for problem zz_0378490713
sampled for problem zz_0378490713
sampled for problem zz_2357446328
finished samples sampling for zz_2357446328
 finished run 2 for problem zz_2357446328
 start run 3 for problem zz_2357446328
   start samplings 1000 for problem zz_2357446328
sampled for problem zz_2357446328
sampled for problem zz_3528964636
finished samples sampling for zz_3528964636
 finished run 2 for problem zz_3528964636
 start run 3 for problem zz_3528964636
   start samplings 1000 for problem zz_3528964636
sampled for problem zz_3528964636
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6026927798
finished samples sampling for zz_6026927798
 finished run 2 for problem zz_6026927798
 start run 3 for problem zz_6026927798
   start samplings 1000 for problem zz_6026927798
sampled for problem zz_6026927798
sampled for problem zz_3953747332
finished samples sampling for zz_3953747332
 finished run 2 for problem zz_3953747332
 start run 3 for problem zz_3953747332
   start samplings 1000 for problem zz_3953747332
sampled for problem zz_3953747332
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0001863196
finished samples sampling for zz_0001863196
 finished run 2 for problem zz_0001863196
 start run 3 for problem zz_0001863196
   start samplings 1000 for problem zz_0001863196
sampled for problem zz_0001863196
sampled for problem zz_0050481658
finished samples sampling for zz_0050481658
 finished run 3 for problem zz_0050481658
 start run 4 for problem zz_0050481658
   start samplings 1000 for problem zz_0050481658
sampled for problem zz_0050481658
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2398936663
finished samples sampling for zz_2398936663
 finished run 4 for problem zz_2398936663
 start run 5 for problem zz_2398936663
   start samplings 1000 for problem zz_2398936663
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2398936663
sampled for problem zz_0378490713
finished samples sampling for zz_0378490713
 finished run 3 for problem zz_0378490713
 start run 4 for problem zz_0378490713
   start samplings 1000 for problem zz_0378490713
sampled for problem zz_0378490713
sampled for problem zz_2357446328
finished samples sampling for zz_2357446328
 finished run 3 for problem zz_2357446328
 start run 4 for problem zz_2357446328
   start samplings 1000 for problem zz_2357446328
sampled for problem zz_2357446328
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3528964636
finished samples sampling for zz_3528964636
 finished run 3 for problem zz_3528964636
 start run 4 for problem zz_3528964636
   start samplings 1000 for problem zz_3528964636
sampled for problem zz_3528964636
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6026927798
finished samples sampling for zz_6026927798
 finished run 3 for problem zz_6026927798
 start run 4 for problem zz_6026927798
   start samplings 1000 for problem zz_6026927798
sampled for problem zz_6026927798
sampled for problem zz_3953747332
finished samples sampling for zz_3953747332
 finished run 3 for problem zz_3953747332
 start run 4 for problem zz_3953747332
   start samplings 1000 for problem zz_3953747332
sampled for problem zz_3953747332
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0001863196
finished samples sampling for zz_0001863196
 finished run 3 for problem zz_0001863196
 start run 4 for problem zz_0001863196
   start samplings 1000 for problem zz_0001863196
sampled for problem zz_0001863196
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0050481658
finished samples sampling for zz_0050481658
 finished run 4 for problem zz_0050481658
 start run 5 for problem zz_0050481658
   start samplings 1000 for problem zz_0050481658
sampled for problem zz_0050481658
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2398936663
finished samples sampling for zz_2398936663
 finished run 5 for problem zz_2398936663
 start run 6 for problem zz_2398936663
   start samplings 1000 for problem zz_2398936663
sampled for problem zz_2398936663
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0378490713
finished samples sampling for zz_0378490713
 finished run 4 for problem zz_0378490713
 start run 5 for problem zz_0378490713
   start samplings 1000 for problem zz_0378490713
sampled for problem zz_0378490713
sampled for problem zz_2357446328
finished samples sampling for zz_2357446328
 finished run 4 for problem zz_2357446328
 start run 5 for problem zz_2357446328
   start samplings 1000 for problem zz_2357446328
sampled for problem zz_2357446328
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3528964636
finished samples sampling for zz_3528964636
 finished run 4 for problem zz_3528964636
 start run 5 for problem zz_3528964636
   start samplings 1000 for problem zz_3528964636
sampled for problem zz_3528964636
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6026927798
finished samples sampling for zz_6026927798
 finished run 4 for problem zz_6026927798
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9427452893
finished samples sampling for zz_9427452893
 finished run 1 for problem zz_9427452893
 start run 2 for problem zz_9427452893
   start samplings 1000 for problem zz_9427452893
sampled for problem zz_9427452893
sampled for problem zz_6882327039
finished samples sampling for zz_6882327039
 finished run 1 for problem zz_6882327039
 start run 2 for problem zz_6882327039
   start samplings 1000 for problem zz_6882327039
sampled for problem zz_6882327039
sampled for problem zz_4334158375
finished samples sampling for zz_4334158375
 finished run 1 for problem zz_4334158375
 start run 2 for problem zz_4334158375
   start samplings 1000 for problem zz_4334158375
sampled for problem zz_4334158375
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_7720896514
finished samples sampling for zz_7720896514
 finished run 1 for problem zz_7720896514
 start run 2 for problem zz_7720896514
   start samplings 1000 for problem zz_7720896514
sampled for problem zz_7720896514
sampled for problem zz_9064081178
finished samples sampling for zz_9064081178
 finished run 1 for problem zz_9064081178
 start run 2 for problem zz_9064081178
   start samplings 1000 for problem zz_9064081178
sampled for problem zz_9064081178
sampled for problem zz_5611322142
finished samples sampling for zz_5611322142
 finished run 1 for problem zz_5611322142
 start run 2 for problem zz_5611322142
   start samplings 1000 for problem zz_5611322142
sampled for problem zz_5611322142
sampled for problem zz_6292597806
finished samples sampling for zz_6292597806
 finished run 2 for problem zz_6292597806
 start run 3 for problem zz_6292597806
   start samplings 1000 for problem zz_6292597806
sampled for problem zz_6292597806
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6241994977
finished samples sampling for zz_6241994977
 finished run 2 for problem zz_6241994977
 start run 3 for problem zz_6241994977
   start samplings 1000 for problem zz_6241994977
sampled for problem zz_6241994977
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9427452893
finished samples sampling for zz_9427452893
 finished run 2 for problem zz_9427452893
 start run 3 for problem zz_9427452893
   start samplings 1000 for problem zz_9427452893
sampled for problem zz_9427452893
sampled for problem zz_6882327039
finished samples sampling for zz_6882327039
 finished run 2 for problem zz_6882327039
 start run 3 for problem zz_6882327039
   start samplings 1000 for problem zz_6882327039
sampled for problem zz_6882327039
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_4334158375
finished samples sampling for zz_4334158375
 finished run 2 for problem zz_4334158375
 start run 3 for problem zz_4334158375
   start samplings 1000 for problem zz_4334158375
sampled for problem zz_4334158375
sampled for problem zz_7720896514
finished samples sampling for zz_7720896514
 finished run 2 for problem zz_7720896514
 start run 3 for problem zz_7720896514
   start samplings 1000 for problem zz_7720896514
sampled for problem zz_7720896514
sampled for problem zz_9064081178
finished samples sampling for zz_9064081178
 finished run 2 for problem zz_9064081178
 start run 3 for problem zz_9064081178
   start samplings 1000 for problem zz_9064081178
sampled for problem zz_9064081178
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5611322142
finished samples sampling for zz_5611322142
 finished run 2 for problem zz_5611322142
 start run 3 for problem zz_5611322142
   start samplings 1000 for problem zz_5611322142
sampled for problem zz_5611322142
sampled for problem zz_6292597806
finished samples sampling for zz_6292597806
 finished run 3 for problem zz_6292597806
 start run 4 for problem zz_6292597806
   start samplings 1000 for problem zz_6292597806
sampled for problem zz_6292597806
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6241994977
finished samples sampling for zz_6241994977
 finished run 3 for problem zz_6241994977
 start run 4 for problem zz_6241994977
   start samplings 1000 for problem zz_6241994977
sampled for problem zz_6241994977
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9427452893
finished samples sampling for zz_9427452893
 finished run 3 for problem zz_9427452893
 start run 4 for problem zz_9427452893
   start samplings 1000 for problem zz_9427452893
sampled for problem zz_9427452893
sampled for problem zz_6882327039
finished samples sampling for zz_6882327039
 finished run 3 for problem zz_6882327039
 start run 4 for problem zz_6882327039
   start samplings 1000 for problem zz_6882327039
sampled for problem zz_6882327039
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_7720896514
finished samples sampling for zz_7720896514
 finished run 3 for problem zz_7720896514
 start run 4 for problem zz_7720896514
   start samplings 1000 for problem zz_7720896514
sampled for problem zz_7720896514
sampled for problem zz_4334158375
finished samples sampling for zz_4334158375
 finished run 3 for problem zz_4334158375
 start run 4 for problem zz_4334158375
   start samplings 1000 for problem zz_4334158375
sampled for problem zz_4334158375
sampled for problem zz_9064081178
finished samples sampling for zz_9064081178
 finished run 3 for problem zz_9064081178
 start run 4 for problem zz_9064081178
   start samplings 1000 for problem zz_9064081178
sampled for problem zz_9064081178
sampled for problem zz_5611322142
finished samples sampling for zz_5611322142
 finished run 3 for problem zz_5611322142
 start run 4 for problem zz_5611322142
   start samplings 1000 for problem zz_5611322142
sampled for problem zz_5611322142
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6292597806
finished samples sampling for zz_6292597806
 finished run 4 for problem zz_6292597806
 start run 5 for problem zz_6292597806
   start samplings 1000 for problem zz_6292597806
sampled for problem zz_6292597806
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6241994977
finished samples sampling for zz_6241994977
 finished run 4 for problem zz_6241994977
 start run 5 for problem zz_6241994977
   start samplings 1000 for problem zz_6241994977
sampled for problem zz_6241994977
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9427452893
finished samples sampling for zz_9427452893
 finished run 4 for problem zz_9427452893
 start run 5 for problem zz_9427452893
   start samplings 1000 for problem zz_9427452893
sampled for problem zz_9427452893
sampled for problem zz_6882327039
finished samples sampling for zz_6882327039
 finished run 4 for problem zz_6882327039
 start run 5 for problem zz_6882327039
   start samplings 1000 for problem zz_6882327039
sampled for problem zz_6882327039
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_7720896514
finished samples sampling for zz_7720896514
 finished run 4 for problem zz_7720896514
 start run 5 for problem zz_7720896514
   start samplings 1000 for problem zz_7720896514
sampled for problem zz_0361306051
sampled for problem zz_7606317011
finished samples sampling for zz_7606317011
 finished run 5 for problem zz_7606317011
 start run 6 for problem zz_7606317011
   start samplings 1000 for problem zz_7606317011
sampled for problem zz_7606317011
sampled for problem zz_6259398707
finished samples sampling for zz_6259398707
 finished run 6 for problem zz_6259398707
 start run 7 for problem zz_6259398707
   start samplings 1000 for problem zz_6259398707
sampled for problem zz_6259398707
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6747346934
finished samples sampling for zz_6747346934
 finished run 5 for problem zz_6747346934
 start run 6 for problem zz_6747346934
   start samplings 1000 for problem zz_6747346934
sampled for problem zz_6747346934
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2788338479
finished samples sampling for zz_2788338479
 finished run 5 for problem zz_2788338479
 start run 6 for problem zz_2788338479
   start samplings 1000 for problem zz_2788338479
sampled for problem zz_2788338479
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9230029004
finished samples sampling for zz_9230029004
 finished run 5 for problem zz_9230029004
 start run 6 for problem zz_9230029004
   start samplings 1000 for problem zz_9230029004
sampled for problem zz_9230029004
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9439544350
finished samples sampling for zz_9439544350
 finished run 5 for problem zz_9439544350
 start run 6 for problem zz_9439544350
   start samplings 1000 for problem zz_9439544350
sampled for problem zz_9439544350
sampled for problem zz_0583988708
finished samples sampling for zz_0583988708
 finished run 5 for problem zz_0583988708
 start run 6 for problem zz_0583988708
   start samplings 1000 for problem zz_0583988708
sampled for problem zz_0583988708
sampled for problem zz_0361306051
finished samples sampling for zz_0361306051
 finished run 6 for problem zz_0361306051
 start run 7 for problem zz_0361306051
   start samplings 1000 for problem zz_0361306051
sampled for problem zz_0361306051
sampled for problem zz_7606317011
finished samples sampling for zz_7606317011
 finished run 6 for problem zz_7606317011
 start run 7 for problem zz_7606317011
   start samplings 1000 for problem zz_7606317011
sampled for problem zz_7606317011
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6259398707
finished samples sampling for zz_6259398707
 finished run 7 for problem zz_6259398707
 start run 8 for problem zz_6259398707
   start samplings 1000 for problem zz_6259398707
sampled for problem zz_6259398707
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6747346934
finished samples sampling for zz_6747346934
 finished run 6 for problem zz_6747346934
 start run 7 for problem zz_6747346934
   start samplings 1000 for problem zz_6747346934
sampled for problem zz_6747346934
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2788338479
finished samples sampling for zz_2788338479
 finished run 6 for problem zz_2788338479
 start run 7 for problem zz_2788338479
   start samplings 1000 for problem zz_2788338479
sampled for problem zz_2788338479
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9230029004
finished samples sampling for zz_9230029004
 finished run 6 for problem zz_9230029004
 start run 7 for problem zz_9230029004
   start samplings 1000 for problem zz_9230029004
sampled for problem zz_9230029004
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9439544350
finished samples sampling for zz_9439544350
 finished run 6 for problem zz_9439544350
 start run 7 for problem zz_9439544350
   start samplings 1000 for problem zz_9439544350
sampled for problem zz_9439544350
sampled for problem zz_0583988708
finished samples sampling for zz_0583988708
 finished run 6 for problem zz_0583988708
 start run 7 for problem zz_0583988708
   start samplings 1000 for problem zz_0583988708
sampled for problem zz_0583988708
sampled for problem zz_0361306051
finished samples sampling for zz_0361306051
 finished run 7 for problem zz_0361306051
 start run 8 for problem zz_0361306051
   start samplings 1000 for problem zz_0361306051
sampled for problem zz_0361306051
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_7606317011
finished samples sampling for zz_7606317011
 finished run 7 for problem zz_7606317011
 start run 8 for problem zz_7606317011
   start samplings 1000 for problem zz_7606317011
sampled for problem zz_7606317011
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6259398707
finished samples sampling for zz_6259398707
 finished run 8 for problem zz_6259398707
 start run 9 for problem zz_6259398707
   start samplings 1000 for problem zz_6259398707
sampled for problem zz_6259398707
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6747346934
finished samples sampling for zz_6747346934
 finished run 7 for problem zz_6747346934
 start run 8 for problem zz_6747346934
   start samplings 1000 for problem zz_6747346934
sampled for problem zz_6747346934
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2788338479
finished samples sampling for zz_2788338479
 finished run 7 for problem zz_2788338479
 start run 8 for problem zz_2788338479
   start samplings 1000 for problem zz_2788338479
sampled for problem zz_2788338479
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9230029004
finished samples sampling for zz_9230029004
 finished run 7 for problem zz_9230029004
 start run 8 for problem zz_9230029004
   start samplings 1000 for problem zz_9230029004
sampled for problem zz_9230029004
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9439544350
finished samples sampling for zz_9439544350
 finished run 7 for problem zz_9439544350
 start run 8 for problem zz_9439544350
   start samplings 1000 for problem zz_9439544350
sampled for problem zz_9439544350
sampled for problem zz_0583988708
finished samples sampling for zz_0583988708
 finished run 7 for problem zz_0583988708
 start run 8 for problem zz_0583988708
   start samplings 1000 for problem zz_0583988708
sampled for problem zz_0583988708
sampled for problem zz_0361306051
finished samples sampling for zz_0361306051
 finished run 8 for problem zz_0361306051
 start run 9 for problem zz_0361306051
   start samplings 1000 for problem zz_0361306051
sampled for problem zz_0361306051
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_7606317011
finished samples sampling for zz_7606317011
 finished run 8 for problem zz_7606317011
 start run 9 for problem zz_7606317011
   start samplings 1000 for problem zz_7606317011
sampled for problem zz_7606317011
sampled for problem zz_6259398707
finished samples sampling for zz_6259398707
 finished run 9 for problem zz_6259398707
 succesfully retrieved answer for problem {} zz_6259398707
 start working on problem zz_4285806320
 Queue sizes: problems_to_submit = 15, answers_to_write = 1
 start writing answer for problem {} zz_6259398707
 problem zz_4285806320 will take can be sampled with a single run
 finished run 1 for problem zz_5857141561
 start run 2 for problem zz_5857141561
   start samplings 1000 for problem zz_5857141561
sampled for problem zz_5857141561
sampled for problem zz_9142185862
finished samples sampling for zz_9142185862
 finished run 1 for problem zz_9142185862
 start run 2 for problem zz_9142185862
   start samplings 1000 for problem zz_9142185862
sampled for problem zz_9142185862
sampled for problem zz_6986245643
finished samples sampling for zz_6986245643
 finished run 1 for problem zz_6986245643
 start run 2 for problem zz_6986245643
   start samplings 1000 for problem zz_6986245643
sampled for problem zz_6986245643
sampled for problem zz_9584060801
finished samples sampling for zz_9584060801
 finished run 2 for problem zz_9584060801
 start run 3 for problem zz_9584060801
   start samplings 1000 for problem zz_9584060801
sampled for problem zz_9584060801
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_4282889685
finished samples sampling for zz_4282889685
 finished run 1 for problem zz_4282889685
 start run 2 for problem zz_4282889685
   start samplings 1000 for problem zz_4282889685
sampled for problem zz_4282889685
sampled for problem zz_3147064965
finished samples sampling for zz_3147064965
 finished run 1 for problem zz_3147064965
 start run 2 for problem zz_3147064965
   start samplings 1000 for problem zz_3147064965
sampled for problem zz_3147064965
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0946095345
finished samples sampling for zz_0946095345
 finished run 1 for problem zz_0946095345
 start run 2 for problem zz_0946095345
   start samplings 1000 for problem zz_0946095345
sampled for problem zz_0946095345
sampled for problem zz_6368149696
finished samples sampling for zz_6368149696
 finished run 1 for problem zz_6368149696
 start run 2 for problem zz_6368149696
   start samplings 1000 for problem zz_6368149696
sampled for problem zz_6368149696
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5857141561
finished samples sampling for zz_5857141561
 finished run 2 for problem zz_5857141561
 start run 3 for problem zz_5857141561
   start samplings 1000 for problem zz_5857141561
sampled for problem zz_5857141561
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9142185862
finished samples sampling for zz_9142185862
 finished run 2 for problem zz_9142185862
 start run 3 for problem zz_9142185862
   start samplings 1000 for problem zz_9142185862
sampled for problem zz_9142185862
sampled for problem zz_6986245643
finished samples sampling for zz_6986245643
 finished run 2 for problem zz_6986245643
 start run 3 for problem zz_6986245643
   start samplings 1000 for problem zz_6986245643
sampled for problem zz_6986245643
sampled for problem zz_9584060801
finished samples sampling for zz_9584060801
 finished run 3 for problem zz_9584060801
 start run 4 for problem zz_9584060801
   start samplings 1000 for problem zz_9584060801
sampled for problem zz_9584060801
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_4282889685
finished samples sampling for zz_4282889685
 finished run 2 for problem zz_4282889685
 start run 3 for problem zz_4282889685
   start samplings 1000 for problem zz_4282889685
sampled for problem zz_4282889685
sampled for problem zz_3147064965
finished samples sampling for zz_3147064965
 finished run 2 for problem zz_3147064965
 start run 3 for problem zz_3147064965
   start samplings 1000 for problem zz_3147064965
sampled for problem zz_3147064965
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0946095345
finished samples sampling for zz_0946095345
 finished run 2 for problem zz_0946095345
 start run 3 for problem zz_0946095345
   start samplings 1000 for problem zz_0946095345
sampled for problem zz_0946095345
sampled for problem zz_6368149696
finished samples sampling for zz_6368149696
 finished run 2 for problem zz_6368149696
 start run 3 for problem zz_6368149696
   start samplings 1000 for problem zz_6368149696
sampled for problem zz_6368149696
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5857141561
finished samples sampling for zz_5857141561
 finished run 3 for problem zz_5857141561
 start run 4 for problem zz_5857141561
   start samplings 1000 for problem zz_5857141561
sampled for problem zz_5857141561
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9142185862
finished samples sampling for zz_9142185862
 finished run 3 for problem zz_9142185862
 start run 4 for problem zz_9142185862
   start samplings 1000 for problem zz_9142185862
sampled for problem zz_9142185862
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6986245643
finished samples sampling for zz_6986245643
 finished run 3 for problem zz_6986245643
 start run 4 for problem zz_6986245643
   start samplings 1000 for problem zz_6986245643
sampled for problem zz_6986245643
sampled for problem zz_9584060801
finished samples sampling for zz_9584060801
 finished run 4 for problem zz_9584060801
 start run 5 for problem zz_9584060801
   start samplings 1000 for problem zz_9584060801
sampled for problem zz_9584060801
sampled for problem zz_4282889685
finished samples sampling for zz_4282889685
 finished run 3 for problem zz_4282889685
 start run 4 for problem zz_4282889685
   start samplings 1000 for problem zz_4282889685
sampled for problem zz_4282889685
sampled for problem zz_3147064965
finished samples sampling for zz_3147064965
 finished run 3 for problem zz_3147064965
 start run 4 for problem zz_3147064965
   start samplings 1000 for problem zz_3147064965
sampled for problem zz_3147064965
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0946095345
finished samples sampling for zz_0946095345
 finished run 3 for problem zz_0946095345
 start run 4 for problem zz_0946095345
   start samplings 1000 for problem zz_0946095345
sampled for problem zz_0946095345
sampled for problem zz_6368149696
finished samples sampling for zz_6368149696
 finished run 3 for problem zz_6368149696
 start run 4 for problem zz_6368149696
   start samplings 1000 for problem zz_6368149696
sampled for problem zz_6368149696
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5857141561
finished samples sampling for zz_5857141561
 finished run 4 for problem zz_5857141561
 start run 5 for problem zz_5857141561
   start samplings 1000 for problem zz_5857141561
sampled for problem zz_5857141561
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6986245643
finished samples sampling for zz_6986245643
 finished run 4 for problem zz_6986245643
 start run 5 for problem zz_6986245643
   start samplings 1000 for problem zz_6986245643
sampled for problem zz_6986245643
sampled for problem zz_9142185862
finished samples sampling for zz_9142185862
 finished run 4 for problem zz_9142185862
 start run 5 for problem zz_9142185862
   start samplings 1000 for problem zz_9142185862
sampled for problem zz_9142185862
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3085251181
finished samples sampling for zz_3085251181
 finished run 1 for problem zz_3085251181
 start run 2 for problem zz_3085251181
   start samplings 1000 for problem zz_3085251181
sampled for problem zz_3085251181
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2631571852
finished samples sampling for zz_2631571852
 finished run 1 for problem zz_2631571852
 start run 2 for problem zz_2631571852
   start samplings 1000 for problem zz_2631571852
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2631571852
sampled for problem zz_1950776516
finished samples sampling for zz_1950776516
 finished run 1 for problem zz_1950776516
 start run 2 for problem zz_1950776516
   start samplings 1000 for problem zz_1950776516
sampled for problem zz_1950776516
sampled for problem zz_7909671180
finished samples sampling for zz_7909671180
 finished run 1 for problem zz_7909671180
 start run 2 for problem zz_7909671180
   start samplings 1000 for problem zz_7909671180
sampled for problem zz_7909671180
sampled for problem zz_6600677120
finished samples sampling for zz_6600677120
 finished run 1 for problem zz_6600677120
 start run 2 for problem zz_6600677120
   start samplings 1000 for problem zz_6600677120
sampled for problem zz_6600677120
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_7591282265
finished samples sampling for zz_7591282265
 finished run 1 for problem zz_7591282265
 start run 2 for problem zz_7591282265
   start samplings 1000 for problem zz_7591282265
sampled for problem zz_7591282265
sampled for problem zz_8754965043
finished samples sampling for zz_8754965043
 finished run 1 for problem zz_8754965043
 start run 2 for problem zz_8754965043
   start samplings 1000 for problem zz_8754965043
sampled for problem zz_8754965043
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9489630532
finished samples sampling for zz_9489630532
 finished run 2 for problem zz_9489630532
 start run 3 for problem zz_9489630532
   start samplings 1000 for problem zz_9489630532
sampled for problem zz_9489630532
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3085251181
finished samples sampling for zz_3085251181
 finished run 2 for problem zz_3085251181
 start run 3 for problem zz_3085251181
   start samplings 1000 for problem zz_3085251181
sampled for problem zz_3085251181
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2631571852
finished samples sampling for zz_2631571852
 finished run 2 for problem zz_2631571852
 start run 3 for problem zz_2631571852
   start samplings 1000 for problem zz_2631571852
sampled for problem zz_2631571852
sampled for problem zz_1950776516
finished samples sampling for zz_1950776516
 finished run 2 for problem zz_1950776516
 start run 3 for problem zz_1950776516
   start samplings 1000 for problem zz_1950776516
sampled for problem zz_1950776516
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_7909671180
finished samples sampling for zz_7909671180
 finished run 2 for problem zz_7909671180
 start run 3 for problem zz_7909671180
   start samplings 1000 for problem zz_7909671180
sampled for problem zz_7909671180
sampled for problem zz_6600677120
finished samples sampling for zz_6600677120
 finished run 2 for problem zz_6600677120
 start run 3 for problem zz_6600677120
   start samplings 1000 for problem zz_6600677120
sampled for problem zz_6600677120
sampled for problem zz_7591282265
finished samples sampling for zz_7591282265
 finished run 2 for problem zz_7591282265
 start run 3 for problem zz_7591282265
   start samplings 1000 for problem zz_7591282265
sampled for problem zz_7591282265
sampled for problem zz_8754965043
finished samples sampling for zz_8754965043
 finished run 2 for problem zz_8754965043
 start run 3 for problem zz_8754965043
   start samplings 1000 for problem zz_8754965043
sampled for problem zz_8754965043
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9489630532
finished samples sampling for zz_9489630532
 finished run 3 for problem zz_9489630532
 start run 4 for problem zz_9489630532
   start samplings 1000 for problem zz_9489630532
sampled for problem zz_9489630532
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3085251181
finished samples sampling for zz_3085251181
 finished run 3 for problem zz_3085251181
 start run 4 for problem zz_3085251181
   start samplings 1000 for problem zz_3085251181
sampled for problem zz_3085251181
sampled for problem zz_2631571852
finished samples sampling for zz_2631571852
 finished run 3 for problem zz_2631571852
 start run 4 for problem zz_2631571852
   start samplings 1000 for problem zz_2631571852
sampled for problem zz_2631571852
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_1950776516
finished samples sampling for zz_1950776516
 finished run 3 for problem zz_1950776516
 start run 4 for problem zz_1950776516
   start samplings 1000 for problem zz_1950776516
sampled for problem zz_1950776516
sampled for problem zz_7909671180
finished samples sampling for zz_7909671180
 finished run 3 for problem zz_7909671180
 start run 4 for problem zz_7909671180
   start samplings 1000 for problem zz_7909671180
sampled for problem zz_7909671180
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6600677120
finished samples sampling for zz_6600677120
 finished run 3 for problem zz_6600677120
 start run 4 for problem zz_6600677120
   start samplings 1000 for problem zz_6600677120
sampled for problem zz_6600677120
sampled for problem zz_7591282265
finished samples sampling for zz_7591282265
 finished run 3 for problem zz_7591282265
 start run 4 for problem zz_7591282265
   start samplings 1000 for problem zz_7591282265
sampled for problem zz_7591282265
sampled for problem zz_8754965043
finished samples sampling for zz_8754965043
 finished run 3 for problem zz_8754965043
 start run 4 for problem zz_8754965043
   start samplings 1000 for problem zz_8754965043
sampled for problem zz_8754965043
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9489630532
finished samples sampling for zz_9489630532
 finished run 4 for problem zz_9489630532
 start run 5 for problem zz_9489630532
   start samplings 1000 for problem zz_9489630532
sampled for problem zz_9489630532
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3085251181
finished samples sampling for zz_3085251181
 finished run 4 for problem zz_3085251181
 start run 5 for problem zz_3085251181
   start samplings 1000 for problem zz_3085251181
sampled for problem zz_3085251181
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2631571852
finished samples sampling for zz_2631571852
 finished run 4 for problem zz_2631571852
 start run 5 for problem zz_2631571852
   start samplings 1000 for problem zz_2631571852
sampled for problem zz_2631571852
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3387349060
finished samples sampling for zz_3387349060
 finished run 1 for problem zz_3387349060
 start run 2 for problem zz_3387349060
   start samplings 1000 for problem zz_3387349060
sampled for problem zz_3387349060
sampled for problem zz_1701713947
finished samples sampling for zz_1701713947
 finished run 1 for problem zz_1701713947
 start run 2 for problem zz_1701713947
   start samplings 1000 for problem zz_1701713947
sampled for problem zz_1701713947
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0295310170
finished samples sampling for zz_0295310170
 finished run 1 for problem zz_0295310170
 start run 2 for problem zz_0295310170
   start samplings 1000 for problem zz_0295310170
sampled for problem zz_0295310170
sampled for problem zz_5533357779
finished samples sampling for zz_5533357779
 finished run 1 for problem zz_5533357779
 start run 2 for problem zz_5533357779
   start samplings 1000 for problem zz_5533357779
sampled for problem zz_5533357779
sampled for problem zz_2117849290
finished samples sampling for zz_2117849290
 finished run 1 for problem zz_2117849290
 start run 2 for problem zz_2117849290
   start samplings 1000 for problem zz_2117849290
sampled for problem zz_2117849290
sampled for problem zz_8714690430
finished samples sampling for zz_8714690430
 finished run 1 for problem zz_8714690430
 start run 2 for problem zz_8714690430
   start samplings 1000 for problem zz_8714690430
sampled for problem zz_8714690430
sampled for problem zz_7841130710
finished samples sampling for zz_7841130710
 finished run 1 for problem zz_7841130710
 start run 2 for problem zz_7841130710
   start samplings 1000 for problem zz_7841130710
sampled for problem zz_7841130710
sampled for problem zz_8290171268
finished samples sampling for zz_8290171268
 finished run 1 for problem zz_8290171268
 start run 2 for problem zz_8290171268
   start samplings 1000 for problem zz_8290171268
sampled for problem zz_8290171268
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3387349060
finished samples sampling for zz_3387349060
 finished run 2 for problem zz_3387349060
 start run 3 for problem zz_3387349060
   start samplings 1000 for problem zz_3387349060
sampled for problem zz_3387349060
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_1701713947
finished samples sampling for zz_1701713947
 finished run 2 for problem zz_1701713947
 start run 3 for problem zz_1701713947
   start samplings 1000 for problem zz_1701713947
sampled for problem zz_1701713947
sampled for problem zz_0295310170
finished samples sampling for zz_0295310170
 finished run 2 for problem zz_0295310170
 start run 3 for problem zz_0295310170
   start samplings 1000 for problem zz_0295310170
sampled for problem zz_0295310170
sampled for problem zz_5533357779
finished samples sampling for zz_5533357779
 finished run 2 for problem zz_5533357779
 start run 3 for problem zz_5533357779
   start samplings 1000 for problem zz_5533357779
sampled for problem zz_5533357779
sampled for problem zz_2117849290
finished samples sampling for zz_2117849290
 finished run 2 for problem zz_2117849290
 start run 3 for problem zz_2117849290
   start samplings 1000 for problem zz_2117849290
sampled for problem zz_2117849290
sampled for problem zz_8714690430
finished samples sampling for zz_8714690430
 finished run 2 for problem zz_8714690430
 start run 3 for problem zz_8714690430
   start samplings 1000 for problem zz_8714690430
sampled for problem zz_8714690430
sampled for problem zz_7841130710
finished samples sampling for zz_7841130710
 finished run 2 for problem zz_7841130710
 start run 3 for problem zz_7841130710
   start samplings 1000 for problem zz_7841130710
sampled for problem zz_7841130710
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_8290171268
finished samples sampling for zz_8290171268
 finished run 2 for problem zz_8290171268
 start run 3 for problem zz_8290171268
   start samplings 1000 for problem zz_8290171268
sampled for problem zz_8290171268
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3387349060
finished samples sampling for zz_3387349060
 finished run 3 for problem zz_3387349060
 start run 4 for problem zz_3387349060
   start samplings 1000 for problem zz_3387349060
sampled for problem zz_3387349060
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_1701713947
finished samples sampling for zz_1701713947
 finished run 3 for problem zz_1701713947
 start run 4 for problem zz_1701713947
   start samplings 1000 for problem zz_1701713947
sampled for problem zz_1701713947
sampled for problem zz_2117849290
finished samples sampling for zz_2117849290
 finished run 3 for problem zz_2117849290
 start run 4 for problem zz_2117849290
   start samplings 1000 for problem zz_2117849290
sampled for problem zz_2117849290
sampled for problem zz_0295310170
finished samples sampling for zz_0295310170
 finished run 3 for problem zz_0295310170
 start run 4 for problem zz_0295310170
   start samplings 1000 for problem zz_0295310170
sampled for problem zz_0295310170
sampled for problem zz_8714690430
finished samples sampling for zz_8714690430
 finished run 3 for problem zz_8714690430
 start run 4 for problem zz_8714690430
   start samplings 1000 for problem zz_8714690430
sampled for problem zz_8714690430
sampled for problem zz_5533357779
finished samples sampling for zz_5533357779
 finished run 3 for problem zz_5533357779
 start run 4 for problem zz_5533357779
   start samplings 1000 for problem zz_5533357779
sampled for problem zz_5533357779
sampled for problem zz_7841130710
finished samples sampling for zz_7841130710
 finished run 3 for problem zz_7841130710
 start run 4 for problem zz_7841130710
   start samplings 1000 for problem zz_7841130710
sampled for problem zz_7841130710
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_8290171268
finished samples sampling for zz_8290171268
 finished run 3 for problem zz_8290171268
 start run 4 for problem zz_8290171268
   start samplings 1000 for problem zz_8290171268
sampled for problem zz_8290171268
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3387349060
finished samples sampling for zz_3387349060
 finished run 4 for problem zz_3387349060
 start run 5 for problem zz_3387349060
   start samplings 1000 for problem zz_3387349060
sampled for problem zz_3387349060
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_1701713947
finished samples sampling for zz_1701713947
 finished run 4 for problem zz_1701713947
 start run 5 for problem zz_1701713947
   start samplings 1000 for problem zz_1701713947
sampled for problem zz_1701713947
sampled for problem zz_2117849290
finished samples sampling for zz_2117849290
 problem zz_4285806320 will be solved 1 times per run
 start run 0 for problem zz_4285806320
   start samplings 1000 for problem zz_4285806320
sampled for problem zz_4285806320
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f63ec726ea0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f63ec726ea0>
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_6747346934
finished samples sampling for zz_6747346934
 finished run 8 for problem zz_6747346934
 start run 9 for problem zz_6747346934
   start samplings 1000 for problem zz_6747346934
sampled for problem zz_6747346934
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6259398707
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_2788338479
finished samples sampling for zz_2788338479
 finished run 8 for problem zz_2788338479
 start run 9 for problem zz_2788338479
   start samplings 1000 for problem zz_2788338479
sampled for problem zz_2788338479
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_9230029004
finished samples sampling for zz_9230029004
 finished run 8 for problem zz_9230029004
 start run 9 for problem zz_9230029004
   start samplings 1000 for problem zz_9230029004
sampled for problem zz_9230029004
sampled for problem zz_9439544350
finished samples sampling for zz_9439544350
 finished run 8 for problem zz_9439544350
 start run 9 for problem zz_9439544350
   start samplings 1000 for problem zz_9439544350
sampled for problem zz_9439544350
sampled for problem zz_0583988708
finished samples sampling for zz_0583988708
 finished run 8 for problem zz_0583988708
 start run 9 for problem zz_0583988708
   start samplings 1000 for problem zz_0583988708
sampled for problem zz_0583988708
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_0361306051
finished samples sampling for zz_0361306051
 finished run 9 for problem zz_0361306051
 succesfully retrieved answer for problem {} zz_0361306051
 start working on problem zz_0277687505
 start writing answer for problem {} zz_0361306051
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f63ec7ca480>
 Queue sizes: problems_to_submit = 14, answers_to_write = 0
 problem zz_0277687505 will take can be sampled with a single run
 problem zz_0277687505 will be solved 1 times per run
sampled for problem zz_7606317011
finished samples sampling for zz_7606317011
 finished run 9 for problem zz_7606317011
 start run 0 for problem zz_0277687505
   start samplings 1000 for problem zz_0277687505
sampled for problem zz_0277687505
 succesfully retrieved answer for problem {} zz_7606317011
 start working on problem zz_2260395055
 start writing answer for problem {} zz_7606317011
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f63ec7ca480>
sampled for problem zz_4285806320
finished samples sampling for zz_4285806320
 finished run 0 for problem zz_4285806320
 start run 1 for problem zz_4285806320
   start samplings 1000 for problem zz_4285806320
sampled for problem zz_4285806320
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f64045f2630>
 problem zz_2260395055 will take can be sampled with a single run
 problem zz_2260395055 will be solved 1 times per run
 start run 0 for problem zz_2260395055
   start samplings 1000 for problem zz_2260395055
sampled for problem zz_2260395055
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f64045f2630>
 Queue sizes: problems_to_submit = 13, answers_to_write = 0
sampled for problem zz_6747346934
finished samples sampling for zz_6747346934
 finished run 9 for problem zz_6747346934
 succesfully retrieved answer for problem {} zz_6747346934
 start working on problem zz_2239038483
 Queue sizes: problems_to_submit = 12, answers_to_write = 1
 problem zz_2239038483 will take can be sampled with a single run
 problem zz_2239038483 will be solved 1 times per run
 start run 0 for problem zz_2239038483
   start samplings 1000 for problem zz_2239038483
sampled for problem zz_2239038483
 Queue sizes: problems_to_submit = 12, answers_to_write = 1
 Queue sizes: problems_to_submit = 12, answers_to_write = 1
sampled for problem zz_2788338479
finished samples sampling for zz_2788338479
 finished run 9 for problem zz_2788338479
 succesfully retrieved answer for problem {} zz_2788338479
 start working on problem zz_6835473743
 problem zz_6835473743 will take can be sampled with a single run
 problem zz_6835473743 will be solved 1 times per run
 start run 0 for problem zz_6835473743
   start samplings 1000 for problem zz_6835473743
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6244783629
finished samples sampling for zz_6244783629
 finished run 1 for problem zz_6244783629
 start run 2 for problem zz_6244783629
   start samplings 1000 for problem zz_6244783629
sampled for problem zz_6244783629
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_4660896733
finished samples sampling for zz_4660896733
 finished run 1 for problem zz_4660896733
 start run 2 for problem zz_4660896733
   start samplings 1000 for problem zz_4660896733
sampled for problem zz_4660896733
sampled for problem zz_4833429819
finished samples sampling for zz_4833429819
 finished run 1 for problem zz_4833429819
 start run 2 for problem zz_4833429819
   start samplings 1000 for problem zz_4833429819
sampled for problem zz_4833429819
sampled for problem zz_3544680810
finished samples sampling for zz_3544680810
 finished run 1 for problem zz_3544680810
 start run 2 for problem zz_3544680810
   start samplings 1000 for problem zz_3544680810
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3544680810
sampled for problem zz_6027592363
finished samples sampling for zz_6027592363
 finished run 1 for problem zz_6027592363
 start run 2 for problem zz_6027592363
   start samplings 1000 for problem zz_6027592363
sampled for problem zz_6027592363
sampled for problem zz_9043043111
finished samples sampling for zz_9043043111
 finished run 1 for problem zz_9043043111
 start run 2 for problem zz_9043043111
   start samplings 1000 for problem zz_9043043111
sampled for problem zz_9043043111
sampled for problem zz_0889364291
finished samples sampling for zz_0889364291
 finished run 1 for problem zz_0889364291
 start run 2 for problem zz_0889364291
   start samplings 1000 for problem zz_0889364291
sampled for problem zz_0889364291
sampled for problem zz_0690618443
finished samples sampling for zz_0690618443
 finished run 1 for problem zz_0690618443
 start run 2 for problem zz_0690618443
   start samplings 1000 for problem zz_0690618443
sampled for problem zz_0690618443
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6244783629
finished samples sampling for zz_6244783629
 finished run 2 for problem zz_6244783629
 start run 3 for problem zz_6244783629
   start samplings 1000 for problem zz_6244783629
sampled for problem zz_6244783629
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_4660896733
finished samples sampling for zz_4660896733
 finished run 2 for problem zz_4660896733
 start run 3 for problem zz_4660896733
   start samplings 1000 for problem zz_4660896733
sampled for problem zz_4660896733
sampled for problem zz_4833429819
finished samples sampling for zz_4833429819
 finished run 2 for problem zz_4833429819
 start run 3 for problem zz_4833429819
   start samplings 1000 for problem zz_4833429819
sampled for problem zz_4833429819
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3544680810
finished samples sampling for zz_3544680810
 finished run 2 for problem zz_3544680810
 start run 3 for problem zz_3544680810
   start samplings 1000 for problem zz_3544680810
sampled for problem zz_3544680810
sampled for problem zz_6027592363
finished samples sampling for zz_6027592363
 finished run 2 for problem zz_6027592363
 start run 3 for problem zz_6027592363
   start samplings 1000 for problem zz_6027592363
sampled for problem zz_6027592363
sampled for problem zz_9043043111
finished samples sampling for zz_9043043111
 finished run 2 for problem zz_9043043111
 start run 3 for problem zz_9043043111
   start samplings 1000 for problem zz_9043043111
sampled for problem zz_9043043111
sampled for problem zz_0889364291
finished samples sampling for zz_0889364291
 finished run 2 for problem zz_0889364291
 start run 3 for problem zz_0889364291
   start samplings 1000 for problem zz_0889364291
sampled for problem zz_0889364291
sampled for problem zz_0690618443
finished samples sampling for zz_0690618443
 finished run 2 for problem zz_0690618443
 start run 3 for problem zz_0690618443
   start samplings 1000 for problem zz_0690618443
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0690618443
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6244783629
finished samples sampling for zz_6244783629
 finished run 3 for problem zz_6244783629
 start run 4 for problem zz_6244783629
   start samplings 1000 for problem zz_6244783629
sampled for problem zz_6244783629
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_4660896733
finished samples sampling for zz_4660896733
 finished run 3 for problem zz_4660896733
 start run 4 for problem zz_4660896733
   start samplings 1000 for problem zz_4660896733
sampled for problem zz_4660896733
sampled for problem zz_4833429819
finished samples sampling for zz_4833429819
 finished run 3 for problem zz_4833429819
 start run 4 for problem zz_4833429819
   start samplings 1000 for problem zz_4833429819
sampled for problem zz_4833429819
sampled for problem zz_3544680810
finished samples sampling for zz_3544680810
 finished run 3 for problem zz_3544680810
 start run 4 for problem zz_3544680810
   start samplings 1000 for problem zz_3544680810
sampled for problem zz_3544680810
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9043043111
finished samples sampling for zz_9043043111
 finished run 3 for problem zz_9043043111
 start run 4 for problem zz_9043043111
   start samplings 1000 for problem zz_9043043111
sampled for problem zz_9043043111
sampled for problem zz_6027592363
finished samples sampling for zz_6027592363
 finished run 3 for problem zz_6027592363
 start run 4 for problem zz_6027592363
   start samplings 1000 for problem zz_6027592363
sampled for problem zz_6027592363
sampled for problem zz_0690618443
finished samples sampling for zz_0690618443
 finished run 3 for problem zz_0690618443
 start run 4 for problem zz_0690618443
   start samplings 1000 for problem zz_0690618443
sampled for problem zz_0690618443
sampled for problem zz_0889364291
finished samples sampling for zz_0889364291
 finished run 3 for problem zz_0889364291
 start run 4 for problem zz_0889364291
   start samplings 1000 for problem zz_0889364291
sampled for problem zz_0889364291
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6244783629
finished samples sampling for zz_6244783629
 finished run 4 for problem zz_6244783629
 start run 5 for problem zz_6244783629
   start samplings 1000 for problem zz_6244783629
sampled for problem zz_6244783629
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_4660896733
finished samples sampling for zz_4660896733
 finished run 4 for problem zz_4660896733
 start run 5 for problem zz_4660896733
   start samplings 1000 for problem zz_4660896733
sampled for problem zz_4660896733
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 start run 5 for problem zz_6026927798
   start samplings 1000 for problem zz_6026927798
sampled for problem zz_6026927798
sampled for problem zz_3953747332
finished samples sampling for zz_3953747332
 finished run 4 for problem zz_3953747332
 start run 5 for problem zz_3953747332
   start samplings 1000 for problem zz_3953747332
sampled for problem zz_3953747332
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0050481658
finished samples sampling for zz_0050481658
 finished run 5 for problem zz_0050481658
 start run 6 for problem zz_0050481658
   start samplings 1000 for problem zz_0050481658
sampled for problem zz_0050481658
sampled for problem zz_0001863196
finished samples sampling for zz_0001863196
 finished run 4 for problem zz_0001863196
 start run 5 for problem zz_0001863196
   start samplings 1000 for problem zz_0001863196
sampled for problem zz_0001863196
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2398936663
finished samples sampling for zz_2398936663
 finished run 6 for problem zz_2398936663
 start run 7 for problem zz_2398936663
   start samplings 1000 for problem zz_2398936663
sampled for problem zz_2398936663
sampled for problem zz_0378490713
finished samples sampling for zz_0378490713
 finished run 5 for problem zz_0378490713
 start run 6 for problem zz_0378490713
   start samplings 1000 for problem zz_0378490713
sampled for problem zz_0378490713
sampled for problem zz_2357446328
finished samples sampling for zz_2357446328
 finished run 5 for problem zz_2357446328
 start run 6 for problem zz_2357446328
   start samplings 1000 for problem zz_2357446328
sampled for problem zz_2357446328
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3528964636
finished samples sampling for zz_3528964636
 finished run 5 for problem zz_3528964636
 start run 6 for problem zz_3528964636
   start samplings 1000 for problem zz_3528964636
sampled for problem zz_3528964636
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6026927798
finished samples sampling for zz_6026927798
 finished run 5 for problem zz_6026927798
 start run 6 for problem zz_6026927798
   start samplings 1000 for problem zz_6026927798
sampled for problem zz_6026927798
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3953747332
finished samples sampling for zz_3953747332
 finished run 5 for problem zz_3953747332
 start run 6 for problem zz_3953747332
   start samplings 1000 for problem zz_3953747332
sampled for problem zz_3953747332
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0050481658
finished samples sampling for zz_0050481658
 finished run 6 for problem zz_0050481658
 start run 7 for problem zz_0050481658
   start samplings 1000 for problem zz_0050481658
sampled for problem zz_0050481658
sampled for problem zz_0001863196
finished samples sampling for zz_0001863196
 finished run 5 for problem zz_0001863196
 start run 6 for problem zz_0001863196
   start samplings 1000 for problem zz_0001863196
sampled for problem zz_0001863196
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2398936663
finished samples sampling for zz_2398936663
 finished run 7 for problem zz_2398936663
 start run 8 for problem zz_2398936663
   start samplings 1000 for problem zz_2398936663
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2398936663
sampled for problem zz_0378490713
finished samples sampling for zz_0378490713
 finished run 6 for problem zz_0378490713
 start run 7 for problem zz_0378490713
   start samplings 1000 for problem zz_0378490713
sampled for problem zz_0378490713
sampled for problem zz_2357446328
finished samples sampling for zz_2357446328
 finished run 6 for problem zz_2357446328
 start run 7 for problem zz_2357446328
   start samplings 1000 for problem zz_2357446328
sampled for problem zz_2357446328
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3528964636
finished samples sampling for zz_3528964636
 finished run 6 for problem zz_3528964636
 start run 7 for problem zz_3528964636
   start samplings 1000 for problem zz_3528964636
sampled for problem zz_3528964636
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6026927798
finished samples sampling for zz_6026927798
 finished run 6 for problem zz_6026927798
 start run 7 for problem zz_6026927798
   start samplings 1000 for problem zz_6026927798
sampled for problem zz_6026927798
sampled for problem zz_3953747332
finished samples sampling for zz_3953747332
 finished run 6 for problem zz_3953747332
 start run 7 for problem zz_3953747332
   start samplings 1000 for problem zz_3953747332
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3953747332
sampled for problem zz_0001863196
finished samples sampling for zz_0001863196
 finished run 6 for problem zz_0001863196
 start run 7 for problem zz_0001863196
   start samplings 1000 for problem zz_0001863196
sampled for problem zz_0001863196
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0050481658
finished samples sampling for zz_0050481658
 finished run 7 for problem zz_0050481658
 start run 8 for problem zz_0050481658
   start samplings 1000 for problem zz_0050481658
sampled for problem zz_0050481658
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0378490713
finished samples sampling for zz_0378490713
 finished run 7 for problem zz_0378490713
 start run 8 for problem zz_0378490713
   start samplings 1000 for problem zz_0378490713
sampled for problem zz_0378490713
sampled for problem zz_2398936663
finished samples sampling for zz_2398936663
 finished run 8 for problem zz_2398936663
 start run 9 for problem zz_2398936663
   start samplings 1000 for problem zz_2398936663
sampled for problem zz_2398936663
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2357446328
finished samples sampling for zz_2357446328
 finished run 7 for problem zz_2357446328
 start run 8 for problem zz_2357446328
   start samplings 1000 for problem zz_2357446328
sampled for problem zz_2357446328
sampled for problem zz_3528964636
finished samples sampling for zz_3528964636
 finished run 7 for problem zz_3528964636
 start run 8 for problem zz_3528964636
   start samplings 1000 for problem zz_3528964636
sampled for problem zz_3528964636
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6026927798
finished samples sampling for zz_6026927798
 finished run 7 for problem zz_6026927798
 start run 8 for problem zz_6026927798
   start samplings 1000 for problem zz_6026927798
sampled for problem zz_6026927798
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3953747332
finished samples sampling for zz_3953747332
 finished run 7 for problem zz_3953747332
 start run 8 for problem zz_3953747332
   start samplings 1000 for problem zz_3953747332
sampled for problem zz_3953747332
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0001863196
finished samples sampling for zz_0001863196
 finished run 7 for problem zz_0001863196
 start run 8 for problem zz_0001863196
   start samplings 1000 for problem zz_0001863196
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6277987427
finished samples sampling for zz_6277987427
 finished run 1 for problem zz_6277987427
 start run 2 for problem zz_6277987427
   start samplings 1000 for problem zz_6277987427
sampled for problem zz_6277987427
sampled for problem zz_4171203299
finished samples sampling for zz_4171203299
 finished run 1 for problem zz_4171203299
 start run 2 for problem zz_4171203299
   start samplings 1000 for problem zz_4171203299
sampled for problem zz_4171203299
sampled for problem zz_1372475312
finished samples sampling for zz_1372475312
 finished run 1 for problem zz_1372475312
 start run 2 for problem zz_1372475312
   start samplings 1000 for problem zz_1372475312
sampled for problem zz_1372475312
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9220287810
finished samples sampling for zz_9220287810
 finished run 1 for problem zz_9220287810
 start run 2 for problem zz_9220287810
   start samplings 1000 for problem zz_9220287810
sampled for problem zz_9220287810
sampled for problem zz_3274278151
finished samples sampling for zz_3274278151
 finished run 1 for problem zz_3274278151
 start run 2 for problem zz_3274278151
   start samplings 1000 for problem zz_3274278151
sampled for problem zz_3274278151
sampled for problem zz_8714453254
finished samples sampling for zz_8714453254
 finished run 1 for problem zz_8714453254
 start run 2 for problem zz_8714453254
   start samplings 1000 for problem zz_8714453254
sampled for problem zz_8714453254
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6026204315
finished samples sampling for zz_6026204315
 finished run 1 for problem zz_6026204315
 start run 2 for problem zz_6026204315
   start samplings 1000 for problem zz_6026204315
sampled for problem zz_6026204315
sampled for problem zz_5365434579
finished samples sampling for zz_5365434579
 finished run 1 for problem zz_5365434579
 start run 2 for problem zz_5365434579
   start samplings 1000 for problem zz_5365434579
sampled for problem zz_5365434579
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6277987427
finished samples sampling for zz_6277987427
 finished run 2 for problem zz_6277987427
 start run 3 for problem zz_6277987427
   start samplings 1000 for problem zz_6277987427
sampled for problem zz_6277987427
sampled for problem zz_4171203299
finished samples sampling for zz_4171203299
 finished run 2 for problem zz_4171203299
 start run 3 for problem zz_4171203299
   start samplings 1000 for problem zz_4171203299
sampled for problem zz_4171203299
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_1372475312
finished samples sampling for zz_1372475312
 finished run 2 for problem zz_1372475312
 start run 3 for problem zz_1372475312
   start samplings 1000 for problem zz_1372475312
sampled for problem zz_1372475312
sampled for problem zz_3274278151
finished samples sampling for zz_3274278151
 finished run 2 for problem zz_3274278151
 start run 3 for problem zz_3274278151
   start samplings 1000 for problem zz_3274278151
sampled for problem zz_3274278151
sampled for problem zz_9220287810
finished samples sampling for zz_9220287810
 finished run 2 for problem zz_9220287810
 start run 3 for problem zz_9220287810
   start samplings 1000 for problem zz_9220287810
sampled for problem zz_9220287810
sampled for problem zz_8714453254
finished samples sampling for zz_8714453254
 finished run 2 for problem zz_8714453254
 start run 3 for problem zz_8714453254
   start samplings 1000 for problem zz_8714453254
sampled for problem zz_8714453254
sampled for problem zz_6026204315
finished samples sampling for zz_6026204315
 finished run 2 for problem zz_6026204315
 start run 3 for problem zz_6026204315
   start samplings 1000 for problem zz_6026204315
sampled for problem zz_6026204315
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5365434579
finished samples sampling for zz_5365434579
 finished run 2 for problem zz_5365434579
 start run 3 for problem zz_5365434579
   start samplings 1000 for problem zz_5365434579
sampled for problem zz_5365434579
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6277987427
finished samples sampling for zz_6277987427
 finished run 3 for problem zz_6277987427
 start run 4 for problem zz_6277987427
   start samplings 1000 for problem zz_6277987427
sampled for problem zz_6277987427
sampled for problem zz_4171203299
finished samples sampling for zz_4171203299
 finished run 3 for problem zz_4171203299
 start run 4 for problem zz_4171203299
   start samplings 1000 for problem zz_4171203299
sampled for problem zz_4171203299
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_1372475312
finished samples sampling for zz_1372475312
 finished run 3 for problem zz_1372475312
 start run 4 for problem zz_1372475312
   start samplings 1000 for problem zz_1372475312
sampled for problem zz_1372475312
sampled for problem zz_3274278151
finished samples sampling for zz_3274278151
 finished run 3 for problem zz_3274278151
 start run 4 for problem zz_3274278151
   start samplings 1000 for problem zz_3274278151
sampled for problem zz_3274278151
sampled for problem zz_9220287810
finished samples sampling for zz_9220287810
 finished run 3 for problem zz_9220287810
 start run 4 for problem zz_9220287810
   start samplings 1000 for problem zz_9220287810
sampled for problem zz_9220287810
sampled for problem zz_8714453254
finished samples sampling for zz_8714453254
 finished run 3 for problem zz_8714453254
 start run 4 for problem zz_8714453254
   start samplings 1000 for problem zz_8714453254
sampled for problem zz_8714453254
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6026204315
finished samples sampling for zz_6026204315
 finished run 3 for problem zz_6026204315
 start run 4 for problem zz_6026204315
   start samplings 1000 for problem zz_6026204315
sampled for problem zz_6026204315
sampled for problem zz_5365434579
finished samples sampling for zz_5365434579
 finished run 3 for problem zz_5365434579
 start run 4 for problem zz_5365434579
   start samplings 1000 for problem zz_5365434579
sampled for problem zz_5365434579
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6277987427
finished samples sampling for zz_6277987427
 finished run 4 for problem zz_6277987427
 start run 5 for problem zz_6277987427
   start samplings 1000 for problem zz_6277987427
sampled for problem zz_6277987427
sampled for problem zz_4171203299
finished samples sampling for zz_4171203299
 finished run 4 for problem zz_4171203299
 start run 5 for problem zz_4171203299
   start samplings 1000 for problem zz_4171203299
sampled for problem zz_7720896514
sampled for problem zz_4334158375
finished samples sampling for zz_4334158375
 finished run 4 for problem zz_4334158375
 start run 5 for problem zz_4334158375
   start samplings 1000 for problem zz_4334158375
sampled for problem zz_4334158375
sampled for problem zz_9064081178
finished samples sampling for zz_9064081178
 finished run 4 for problem zz_9064081178
 start run 5 for problem zz_9064081178
   start samplings 1000 for problem zz_9064081178
sampled for problem zz_9064081178
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5611322142
finished samples sampling for zz_5611322142
 finished run 4 for problem zz_5611322142
 start run 5 for problem zz_5611322142
   start samplings 1000 for problem zz_5611322142
sampled for problem zz_5611322142
sampled for problem zz_6292597806
finished samples sampling for zz_6292597806
 finished run 5 for problem zz_6292597806
 start run 6 for problem zz_6292597806
   start samplings 1000 for problem zz_6292597806
sampled for problem zz_6292597806
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6241994977
finished samples sampling for zz_6241994977
 finished run 5 for problem zz_6241994977
 start run 6 for problem zz_6241994977
   start samplings 1000 for problem zz_6241994977
sampled for problem zz_6241994977
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9427452893
finished samples sampling for zz_9427452893
 finished run 5 for problem zz_9427452893
 start run 6 for problem zz_9427452893
   start samplings 1000 for problem zz_9427452893
sampled for problem zz_9427452893
sampled for problem zz_6882327039
finished samples sampling for zz_6882327039
 finished run 5 for problem zz_6882327039
 start run 6 for problem zz_6882327039
   start samplings 1000 for problem zz_6882327039
sampled for problem zz_6882327039
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_7720896514
finished samples sampling for zz_7720896514
 finished run 5 for problem zz_7720896514
 start run 6 for problem zz_7720896514
   start samplings 1000 for problem zz_7720896514
sampled for problem zz_7720896514
sampled for problem zz_4334158375
finished samples sampling for zz_4334158375
 finished run 5 for problem zz_4334158375
 start run 6 for problem zz_4334158375
   start samplings 1000 for problem zz_4334158375
sampled for problem zz_4334158375
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9064081178
finished samples sampling for zz_9064081178
 finished run 5 for problem zz_9064081178
 start run 6 for problem zz_9064081178
   start samplings 1000 for problem zz_9064081178
sampled for problem zz_9064081178
sampled for problem zz_5611322142
finished samples sampling for zz_5611322142
 finished run 5 for problem zz_5611322142
 start run 6 for problem zz_5611322142
   start samplings 1000 for problem zz_5611322142
sampled for problem zz_5611322142
sampled for problem zz_6292597806
finished samples sampling for zz_6292597806
 finished run 6 for problem zz_6292597806
 start run 7 for problem zz_6292597806
   start samplings 1000 for problem zz_6292597806
sampled for problem zz_6292597806
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6241994977
finished samples sampling for zz_6241994977
 finished run 6 for problem zz_6241994977
 start run 7 for problem zz_6241994977
   start samplings 1000 for problem zz_6241994977
sampled for problem zz_6241994977
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9427452893
finished samples sampling for zz_9427452893
 finished run 6 for problem zz_9427452893
 start run 7 for problem zz_9427452893
   start samplings 1000 for problem zz_9427452893
sampled for problem zz_9427452893
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6882327039
finished samples sampling for zz_6882327039
 finished run 6 for problem zz_6882327039
 start run 7 for problem zz_6882327039
   start samplings 1000 for problem zz_6882327039
sampled for problem zz_6882327039
sampled for problem zz_7720896514
finished samples sampling for zz_7720896514
 finished run 6 for problem zz_7720896514
 start run 7 for problem zz_7720896514
   start samplings 1000 for problem zz_7720896514
sampled for problem zz_7720896514
sampled for problem zz_4334158375
finished samples sampling for zz_4334158375
 finished run 6 for problem zz_4334158375
 start run 7 for problem zz_4334158375
   start samplings 1000 for problem zz_4334158375
sampled for problem zz_4334158375
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9064081178
finished samples sampling for zz_9064081178
 finished run 6 for problem zz_9064081178
 start run 7 for problem zz_9064081178
   start samplings 1000 for problem zz_9064081178
sampled for problem zz_9064081178
sampled for problem zz_5611322142
finished samples sampling for zz_5611322142
 finished run 6 for problem zz_5611322142
 start run 7 for problem zz_5611322142
   start samplings 1000 for problem zz_5611322142
sampled for problem zz_5611322142
sampled for problem zz_6292597806
finished samples sampling for zz_6292597806
 finished run 7 for problem zz_6292597806
 start run 8 for problem zz_6292597806
   start samplings 1000 for problem zz_6292597806
sampled for problem zz_6292597806
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6241994977
finished samples sampling for zz_6241994977
 finished run 7 for problem zz_6241994977
 start run 8 for problem zz_6241994977
   start samplings 1000 for problem zz_6241994977
sampled for problem zz_6241994977
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9427452893
finished samples sampling for zz_9427452893
 finished run 7 for problem zz_9427452893
 start run 8 for problem zz_9427452893
   start samplings 1000 for problem zz_9427452893
sampled for problem zz_9427452893
sampled for problem zz_6882327039
finished samples sampling for zz_6882327039
 finished run 7 for problem zz_6882327039
 start run 8 for problem zz_6882327039
   start samplings 1000 for problem zz_6882327039
sampled for problem zz_6882327039
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_7720896514
finished samples sampling for zz_7720896514
 finished run 7 for problem zz_7720896514
 start run 8 for problem zz_7720896514
   start samplings 1000 for problem zz_7720896514
sampled for problem zz_7720896514
sampled for problem zz_4334158375
finished samples sampling for zz_4334158375
 finished run 7 for problem zz_4334158375
 start run 8 for problem zz_4334158375
   start samplings 1000 for problem zz_4334158375
sampled for problem zz_4334158375
sampled for problem zz_9064081178
finished samples sampling for zz_9064081178
 finished run 7 for problem zz_9064081178
 start run 8 for problem zz_9064081178
   start samplings 1000 for problem zz_9064081178
sampled for problem zz_9064081178
sampled for problem zz_5611322142
finished samples sampling for zz_5611322142
 finished run 7 for problem zz_5611322142
sampled for problem zz_6835473743
 Queue sizes: problems_to_submit = 11, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 11, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_7606317011
 start writing answer for problem {} zz_6747346934
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f63ec770710>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f63ec770710>
 Queue sizes: problems_to_submit = 11, answers_to_write = 1
sampled for problem zz_9230029004
finished samples sampling for zz_9230029004
 finished run 9 for problem zz_9230029004
 succesfully retrieved answer for problem {} zz_9230029004
 start working on problem zz_2871354184
 Queue sizes: problems_to_submit = 10, answers_to_write = 2
 problem zz_2871354184 will take can be sampled with a single run
 problem zz_2871354184 will be solved 1 times per run
sampled for problem zz_9439544350
finished samples sampling for zz_9439544350
 finished run 9 for problem zz_9439544350
sampled for problem zz_0583988708
finished samples sampling for zz_0583988708
 finished run 9 for problem zz_0583988708
 start run 0 for problem zz_2871354184
   start samplings 1000 for problem zz_2871354184
sampled for problem zz_2871354184
 succesfully retrieved answer for problem {} zz_9439544350
 start working on problem zz_1089975612
 succesfully retrieved answer for problem {} zz_0583988708
 start working on problem zz_6016382926
 problem zz_1089975612 will take can be sampled with a single run
 problem zz_1089975612 will be solved 1 times per run
 start run 0 for problem zz_1089975612
   start samplings 1000 for problem zz_1089975612
sampled for problem zz_1089975612
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
 problem zz_6016382926 will take can be sampled with a single run
 problem zz_6016382926 will be solved 1 times per run
sampled for problem zz_0277687505
finished samples sampling for zz_0277687505
 finished run 0 for problem zz_0277687505
 start run 1 for problem zz_0277687505
   start samplings 1000 for problem zz_0277687505
sampled for problem zz_0277687505
 start run 0 for problem zz_6016382926
   start samplings 1000 for problem zz_6016382926
sampled for problem zz_6016382926
sampled for problem zz_4285806320
finished samples sampling for zz_4285806320
 finished run 1 for problem zz_4285806320
 start run 2 for problem zz_4285806320
   start samplings 1000 for problem zz_4285806320
sampled for problem zz_4285806320
sampled for problem zz_2260395055
finished samples sampling for zz_2260395055
 finished run 0 for problem zz_2260395055
 start run 1 for problem zz_2260395055
   start samplings 1000 for problem zz_2260395055
sampled for problem zz_2260395055
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
sampled for problem zz_2239038483
finished samples sampling for zz_2239038483
 finished run 0 for problem zz_2239038483
 start run 1 for problem zz_2239038483
   start samplings 1000 for problem zz_2239038483
sampled for problem zz_2239038483
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
sampled for problem zz_6835473743
finished samples sampling for zz_6835473743
 finished run 0 for problem zz_6835473743
 start run 1 for problem zz_6835473743
   start samplings 1000 for problem zz_6835473743
sampled for problem zz_6835473743
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_0001863196
sampled for problem zz_0050481658
finished samples sampling for zz_0050481658
 finished run 8 for problem zz_0050481658
 start run 9 for problem zz_0050481658
   start samplings 1000 for problem zz_0050481658
sampled for problem zz_0050481658
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0378490713
finished samples sampling for zz_0378490713
 finished run 8 for problem zz_0378490713
 start run 9 for problem zz_0378490713
   start samplings 1000 for problem zz_0378490713
sampled for problem zz_0378490713
sampled for problem zz_2398936663
finished samples sampling for zz_2398936663
 finished run 9 for problem zz_2398936663
 succesfully retrieved answer for problem {} zz_2398936663
 start working on problem zz_4933543679
 start writing answer for problem {} zz_2398936663
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f66212baff0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f66212baff0>
 problem zz_4933543679 will take can be sampled with a single run
 problem zz_4933543679 will be solved 1 times per run
 start run 0 for problem zz_4933543679
   start samplings 1000 for problem zz_4933543679
sampled for problem zz_4933543679
sampled for problem zz_2357446328
finished samples sampling for zz_2357446328
 finished run 8 for problem zz_2357446328
 start run 9 for problem zz_2357446328
   start samplings 1000 for problem zz_2357446328
sampled for problem zz_2357446328
sampled for problem zz_3528964636
finished samples sampling for zz_3528964636
 finished run 8 for problem zz_3528964636
 start run 9 for problem zz_3528964636
   start samplings 1000 for problem zz_3528964636
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_3528964636
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_6026927798
finished samples sampling for zz_6026927798
 finished run 8 for problem zz_6026927798
 start run 9 for problem zz_6026927798
   start samplings 1000 for problem zz_6026927798
sampled for problem zz_6026927798
sampled for problem zz_3953747332
finished samples sampling for zz_3953747332
 finished run 8 for problem zz_3953747332
 start run 9 for problem zz_3953747332
   start samplings 1000 for problem zz_3953747332
sampled for problem zz_3953747332
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_2398936663
sampled for problem zz_0001863196
finished samples sampling for zz_0001863196
 finished run 8 for problem zz_0001863196
 start run 9 for problem zz_0001863196
   start samplings 1000 for problem zz_0001863196
sampled for problem zz_0001863196
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_0050481658
finished samples sampling for zz_0050481658
 finished run 9 for problem zz_0050481658
 succesfully retrieved answer for problem {} zz_0050481658
 start working on problem zz_8721690652
 start writing answer for problem {} zz_0050481658
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f6620578d40>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f6620578d40>
 Queue sizes: problems_to_submit = 14, answers_to_write = 0
 problem zz_8721690652 will take can be sampled with a single run
 problem zz_8721690652 will be solved 1 times per run
 start run 0 for problem zz_8721690652
   start samplings 1000 for problem zz_8721690652
sampled for problem zz_8721690652
 Queue sizes: problems_to_submit = 14, answers_to_write = 0
 Queue sizes: problems_to_submit = 14, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_9584060801
finished samples sampling for zz_9584060801
 finished run 5 for problem zz_9584060801
 start run 6 for problem zz_9584060801
   start samplings 1000 for problem zz_9584060801
sampled for problem zz_9584060801
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_4282889685
finished samples sampling for zz_4282889685
 finished run 4 for problem zz_4282889685
 start run 5 for problem zz_4282889685
   start samplings 1000 for problem zz_4282889685
sampled for problem zz_4282889685
sampled for problem zz_3147064965
finished samples sampling for zz_3147064965
 finished run 4 for problem zz_3147064965
 start run 5 for problem zz_3147064965
   start samplings 1000 for problem zz_3147064965
sampled for problem zz_3147064965
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0946095345
finished samples sampling for zz_0946095345
 finished run 4 for problem zz_0946095345
 start run 5 for problem zz_0946095345
   start samplings 1000 for problem zz_0946095345
sampled for problem zz_0946095345
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6368149696
finished samples sampling for zz_6368149696
 finished run 4 for problem zz_6368149696
 start run 5 for problem zz_6368149696
   start samplings 1000 for problem zz_6368149696
sampled for problem zz_6368149696
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5857141561
finished samples sampling for zz_5857141561
 finished run 5 for problem zz_5857141561
 start run 6 for problem zz_5857141561
   start samplings 1000 for problem zz_5857141561
sampled for problem zz_5857141561
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6986245643
finished samples sampling for zz_6986245643
 finished run 5 for problem zz_6986245643
 start run 6 for problem zz_6986245643
   start samplings 1000 for problem zz_6986245643
sampled for problem zz_6986245643
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9142185862
finished samples sampling for zz_9142185862
 finished run 5 for problem zz_9142185862
 start run 6 for problem zz_9142185862
   start samplings 1000 for problem zz_9142185862
sampled for problem zz_9142185862
sampled for problem zz_9584060801
finished samples sampling for zz_9584060801
 finished run 6 for problem zz_9584060801
 start run 7 for problem zz_9584060801
   start samplings 1000 for problem zz_9584060801
sampled for problem zz_9584060801
sampled for problem zz_4282889685
finished samples sampling for zz_4282889685
 finished run 5 for problem zz_4282889685
 start run 6 for problem zz_4282889685
   start samplings 1000 for problem zz_4282889685
sampled for problem zz_4282889685
sampled for problem zz_3147064965
finished samples sampling for zz_3147064965
 finished run 5 for problem zz_3147064965
 start run 6 for problem zz_3147064965
   start samplings 1000 for problem zz_3147064965
sampled for problem zz_3147064965
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0946095345
finished samples sampling for zz_0946095345
 finished run 5 for problem zz_0946095345
 start run 6 for problem zz_0946095345
   start samplings 1000 for problem zz_0946095345
sampled for problem zz_0946095345
sampled for problem zz_6368149696
finished samples sampling for zz_6368149696
 finished run 5 for problem zz_6368149696
 start run 6 for problem zz_6368149696
   start samplings 1000 for problem zz_6368149696
sampled for problem zz_6368149696
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5857141561
finished samples sampling for zz_5857141561
 finished run 6 for problem zz_5857141561
 start run 7 for problem zz_5857141561
   start samplings 1000 for problem zz_5857141561
sampled for problem zz_5857141561
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6986245643
finished samples sampling for zz_6986245643
 finished run 6 for problem zz_6986245643
 start run 7 for problem zz_6986245643
   start samplings 1000 for problem zz_6986245643
sampled for problem zz_6986245643
sampled for problem zz_9142185862
finished samples sampling for zz_9142185862
 finished run 6 for problem zz_9142185862
 start run 7 for problem zz_9142185862
   start samplings 1000 for problem zz_9142185862
sampled for problem zz_9142185862
sampled for problem zz_9584060801
finished samples sampling for zz_9584060801
 finished run 7 for problem zz_9584060801
 start run 8 for problem zz_9584060801
   start samplings 1000 for problem zz_9584060801
sampled for problem zz_9584060801
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_4282889685
finished samples sampling for zz_4282889685
 finished run 6 for problem zz_4282889685
 start run 7 for problem zz_4282889685
   start samplings 1000 for problem zz_4282889685
sampled for problem zz_4282889685
sampled for problem zz_3147064965
finished samples sampling for zz_3147064965
 finished run 6 for problem zz_3147064965
 start run 7 for problem zz_3147064965
   start samplings 1000 for problem zz_3147064965
sampled for problem zz_3147064965
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0946095345
finished samples sampling for zz_0946095345
 finished run 6 for problem zz_0946095345
 start run 7 for problem zz_0946095345
   start samplings 1000 for problem zz_0946095345
sampled for problem zz_0946095345
sampled for problem zz_6368149696
finished samples sampling for zz_6368149696
 finished run 6 for problem zz_6368149696
 start run 7 for problem zz_6368149696
   start samplings 1000 for problem zz_6368149696
sampled for problem zz_6368149696
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5857141561
finished samples sampling for zz_5857141561
 finished run 7 for problem zz_5857141561
 start run 8 for problem zz_5857141561
   start samplings 1000 for problem zz_5857141561
sampled for problem zz_5857141561
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6986245643
finished samples sampling for zz_6986245643
 finished run 7 for problem zz_6986245643
 start run 8 for problem zz_6986245643
   start samplings 1000 for problem zz_6986245643
sampled for problem zz_6986245643
sampled for problem zz_9142185862
finished samples sampling for zz_9142185862
 finished run 7 for problem zz_9142185862
 start run 8 for problem zz_9142185862
   start samplings 1000 for problem zz_9142185862
sampled for problem zz_9142185862
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9584060801
finished samples sampling for zz_9584060801
 finished run 8 for problem zz_9584060801
 start run 9 for problem zz_9584060801
   start samplings 1000 for problem zz_9584060801
sampled for problem zz_9584060801
sampled for problem zz_4282889685
finished samples sampling for zz_4282889685
 finished run 7 for problem zz_4282889685
 start run 8 for problem zz_4282889685
   start samplings 1000 for problem zz_4282889685
sampled for problem zz_4282889685
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3147064965
finished samples sampling for zz_3147064965
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0361306051
 start writing answer for problem {} zz_2788338479
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f63ec7c8770>
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f63ec7c8770>
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6747346934
 start writing answer for problem {} zz_9230029004
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f63ec771e20>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f63ec771e20>
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
sampled for problem zz_2871354184
finished samples sampling for zz_2871354184
 finished run 0 for problem zz_2871354184
 start run 1 for problem zz_2871354184
   start samplings 1000 for problem zz_2871354184
sampled for problem zz_2871354184
sampled for problem zz_1089975612
finished samples sampling for zz_1089975612
 finished run 0 for problem zz_1089975612
 start run 1 for problem zz_1089975612
   start samplings 1000 for problem zz_1089975612
sampled for problem zz_1089975612
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
sampled for problem zz_0277687505
finished samples sampling for zz_0277687505
 finished run 1 for problem zz_0277687505
 start run 2 for problem zz_0277687505
   start samplings 1000 for problem zz_0277687505
sampled for problem zz_0277687505
sampled for problem zz_6016382926
finished samples sampling for zz_6016382926
 finished run 0 for problem zz_6016382926
 start run 1 for problem zz_6016382926
   start samplings 1000 for problem zz_6016382926
sampled for problem zz_6016382926
sampled for problem zz_4285806320
finished samples sampling for zz_4285806320
 finished run 2 for problem zz_4285806320
 start run 3 for problem zz_4285806320
   start samplings 1000 for problem zz_4285806320
sampled for problem zz_4285806320
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
sampled for problem zz_2260395055
finished samples sampling for zz_2260395055
 finished run 1 for problem zz_2260395055
 start run 2 for problem zz_2260395055
   start samplings 1000 for problem zz_2260395055
sampled for problem zz_2260395055
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
sampled for problem zz_2239038483
finished samples sampling for zz_2239038483
 finished run 1 for problem zz_2239038483
 start run 2 for problem zz_2239038483
   start samplings 1000 for problem zz_2239038483
sampled for problem zz_2239038483
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
sampled for problem zz_6835473743
finished samples sampling for zz_6835473743
 finished run 1 for problem zz_6835473743
 start run 2 for problem zz_6835473743
   start samplings 1000 for problem zz_6835473743
sampled for problem zz_6835473743
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_7909671180
finished samples sampling for zz_7909671180
 finished run 4 for problem zz_7909671180
 start run 5 for problem zz_7909671180
   start samplings 1000 for problem zz_7909671180
sampled for problem zz_7909671180
sampled for problem zz_1950776516
finished samples sampling for zz_1950776516
 finished run 4 for problem zz_1950776516
 start run 5 for problem zz_1950776516
   start samplings 1000 for problem zz_1950776516
sampled for problem zz_1950776516
sampled for problem zz_6600677120
finished samples sampling for zz_6600677120
 finished run 4 for problem zz_6600677120
 start run 5 for problem zz_6600677120
   start samplings 1000 for problem zz_6600677120
sampled for problem zz_6600677120
sampled for problem zz_7591282265
finished samples sampling for zz_7591282265
 finished run 4 for problem zz_7591282265
 start run 5 for problem zz_7591282265
   start samplings 1000 for problem zz_7591282265
sampled for problem zz_7591282265
sampled for problem zz_8754965043
finished samples sampling for zz_8754965043
 finished run 4 for problem zz_8754965043
 start run 5 for problem zz_8754965043
   start samplings 1000 for problem zz_8754965043
sampled for problem zz_8754965043
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9489630532
finished samples sampling for zz_9489630532
 finished run 5 for problem zz_9489630532
 start run 6 for problem zz_9489630532
   start samplings 1000 for problem zz_9489630532
sampled for problem zz_9489630532
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3085251181
finished samples sampling for zz_3085251181
 finished run 5 for problem zz_3085251181
 start run 6 for problem zz_3085251181
   start samplings 1000 for problem zz_3085251181
sampled for problem zz_3085251181
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2631571852
finished samples sampling for zz_2631571852
 finished run 5 for problem zz_2631571852
 start run 6 for problem zz_2631571852
   start samplings 1000 for problem zz_2631571852
sampled for problem zz_2631571852
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_7909671180
finished samples sampling for zz_7909671180
 finished run 5 for problem zz_7909671180
 start run 6 for problem zz_7909671180
   start samplings 1000 for problem zz_7909671180
sampled for problem zz_7909671180
sampled for problem zz_1950776516
finished samples sampling for zz_1950776516
 finished run 5 for problem zz_1950776516
 start run 6 for problem zz_1950776516
   start samplings 1000 for problem zz_1950776516
sampled for problem zz_1950776516
sampled for problem zz_6600677120
finished samples sampling for zz_6600677120
 finished run 5 for problem zz_6600677120
 start run 6 for problem zz_6600677120
   start samplings 1000 for problem zz_6600677120
sampled for problem zz_6600677120
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_7591282265
finished samples sampling for zz_7591282265
 finished run 5 for problem zz_7591282265
 start run 6 for problem zz_7591282265
   start samplings 1000 for problem zz_7591282265
sampled for problem zz_7591282265
sampled for problem zz_8754965043
finished samples sampling for zz_8754965043
 finished run 5 for problem zz_8754965043
 start run 6 for problem zz_8754965043
   start samplings 1000 for problem zz_8754965043
sampled for problem zz_8754965043
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9489630532
finished samples sampling for zz_9489630532
 finished run 6 for problem zz_9489630532
 start run 7 for problem zz_9489630532
   start samplings 1000 for problem zz_9489630532
sampled for problem zz_9489630532
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3085251181
finished samples sampling for zz_3085251181
 finished run 6 for problem zz_3085251181
 start run 7 for problem zz_3085251181
   start samplings 1000 for problem zz_3085251181
sampled for problem zz_3085251181
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2631571852
finished samples sampling for zz_2631571852
 finished run 6 for problem zz_2631571852
 start run 7 for problem zz_2631571852
   start samplings 1000 for problem zz_2631571852
sampled for problem zz_2631571852
sampled for problem zz_7909671180
finished samples sampling for zz_7909671180
 finished run 6 for problem zz_7909671180
 start run 7 for problem zz_7909671180
   start samplings 1000 for problem zz_7909671180
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_7909671180
sampled for problem zz_1950776516
finished samples sampling for zz_1950776516
 finished run 6 for problem zz_1950776516
 start run 7 for problem zz_1950776516
   start samplings 1000 for problem zz_1950776516
sampled for problem zz_1950776516
sampled for problem zz_6600677120
finished samples sampling for zz_6600677120
 finished run 6 for problem zz_6600677120
 start run 7 for problem zz_6600677120
   start samplings 1000 for problem zz_6600677120
sampled for problem zz_6600677120
sampled for problem zz_7591282265
finished samples sampling for zz_7591282265
 finished run 6 for problem zz_7591282265
 start run 7 for problem zz_7591282265
   start samplings 1000 for problem zz_7591282265
sampled for problem zz_7591282265
sampled for problem zz_8754965043
finished samples sampling for zz_8754965043
 finished run 6 for problem zz_8754965043
 start run 7 for problem zz_8754965043
   start samplings 1000 for problem zz_8754965043
sampled for problem zz_8754965043
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9489630532
finished samples sampling for zz_9489630532
 finished run 7 for problem zz_9489630532
 start run 8 for problem zz_9489630532
   start samplings 1000 for problem zz_9489630532
sampled for problem zz_9489630532
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3085251181
finished samples sampling for zz_3085251181
 finished run 7 for problem zz_3085251181
 start run 8 for problem zz_3085251181
   start samplings 1000 for problem zz_3085251181
sampled for problem zz_3085251181
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2631571852
finished samples sampling for zz_2631571852
 finished run 7 for problem zz_2631571852
 start run 8 for problem zz_2631571852
   start samplings 1000 for problem zz_2631571852
sampled for problem zz_2631571852
sampled for problem zz_7909671180
finished samples sampling for zz_7909671180
 finished run 7 for problem zz_7909671180
 start run 8 for problem zz_7909671180
   start samplings 1000 for problem zz_7909671180
sampled for problem zz_7909671180
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_1950776516
finished samples sampling for zz_1950776516
 finished run 7 for problem zz_1950776516
 start run 8 for problem zz_1950776516
   start samplings 1000 for problem zz_1950776516
sampled for problem zz_1950776516
sampled for problem zz_7591282265
finished samples sampling for zz_7591282265
 finished run 7 for problem zz_7591282265
 start run 8 for problem zz_7591282265
 finished run 4 for problem zz_2117849290
 start run 5 for problem zz_2117849290
   start samplings 1000 for problem zz_2117849290
sampled for problem zz_2117849290
sampled for problem zz_0295310170
finished samples sampling for zz_0295310170
 finished run 4 for problem zz_0295310170
 start run 5 for problem zz_0295310170
   start samplings 1000 for problem zz_0295310170
sampled for problem zz_0295310170
sampled for problem zz_8714690430
finished samples sampling for zz_8714690430
 finished run 4 for problem zz_8714690430
 start run 5 for problem zz_8714690430
   start samplings 1000 for problem zz_8714690430
sampled for problem zz_8714690430
sampled for problem zz_5533357779
finished samples sampling for zz_5533357779
 finished run 4 for problem zz_5533357779
 start run 5 for problem zz_5533357779
   start samplings 1000 for problem zz_5533357779
sampled for problem zz_5533357779
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_7841130710
finished samples sampling for zz_7841130710
 finished run 4 for problem zz_7841130710
 start run 5 for problem zz_7841130710
   start samplings 1000 for problem zz_7841130710
sampled for problem zz_7841130710
sampled for problem zz_8290171268
finished samples sampling for zz_8290171268
 finished run 4 for problem zz_8290171268
 start run 5 for problem zz_8290171268
   start samplings 1000 for problem zz_8290171268
sampled for problem zz_8290171268
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3387349060
finished samples sampling for zz_3387349060
 finished run 5 for problem zz_3387349060
 start run 6 for problem zz_3387349060
   start samplings 1000 for problem zz_3387349060
sampled for problem zz_3387349060
sampled for problem zz_1701713947
finished samples sampling for zz_1701713947
 finished run 5 for problem zz_1701713947
 start run 6 for problem zz_1701713947
   start samplings 1000 for problem zz_1701713947
sampled for problem zz_1701713947
sampled for problem zz_2117849290
finished samples sampling for zz_2117849290
 finished run 5 for problem zz_2117849290
 start run 6 for problem zz_2117849290
   start samplings 1000 for problem zz_2117849290
sampled for problem zz_2117849290
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0295310170
finished samples sampling for zz_0295310170
 finished run 5 for problem zz_0295310170
 start run 6 for problem zz_0295310170
   start samplings 1000 for problem zz_0295310170
sampled for problem zz_0295310170
sampled for problem zz_8714690430
finished samples sampling for zz_8714690430
 finished run 5 for problem zz_8714690430
 start run 6 for problem zz_8714690430
   start samplings 1000 for problem zz_8714690430
sampled for problem zz_8714690430
sampled for problem zz_5533357779
finished samples sampling for zz_5533357779
 finished run 5 for problem zz_5533357779
 start run 6 for problem zz_5533357779
   start samplings 1000 for problem zz_5533357779
sampled for problem zz_5533357779
sampled for problem zz_7841130710
finished samples sampling for zz_7841130710
 finished run 5 for problem zz_7841130710
 start run 6 for problem zz_7841130710
   start samplings 1000 for problem zz_7841130710
sampled for problem zz_7841130710
sampled for problem zz_8290171268
finished samples sampling for zz_8290171268
 finished run 5 for problem zz_8290171268
 start run 6 for problem zz_8290171268
   start samplings 1000 for problem zz_8290171268
sampled for problem zz_8290171268
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3387349060
finished samples sampling for zz_3387349060
 finished run 6 for problem zz_3387349060
 start run 7 for problem zz_3387349060
   start samplings 1000 for problem zz_3387349060
sampled for problem zz_3387349060
sampled for problem zz_1701713947
finished samples sampling for zz_1701713947
 finished run 6 for problem zz_1701713947
 start run 7 for problem zz_1701713947
   start samplings 1000 for problem zz_1701713947
sampled for problem zz_1701713947
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2117849290
finished samples sampling for zz_2117849290
 finished run 6 for problem zz_2117849290
 start run 7 for problem zz_2117849290
   start samplings 1000 for problem zz_2117849290
sampled for problem zz_2117849290
sampled for problem zz_5533357779
finished samples sampling for zz_5533357779
 finished run 6 for problem zz_5533357779
 start run 7 for problem zz_5533357779
   start samplings 1000 for problem zz_5533357779
sampled for problem zz_5533357779
sampled for problem zz_0295310170
finished samples sampling for zz_0295310170
 finished run 6 for problem zz_0295310170
 start run 7 for problem zz_0295310170
   start samplings 1000 for problem zz_0295310170
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0295310170
sampled for problem zz_8714690430
finished samples sampling for zz_8714690430
 finished run 6 for problem zz_8714690430
 start run 7 for problem zz_8714690430
   start samplings 1000 for problem zz_8714690430
sampled for problem zz_8714690430
sampled for problem zz_7841130710
finished samples sampling for zz_7841130710
 finished run 6 for problem zz_7841130710
 start run 7 for problem zz_7841130710
   start samplings 1000 for problem zz_7841130710
sampled for problem zz_7841130710
sampled for problem zz_8290171268
finished samples sampling for zz_8290171268
 finished run 6 for problem zz_8290171268
 start run 7 for problem zz_8290171268
   start samplings 1000 for problem zz_8290171268
sampled for problem zz_8290171268
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3387349060
finished samples sampling for zz_3387349060
 finished run 7 for problem zz_3387349060
 start run 8 for problem zz_3387349060
   start samplings 1000 for problem zz_3387349060
sampled for problem zz_3387349060
sampled for problem zz_1701713947
finished samples sampling for zz_1701713947
 finished run 7 for problem zz_1701713947
 start run 8 for problem zz_1701713947
   start samplings 1000 for problem zz_1701713947
sampled for problem zz_1701713947
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5533357779
finished samples sampling for zz_5533357779
 finished run 7 for problem zz_5533357779
 start run 8 for problem zz_5533357779
   start samplings 1000 for problem zz_5533357779
sampled for problem zz_5533357779
sampled for problem zz_0295310170
finished samples sampling for zz_0295310170
 finished run 7 for problem zz_0295310170
 start run 8 for problem zz_0295310170
   start samplings 1000 for problem zz_0295310170
sampled for problem zz_2117849290
finished samples sampling for zz_2117849290
 finished run 7 for problem zz_2117849290
 start run 8 for problem zz_2117849290
   start samplings 1000 for problem zz_2117849290
sampled for problem zz_0295310170
sampled for problem zz_2117849290
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0050481658
 Queue sizes: problems_to_submit = 14, answers_to_write = 0
 Queue sizes: problems_to_submit = 14, answers_to_write = 0
sampled for problem zz_0378490713
finished samples sampling for zz_0378490713
 finished run 9 for problem zz_0378490713
 succesfully retrieved answer for problem {} zz_0378490713
 start working on problem zz_2699010835
 start writing answer for problem {} zz_0378490713
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f662055faa0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f662055faa0>
 problem zz_2699010835 will take can be sampled with a single run
 problem zz_2699010835 will be solved 1 times per run
 start run 0 for problem zz_2699010835
   start samplings 1000 for problem zz_2699010835
sampled for problem zz_2699010835
 Queue sizes: problems_to_submit = 13, answers_to_write = 0
sampled for problem zz_4933543679
finished samples sampling for zz_4933543679
 finished run 0 for problem zz_4933543679
 start run 1 for problem zz_4933543679
   start samplings 1000 for problem zz_4933543679
sampled for problem zz_4933543679
sampled for problem zz_2357446328
finished samples sampling for zz_2357446328
 finished run 9 for problem zz_2357446328
sampled for problem zz_3528964636
finished samples sampling for zz_3528964636
 finished run 9 for problem zz_3528964636
 succesfully retrieved answer for problem {} zz_2357446328
 start working on problem zz_6419836897
 succesfully retrieved answer for problem {} zz_3528964636
 start working on problem zz_5205717936
 start writing answer for problem {} zz_2357446328
 problem zz_6419836897 will take can be sampled with a single run
 problem zz_6419836897 will be solved 1 times per run
 start run 0 for problem zz_6419836897
   start samplings 1000 for problem zz_6419836897
sampled for problem zz_6419836897
 Queue sizes: problems_to_submit = 11, answers_to_write = 1
 problem zz_5205717936 will take can be sampled with a single run
 problem zz_5205717936 will be solved 1 times per run
 start run 0 for problem zz_5205717936
   start samplings 1000 for problem zz_5205717936
sampled for problem zz_5205717936
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f66205d0a40>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f66205d0a40>
sampled for problem zz_6026927798
finished samples sampling for zz_6026927798
 finished run 9 for problem zz_6026927798
 succesfully retrieved answer for problem {} zz_6026927798
 start working on problem zz_6278981758
 Queue sizes: problems_to_submit = 10, answers_to_write = 2
 problem zz_6278981758 will take can be sampled with a single run
 problem zz_6278981758 will be solved 1 times per run
sampled for problem zz_3953747332
finished samples sampling for zz_3953747332
 finished run 9 for problem zz_3953747332
 start run 0 for problem zz_6278981758
   start samplings 1000 for problem zz_6278981758
sampled for problem zz_6278981758
sampled for problem zz_0001863196
finished samples sampling for zz_0001863196
 finished run 9 for problem zz_0001863196
 succesfully retrieved answer for problem {} zz_3953747332
 start working on problem zz_6270472886
 succesfully retrieved answer for problem {} zz_0001863196
 start working on problem zz_7471821836
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
 problem zz_6270472886 will take can be sampled with a single run
 problem zz_6270472886 will be solved 1 times per run
 problem zz_7471821836 will take can be sampled with a single run
 problem zz_7471821836 will be solved 1 times per run
 start run 0 for problem zz_6270472886
   start samplings 1000 for problem zz_6270472886
sampled for problem zz_6270472886
 start run 0 for problem zz_7471821836
   start samplings 1000 for problem zz_7471821836
sampled for problem zz_7471821836
sampled for problem zz_8721690652
finished samples sampling for zz_8721690652
 finished run 0 for problem zz_8721690652
 start run 1 for problem zz_8721690652
   start samplings 1000 for problem zz_8721690652
sampled for problem zz_8721690652
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
sampled for problem zz_2699010835
finished samples sampling for zz_2699010835
 finished run 0 for problem zz_2699010835
 start run 1 for problem zz_2699010835
   start samplings 1000 for problem zz_2699010835
sampled for problem zz_2699010835
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 start run 8 for problem zz_5611322142
   start samplings 1000 for problem zz_5611322142
sampled for problem zz_5611322142
sampled for problem zz_6292597806
finished samples sampling for zz_6292597806
 finished run 8 for problem zz_6292597806
 start run 9 for problem zz_6292597806
   start samplings 1000 for problem zz_6292597806
sampled for problem zz_6292597806
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6241994977
finished samples sampling for zz_6241994977
 finished run 8 for problem zz_6241994977
 start run 9 for problem zz_6241994977
   start samplings 1000 for problem zz_6241994977
sampled for problem zz_6241994977
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9427452893
finished samples sampling for zz_9427452893
 finished run 8 for problem zz_9427452893
 start run 9 for problem zz_9427452893
   start samplings 1000 for problem zz_9427452893
sampled for problem zz_9427452893
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6882327039
finished samples sampling for zz_6882327039
 finished run 8 for problem zz_6882327039
 start run 9 for problem zz_6882327039
   start samplings 1000 for problem zz_6882327039
sampled for problem zz_6882327039
sampled for problem zz_7720896514
finished samples sampling for zz_7720896514
 finished run 8 for problem zz_7720896514
 start run 9 for problem zz_7720896514
   start samplings 1000 for problem zz_7720896514
sampled for problem zz_7720896514
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_4334158375
finished samples sampling for zz_4334158375
 finished run 8 for problem zz_4334158375
 start run 9 for problem zz_4334158375
   start samplings 1000 for problem zz_4334158375
sampled for problem zz_4334158375
sampled for problem zz_9064081178
finished samples sampling for zz_9064081178
 finished run 8 for problem zz_9064081178
 start run 9 for problem zz_9064081178
   start samplings 1000 for problem zz_9064081178
sampled for problem zz_9064081178
sampled for problem zz_5611322142
finished samples sampling for zz_5611322142
 finished run 8 for problem zz_5611322142
 start run 9 for problem zz_5611322142
   start samplings 1000 for problem zz_5611322142
sampled for problem zz_5611322142
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6292597806
finished samples sampling for zz_6292597806
 finished run 9 for problem zz_6292597806
 succesfully retrieved answer for problem {} zz_6292597806
 start working on problem zz_2258027639
 start writing answer for problem {} zz_6292597806
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f98e50d8530>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f98e50d8530>
 problem zz_2258027639 will take can be sampled with a single run
 problem zz_2258027639 will be solved 1 times per run
 start run 0 for problem zz_2258027639
   start samplings 1000 for problem zz_2258027639
sampled for problem zz_2258027639
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6292597806
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_6241994977
finished samples sampling for zz_6241994977
 finished run 9 for problem zz_6241994977
 succesfully retrieved answer for problem {} zz_6241994977
 start working on problem zz_2791652904
 start writing answer for problem {} zz_6241994977
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f98e42fdac0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f98e42fdac0>
 Queue sizes: problems_to_submit = 14, answers_to_write = 0
 problem zz_2791652904 will take can be sampled with a single run
 problem zz_2791652904 will be solved 1 times per run
 start run 0 for problem zz_2791652904
   start samplings 1000 for problem zz_2791652904
sampled for problem zz_2791652904
sampled for problem zz_9427452893
finished samples sampling for zz_9427452893
 finished run 9 for problem zz_9427452893
 succesfully retrieved answer for problem {} zz_9427452893
 start working on problem zz_2921244493
 start writing answer for problem {} zz_9427452893
 Queue sizes: problems_to_submit = 13, answers_to_write = 0
sampled for problem zz_6882327039
finished samples sampling for zz_6882327039
 finished run 9 for problem zz_6882327039
 problem zz_2921244493 will take can be sampled with a single run
 problem zz_2921244493 will be solved 1 times per run
 succesfully retrieved answer for problem {} zz_6882327039
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_2788338479
 start writing answer for problem {} zz_9439544350
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f63ec7a5c10>
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f63ec7a5c10>
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
sampled for problem zz_2871354184
finished samples sampling for zz_2871354184
 finished run 1 for problem zz_2871354184
 start run 2 for problem zz_2871354184
   start samplings 1000 for problem zz_2871354184
sampled for problem zz_2871354184
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_9230029004
 start writing answer for problem {} zz_0583988708
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f63ec759a00>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f63ec759a00>
sampled for problem zz_1089975612
finished samples sampling for zz_1089975612
 finished run 1 for problem zz_1089975612
 start run 2 for problem zz_1089975612
   start samplings 1000 for problem zz_1089975612
sampled for problem zz_1089975612
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0277687505
finished samples sampling for zz_0277687505
 finished run 2 for problem zz_0277687505
 start run 3 for problem zz_0277687505
   start samplings 1000 for problem zz_0277687505
sampled for problem zz_0277687505
sampled for problem zz_6016382926
finished samples sampling for zz_6016382926
 finished run 1 for problem zz_6016382926
 start run 2 for problem zz_6016382926
   start samplings 1000 for problem zz_6016382926
sampled for problem zz_6016382926
sampled for problem zz_2260395055
finished samples sampling for zz_2260395055
 finished run 2 for problem zz_2260395055
 start run 3 for problem zz_2260395055
   start samplings 1000 for problem zz_2260395055
sampled for problem zz_2260395055
sampled for problem zz_4285806320
finished samples sampling for zz_4285806320
 finished run 3 for problem zz_4285806320
 start run 4 for problem zz_4285806320
   start samplings 1000 for problem zz_4285806320
sampled for problem zz_4285806320
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2239038483
finished samples sampling for zz_2239038483
 finished run 2 for problem zz_2239038483
 start run 3 for problem zz_2239038483
   start samplings 1000 for problem zz_2239038483
sampled for problem zz_2239038483
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6835473743
finished samples sampling for zz_6835473743
 finished run 2 for problem zz_6835473743
 start run 3 for problem zz_6835473743
   start samplings 1000 for problem zz_6835473743
sampled for problem zz_6835473743
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_4833429819
finished samples sampling for zz_4833429819
 finished run 4 for problem zz_4833429819
 start run 5 for problem zz_4833429819
   start samplings 1000 for problem zz_4833429819
sampled for problem zz_4833429819
sampled for problem zz_3544680810
finished samples sampling for zz_3544680810
 finished run 4 for problem zz_3544680810
 start run 5 for problem zz_3544680810
   start samplings 1000 for problem zz_3544680810
sampled for problem zz_3544680810
sampled for problem zz_9043043111
finished samples sampling for zz_9043043111
 finished run 4 for problem zz_9043043111
 start run 5 for problem zz_9043043111
   start samplings 1000 for problem zz_9043043111
sampled for problem zz_9043043111
sampled for problem zz_6027592363
finished samples sampling for zz_6027592363
 finished run 4 for problem zz_6027592363
 start run 5 for problem zz_6027592363
   start samplings 1000 for problem zz_6027592363
sampled for problem zz_6027592363
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0690618443
finished samples sampling for zz_0690618443
 finished run 4 for problem zz_0690618443
 start run 5 for problem zz_0690618443
   start samplings 1000 for problem zz_0690618443
sampled for problem zz_0690618443
sampled for problem zz_0889364291
finished samples sampling for zz_0889364291
 finished run 4 for problem zz_0889364291
 start run 5 for problem zz_0889364291
   start samplings 1000 for problem zz_0889364291
sampled for problem zz_0889364291
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6244783629
finished samples sampling for zz_6244783629
 finished run 5 for problem zz_6244783629
 start run 6 for problem zz_6244783629
   start samplings 1000 for problem zz_6244783629
sampled for problem zz_6244783629
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_4660896733
finished samples sampling for zz_4660896733
 finished run 5 for problem zz_4660896733
 start run 6 for problem zz_4660896733
   start samplings 1000 for problem zz_4660896733
sampled for problem zz_4660896733
sampled for problem zz_4833429819
finished samples sampling for zz_4833429819
 finished run 5 for problem zz_4833429819
 start run 6 for problem zz_4833429819
   start samplings 1000 for problem zz_4833429819
sampled for problem zz_4833429819
sampled for problem zz_3544680810
finished samples sampling for zz_3544680810
 finished run 5 for problem zz_3544680810
 start run 6 for problem zz_3544680810
   start samplings 1000 for problem zz_3544680810
sampled for problem zz_3544680810
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9043043111
finished samples sampling for zz_9043043111
 finished run 5 for problem zz_9043043111
 start run 6 for problem zz_9043043111
   start samplings 1000 for problem zz_9043043111
sampled for problem zz_9043043111
sampled for problem zz_6027592363
finished samples sampling for zz_6027592363
 finished run 5 for problem zz_6027592363
 start run 6 for problem zz_6027592363
   start samplings 1000 for problem zz_6027592363
sampled for problem zz_6027592363
sampled for problem zz_0690618443
finished samples sampling for zz_0690618443
 finished run 5 for problem zz_0690618443
 start run 6 for problem zz_0690618443
   start samplings 1000 for problem zz_0690618443
sampled for problem zz_0690618443
sampled for problem zz_0889364291
finished samples sampling for zz_0889364291
 finished run 5 for problem zz_0889364291
 start run 6 for problem zz_0889364291
   start samplings 1000 for problem zz_0889364291
sampled for problem zz_0889364291
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6244783629
finished samples sampling for zz_6244783629
 finished run 6 for problem zz_6244783629
 start run 7 for problem zz_6244783629
   start samplings 1000 for problem zz_6244783629
sampled for problem zz_6244783629
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_4660896733
finished samples sampling for zz_4660896733
 finished run 6 for problem zz_4660896733
 start run 7 for problem zz_4660896733
   start samplings 1000 for problem zz_4660896733
sampled for problem zz_4660896733
sampled for problem zz_4833429819
finished samples sampling for zz_4833429819
 finished run 6 for problem zz_4833429819
 start run 7 for problem zz_4833429819
   start samplings 1000 for problem zz_4833429819
sampled for problem zz_4833429819
sampled for problem zz_3544680810
finished samples sampling for zz_3544680810
 finished run 6 for problem zz_3544680810
 start run 7 for problem zz_3544680810
   start samplings 1000 for problem zz_3544680810
sampled for problem zz_3544680810
sampled for problem zz_0690618443
finished samples sampling for zz_0690618443
 finished run 6 for problem zz_0690618443
 start run 7 for problem zz_0690618443
   start samplings 1000 for problem zz_0690618443
sampled for problem zz_0690618443
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9043043111
finished samples sampling for zz_9043043111
 finished run 6 for problem zz_9043043111
 start run 7 for problem zz_9043043111
   start samplings 1000 for problem zz_9043043111
sampled for problem zz_9043043111
sampled for problem zz_0889364291
finished samples sampling for zz_0889364291
 finished run 6 for problem zz_0889364291
 start run 7 for problem zz_0889364291
   start samplings 1000 for problem zz_0889364291
sampled for problem zz_0889364291
sampled for problem zz_6027592363
finished samples sampling for zz_6027592363
 finished run 6 for problem zz_6027592363
 start run 7 for problem zz_6027592363
   start samplings 1000 for problem zz_6027592363
sampled for problem zz_6027592363
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6244783629
finished samples sampling for zz_6244783629
 finished run 7 for problem zz_6244783629
 start run 8 for problem zz_6244783629
   start samplings 1000 for problem zz_6244783629
sampled for problem zz_6244783629
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_4660896733
finished samples sampling for zz_4660896733
 finished run 7 for problem zz_4660896733
 start run 8 for problem zz_4660896733
   start samplings 1000 for problem zz_4660896733
sampled for problem zz_4660896733
sampled for problem zz_4833429819
finished samples sampling for zz_4833429819
 finished run 7 for problem zz_4833429819
 start run 8 for problem zz_4833429819
   start samplings 1000 for problem zz_4833429819
sampled for problem zz_4833429819
sampled for problem zz_3544680810
finished samples sampling for zz_3544680810
 finished run 7 for problem zz_3544680810
 start run 8 for problem zz_3544680810
   start samplings 1000 for problem zz_3544680810
sampled for problem zz_3544680810
sampled for problem zz_0690618443
finished samples sampling for zz_0690618443
 finished run 7 for problem zz_0690618443
 start run 8 for problem zz_0690618443
   start samplings 1000 for problem zz_0690618443
sampled for problem zz_4171203299
sampled for problem zz_1372475312
finished samples sampling for zz_1372475312
 finished run 4 for problem zz_1372475312
 start run 5 for problem zz_1372475312
   start samplings 1000 for problem zz_1372475312
sampled for problem zz_1372475312
sampled for problem zz_3274278151
finished samples sampling for zz_3274278151
 finished run 4 for problem zz_3274278151
 start run 5 for problem zz_3274278151
   start samplings 1000 for problem zz_3274278151
sampled for problem zz_3274278151
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9220287810
finished samples sampling for zz_9220287810
 finished run 4 for problem zz_9220287810
 start run 5 for problem zz_9220287810
   start samplings 1000 for problem zz_9220287810
sampled for problem zz_9220287810
sampled for problem zz_8714453254
finished samples sampling for zz_8714453254
 finished run 4 for problem zz_8714453254
 start run 5 for problem zz_8714453254
   start samplings 1000 for problem zz_8714453254
sampled for problem zz_8714453254
sampled for problem zz_6026204315
finished samples sampling for zz_6026204315
 finished run 4 for problem zz_6026204315
 start run 5 for problem zz_6026204315
   start samplings 1000 for problem zz_6026204315
sampled for problem zz_6026204315
sampled for problem zz_5365434579
finished samples sampling for zz_5365434579
 finished run 4 for problem zz_5365434579
 start run 5 for problem zz_5365434579
   start samplings 1000 for problem zz_5365434579
sampled for problem zz_5365434579
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6277987427
finished samples sampling for zz_6277987427
 finished run 5 for problem zz_6277987427
 start run 6 for problem zz_6277987427
   start samplings 1000 for problem zz_6277987427
sampled for problem zz_6277987427
sampled for problem zz_4171203299
finished samples sampling for zz_4171203299
 finished run 5 for problem zz_4171203299
 start run 6 for problem zz_4171203299
   start samplings 1000 for problem zz_4171203299
sampled for problem zz_4171203299
sampled for problem zz_1372475312
finished samples sampling for zz_1372475312
 finished run 5 for problem zz_1372475312
 start run 6 for problem zz_1372475312
   start samplings 1000 for problem zz_1372475312
sampled for problem zz_1372475312
sampled for problem zz_3274278151
finished samples sampling for zz_3274278151
 finished run 5 for problem zz_3274278151
 start run 6 for problem zz_3274278151
   start samplings 1000 for problem zz_3274278151
sampled for problem zz_3274278151
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9220287810
finished samples sampling for zz_9220287810
 finished run 5 for problem zz_9220287810
 start run 6 for problem zz_9220287810
   start samplings 1000 for problem zz_9220287810
sampled for problem zz_9220287810
sampled for problem zz_8714453254
finished samples sampling for zz_8714453254
 finished run 5 for problem zz_8714453254
 start run 6 for problem zz_8714453254
   start samplings 1000 for problem zz_8714453254
sampled for problem zz_8714453254
sampled for problem zz_6026204315
finished samples sampling for zz_6026204315
 finished run 5 for problem zz_6026204315
 start run 6 for problem zz_6026204315
   start samplings 1000 for problem zz_6026204315
sampled for problem zz_6026204315
sampled for problem zz_5365434579
finished samples sampling for zz_5365434579
 finished run 5 for problem zz_5365434579
 start run 6 for problem zz_5365434579
   start samplings 1000 for problem zz_5365434579
sampled for problem zz_5365434579
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6277987427
finished samples sampling for zz_6277987427
 finished run 6 for problem zz_6277987427
 start run 7 for problem zz_6277987427
   start samplings 1000 for problem zz_6277987427
sampled for problem zz_6277987427
sampled for problem zz_4171203299
finished samples sampling for zz_4171203299
 finished run 6 for problem zz_4171203299
 start run 7 for problem zz_4171203299
   start samplings 1000 for problem zz_4171203299
sampled for problem zz_4171203299
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_1372475312
finished samples sampling for zz_1372475312
 finished run 6 for problem zz_1372475312
 start run 7 for problem zz_1372475312
   start samplings 1000 for problem zz_1372475312
sampled for problem zz_1372475312
sampled for problem zz_3274278151
finished samples sampling for zz_3274278151
 finished run 6 for problem zz_3274278151
 start run 7 for problem zz_3274278151
   start samplings 1000 for problem zz_3274278151
sampled for problem zz_3274278151
sampled for problem zz_9220287810
finished samples sampling for zz_9220287810
 finished run 6 for problem zz_9220287810
 start run 7 for problem zz_9220287810
   start samplings 1000 for problem zz_9220287810
sampled for problem zz_9220287810
sampled for problem zz_8714453254
finished samples sampling for zz_8714453254
 finished run 6 for problem zz_8714453254
 start run 7 for problem zz_8714453254
   start samplings 1000 for problem zz_8714453254
sampled for problem zz_8714453254
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6026204315
finished samples sampling for zz_6026204315
 finished run 6 for problem zz_6026204315
 start run 7 for problem zz_6026204315
   start samplings 1000 for problem zz_6026204315
sampled for problem zz_6026204315
sampled for problem zz_5365434579
finished samples sampling for zz_5365434579
 finished run 6 for problem zz_5365434579
 start run 7 for problem zz_5365434579
   start samplings 1000 for problem zz_5365434579
sampled for problem zz_5365434579
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6277987427
finished samples sampling for zz_6277987427
 finished run 7 for problem zz_6277987427
 start run 8 for problem zz_6277987427
   start samplings 1000 for problem zz_6277987427
sampled for problem zz_6277987427
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_4171203299
finished samples sampling for zz_4171203299
 finished run 7 for problem zz_4171203299
 start run 8 for problem zz_4171203299
   start samplings 1000 for problem zz_4171203299
sampled for problem zz_4171203299
sampled for problem zz_1372475312
finished samples sampling for zz_1372475312
 finished run 7 for problem zz_1372475312
 start run 8 for problem zz_1372475312
   start samplings 1000 for problem zz_1372475312
sampled for problem zz_1372475312
sampled for problem zz_3274278151
finished samples sampling for zz_3274278151
 finished run 7 for problem zz_3274278151
 start run 8 for problem zz_3274278151
   start samplings 1000 for problem zz_3274278151
sampled for problem zz_3274278151
sampled for problem zz_9220287810
finished samples sampling for zz_9220287810
 finished run 7 for problem zz_9220287810
 start run 8 for problem zz_9220287810

 finished run 7 for problem zz_3147064965
 start run 8 for problem zz_3147064965
   start samplings 1000 for problem zz_3147064965
sampled for problem zz_3147064965
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0946095345
finished samples sampling for zz_0946095345
 finished run 7 for problem zz_0946095345
 start run 8 for problem zz_0946095345
   start samplings 1000 for problem zz_0946095345
sampled for problem zz_0946095345
sampled for problem zz_6368149696
finished samples sampling for zz_6368149696
 finished run 7 for problem zz_6368149696
 start run 8 for problem zz_6368149696
   start samplings 1000 for problem zz_6368149696
sampled for problem zz_6368149696
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5857141561
finished samples sampling for zz_5857141561
 finished run 8 for problem zz_5857141561
 start run 9 for problem zz_5857141561
   start samplings 1000 for problem zz_5857141561
sampled for problem zz_5857141561
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6986245643
finished samples sampling for zz_6986245643
 finished run 8 for problem zz_6986245643
 start run 9 for problem zz_6986245643
   start samplings 1000 for problem zz_6986245643
sampled for problem zz_6986245643
sampled for problem zz_9142185862
finished samples sampling for zz_9142185862
 finished run 8 for problem zz_9142185862
 start run 9 for problem zz_9142185862
   start samplings 1000 for problem zz_9142185862
sampled for problem zz_9142185862
sampled for problem zz_9584060801
finished samples sampling for zz_9584060801
 finished run 9 for problem zz_9584060801
 succesfully retrieved answer for problem {} zz_9584060801
 start working on problem zz_4262621135
 start writing answer for problem {} zz_9584060801
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fef534576e0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fef534576e0>
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 problem zz_4262621135 will take can be sampled with a single run
 problem zz_4262621135 will be solved 1 times per run
 start run 0 for problem zz_4262621135
   start samplings 1000 for problem zz_4262621135
sampled for problem zz_4262621135
sampled for problem zz_4282889685
finished samples sampling for zz_4282889685
 finished run 8 for problem zz_4282889685
 start run 9 for problem zz_4282889685
   start samplings 1000 for problem zz_4282889685
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_4282889685
sampled for problem zz_3147064965
finished samples sampling for zz_3147064965
 finished run 8 for problem zz_3147064965
 start run 9 for problem zz_3147064965
   start samplings 1000 for problem zz_3147064965
sampled for problem zz_3147064965
sampled for problem zz_0946095345
finished samples sampling for zz_0946095345
 finished run 8 for problem zz_0946095345
 start run 9 for problem zz_0946095345
   start samplings 1000 for problem zz_0946095345
sampled for problem zz_0946095345
sampled for problem zz_6368149696
finished samples sampling for zz_6368149696
 finished run 8 for problem zz_6368149696
 start run 9 for problem zz_6368149696
   start samplings 1000 for problem zz_6368149696
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_6368149696
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_9584060801
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_5857141561
finished samples sampling for zz_5857141561
 finished run 9 for problem zz_5857141561
 succesfully retrieved answer for problem {} zz_5857141561
 start working on problem zz_9283730726
 start writing answer for problem {} zz_5857141561
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fef50748fe0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fef50748fe0>
 Queue sizes: problems_to_submit = 14, answers_to_write = 0
 Queue sizes: problems_to_submit = 14, answers_to_write = 0
 problem zz_9283730726 will take can be sampled with a single run
 problem zz_9283730726 will be solved 1 times per run
 start run 0 for problem zz_9283730726
   start samplings 1000 for problem zz_9283730726
sampled for problem zz_9283730726
sampled for problem zz_6986245643
finished samples sampling for zz_6986245643
 finished run 9 for problem zz_6986245643
sampled for problem zz_9142185862
finished samples sampling for zz_9142185862
 finished run 9 for problem zz_9142185862
 succesfully retrieved answer for problem {} zz_6986245643
 start working on problem zz_5744954469
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0378490713
 start writing answer for problem {} zz_3528964636
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f6620547980>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f6620547980>
sampled for problem zz_4933543679
finished samples sampling for zz_4933543679
 finished run 1 for problem zz_4933543679
 start run 2 for problem zz_4933543679
   start samplings 1000 for problem zz_4933543679
sampled for problem zz_4933543679
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
sampled for problem zz_6419836897
finished samples sampling for zz_6419836897
 finished run 0 for problem zz_6419836897
 start run 1 for problem zz_6419836897
   start samplings 1000 for problem zz_6419836897
sampled for problem zz_6419836897
sampled for problem zz_5205717936
finished samples sampling for zz_5205717936
 finished run 0 for problem zz_5205717936
 start run 1 for problem zz_5205717936
   start samplings 1000 for problem zz_5205717936
sampled for problem zz_5205717936
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
sampled for problem zz_6278981758
finished samples sampling for zz_6278981758
 finished run 0 for problem zz_6278981758
 start run 1 for problem zz_6278981758
   start samplings 1000 for problem zz_6278981758
sampled for problem zz_6278981758
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
sampled for problem zz_6270472886
finished samples sampling for zz_6270472886
 finished run 0 for problem zz_6270472886
 start run 1 for problem zz_6270472886
   start samplings 1000 for problem zz_6270472886
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
sampled for problem zz_6270472886
sampled for problem zz_7471821836
finished samples sampling for zz_7471821836
 finished run 0 for problem zz_7471821836
 start run 1 for problem zz_7471821836
   start samplings 1000 for problem zz_7471821836
sampled for problem zz_7471821836
sampled for problem zz_8721690652
finished samples sampling for zz_8721690652
 finished run 1 for problem zz_8721690652
 start run 2 for problem zz_8721690652
   start samplings 1000 for problem zz_8721690652
sampled for problem zz_8721690652
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
 finished writing answer for problem {} zz_2357446328
 start writing answer for problem {} zz_6026927798
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f66205b2b40>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f66205b2b40>
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'>
 start working on problem zz_7899741822
sampled for problem zz_7720896514
finished samples sampling for zz_7720896514
 finished run 9 for problem zz_7720896514
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f98e43c44d0>
 start run 0 for problem zz_2921244493
   start samplings 1000 for problem zz_2921244493
 Queue sizes: problems_to_submit = 12, answers_to_write = 1
 problem zz_7899741822 will take can be sampled with a single run
 problem zz_7899741822 will be solved 1 times per run
sampled for problem zz_2921244493
sampled for problem zz_4334158375
finished samples sampling for zz_4334158375
 finished run 9 for problem zz_4334158375
sampled for problem zz_5611322142
finished samples sampling for zz_5611322142
 finished run 9 for problem zz_5611322142
sampled for problem zz_9064081178
finished samples sampling for zz_9064081178
 finished run 9 for problem zz_9064081178
 succesfully retrieved answer for problem {} zz_7720896514
 start working on problem zz_6577828538
 start run 0 for problem zz_7899741822
   start samplings 1000 for problem zz_7899741822
sampled for problem zz_7899741822
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f98e43c44d0>
 succesfully retrieved answer for problem {} zz_4334158375
 start working on problem zz_4983060353
 succesfully retrieved answer for problem {} zz_5611322142
 start working on problem zz_6074050616
 problem zz_6577828538 will take can be sampled with a single run
 problem zz_6577828538 will be solved 1 times per run
sampled for problem zz_2258027639
finished samples sampling for zz_2258027639
 finished run 0 for problem zz_2258027639
 start run 1 for problem zz_2258027639
   start samplings 1000 for problem zz_2258027639
sampled for problem zz_2258027639
 Queue sizes: problems_to_submit = 9, answers_to_write = 4
 Queue sizes: problems_to_submit = 9, answers_to_write = 4
 problem zz_4983060353 will take can be sampled with a single run
 problem zz_4983060353 will be solved 1 times per run
 succesfully retrieved answer for problem {} zz_9064081178
 start working on problem zz_3358737269
 problem zz_6074050616 will take can be sampled with a single run
 problem zz_6074050616 will be solved 1 times per run
 start run 0 for problem zz_6577828538
   start samplings 1000 for problem zz_6577828538
sampled for problem zz_6577828538
 start run 0 for problem zz_4983060353
   start samplings 1000 for problem zz_4983060353
 problem zz_3358737269 will take can be sampled with a single run
 problem zz_3358737269 will be solved 1 times per run
sampled for problem zz_4983060353
 start run 0 for problem zz_6074050616
   start samplings 1000 for problem zz_6074050616
sampled for problem zz_6074050616
 start run 0 for problem zz_3358737269
   start samplings 1000 for problem zz_3358737269
sampled for problem zz_3358737269
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
sampled for problem zz_2791652904
finished samples sampling for zz_2791652904
 finished run 0 for problem zz_2791652904
 start run 1 for problem zz_2791652904
   start samplings 1000 for problem zz_2791652904
sampled for problem zz_2791652904
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
sampled for problem zz_2921244493
finished samples sampling for zz_2921244493
 finished run 0 for problem zz_2921244493
 start run 1 for problem zz_2921244493
   start samplings 1000 for problem zz_2921244493
sampled for problem zz_2921244493
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
sampled for problem zz_7899741822
finished samples sampling for zz_7899741822
 finished run 0 for problem zz_7899741822
 start run 1 for problem zz_7899741822
   start samplings 1000 for problem zz_7899741822
sampled for problem zz_7899741822
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_9427452893
 start writing answer for problem {} zz_6882327039
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f98e43978f0>
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f98e43978f0>
_variables <class 'dimod.variables.Variables'>
   start samplings 1000 for problem zz_7591282265
sampled for problem zz_7591282265
sampled for problem zz_6600677120
finished samples sampling for zz_6600677120
 finished run 7 for problem zz_6600677120
 start run 8 for problem zz_6600677120
   start samplings 1000 for problem zz_6600677120
sampled for problem zz_6600677120
sampled for problem zz_8754965043
finished samples sampling for zz_8754965043
 finished run 7 for problem zz_8754965043
 start run 8 for problem zz_8754965043
   start samplings 1000 for problem zz_8754965043
sampled for problem zz_8754965043
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9489630532
finished samples sampling for zz_9489630532
 finished run 8 for problem zz_9489630532
 start run 9 for problem zz_9489630532
   start samplings 1000 for problem zz_9489630532
sampled for problem zz_9489630532
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3085251181
finished samples sampling for zz_3085251181
 finished run 8 for problem zz_3085251181
 start run 9 for problem zz_3085251181
   start samplings 1000 for problem zz_3085251181
sampled for problem zz_3085251181
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2631571852
finished samples sampling for zz_2631571852
 finished run 8 for problem zz_2631571852
 start run 9 for problem zz_2631571852
   start samplings 1000 for problem zz_2631571852
sampled for problem zz_2631571852
sampled for problem zz_7909671180
finished samples sampling for zz_7909671180
 finished run 8 for problem zz_7909671180
 start run 9 for problem zz_7909671180
   start samplings 1000 for problem zz_7909671180
sampled for problem zz_7909671180
sampled for problem zz_1950776516
finished samples sampling for zz_1950776516
 finished run 8 for problem zz_1950776516
 start run 9 for problem zz_1950776516
   start samplings 1000 for problem zz_1950776516
sampled for problem zz_1950776516
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_7591282265
finished samples sampling for zz_7591282265
 finished run 8 for problem zz_7591282265
 start run 9 for problem zz_7591282265
   start samplings 1000 for problem zz_7591282265
sampled for problem zz_7591282265
sampled for problem zz_6600677120
finished samples sampling for zz_6600677120
 finished run 8 for problem zz_6600677120
 start run 9 for problem zz_6600677120
   start samplings 1000 for problem zz_6600677120
sampled for problem zz_6600677120
sampled for problem zz_8754965043
finished samples sampling for zz_8754965043
 finished run 8 for problem zz_8754965043
 start run 9 for problem zz_8754965043
   start samplings 1000 for problem zz_8754965043
sampled for problem zz_8754965043
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9489630532
finished samples sampling for zz_9489630532
 finished run 9 for problem zz_9489630532
 succesfully retrieved answer for problem {} zz_9489630532
 start working on problem zz_4056127159
 start writing answer for problem {} zz_9489630532
 problem zz_4056127159 will take can be sampled with a single run
 problem zz_4056127159 will be solved 1 times per run
 start run 0 for problem zz_4056127159
   start samplings 1000 for problem zz_4056127159
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_4056127159
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9e70496a20>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9e70496a20>
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_3085251181
finished samples sampling for zz_3085251181
 finished run 9 for problem zz_3085251181
 succesfully retrieved answer for problem {} zz_3085251181
 start working on problem zz_0959642795
 start writing answer for problem {} zz_3085251181
 Queue sizes: problems_to_submit = 14, answers_to_write = 0
 problem zz_0959642795 will take can be sampled with a single run
 problem zz_0959642795 will be solved 1 times per run
sampled for problem zz_2631571852
finished samples sampling for zz_2631571852
 finished run 9 for problem zz_2631571852
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9e70345d00>
 start run 0 for problem zz_0959642795
   start samplings 1000 for problem zz_0959642795
sampled for problem zz_0959642795
 succesfully retrieved answer for problem {} zz_2631571852
 start working on problem zz_2720660293
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9e70345d00>
sampled for problem zz_7909671180
finished samples sampling for zz_7909671180
 finished run 9 for problem zz_7909671180
sampled for problem zz_1950776516
finished samples sampling for zz_1950776516
 finished run 9 for problem zz_1950776516
sampled for problem zz_7591282265
finished samples sampling for zz_7591282265
 finished run 9 for problem zz_7591282265
 Queue sizes: problems_to_submit = 13, answers_to_write = 1
 problem zz_2720660293 will take can be sampled with a single run
 problem zz_2720660293 will be solved 1 times per run
 succesfully retrieved answer for problem {} zz_7909671180
 start working on problem zz_6774697119
sampled for problem zz_6600677120
finished samples sampling for zz_6600677120
 finished run 9 for problem zz_6600677120
 succesfully retrieved answer for problem {} zz_1950776516
 start working on problem zz_5452407354
 succesfully retrieved answer for problem {} zz_7591282265
 start working on problem zz_9471019571
 start run 0 for problem zz_2720660293
   start samplings 1000 for problem zz_2720660293
sampled for problem zz_2720660293
sampled for problem zz_8754965043
finished samples sampling for zz_8754965043
 finished run 9 for problem zz_8754965043
 succesfully retrieved answer for problem {} zz_6600677120
 start working on problem zz_0317017085
 problem zz_6774697119 will take can be sampled with a single run
 problem zz_6774697119 will be solved 1 times per run
 problem zz_9471019571 will take can be sampled with a single run
 problem zz_9471019571 will be solved 1 times per run
 Queue sizes: problems_to_submit = 9, answers_to_write = 5
 Queue sizes: problems_to_submit = 9, answers_to_write = 5
 problem zz_5452407354 will take can be sampled with a single run
 problem zz_5452407354 will be solved 1 times per run
 succesfully retrieved answer for problem {} zz_8754965043
 start working on problem zz_0255343551
 start run 0 for problem zz_6774697119
   start samplings 1000 for problem zz_6774697119
sampled for problem zz_6774697119
 problem zz_0317017085 will take can be sampled with a single run
 problem zz_0317017085 will be solved 1 times per run
 start run 0 for problem zz_9471019571
   start samplings 1000 for problem zz_9471019571
sampled for problem zz_9471019571
 problem zz_0255343551 will take can be sampled with a single run
 problem zz_0255343551 will be solved 1 times per run
 start run 0 for problem zz_5452407354
   start samplings 1000 for problem zz_5452407354
sampled for problem zz_5452407354
 start run 0 for problem zz_0317017085
   start samplings 1000 for problem zz_0317017085
sampled for problem zz_0317017085
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_9439544350
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0583988708
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2871354184
finished samples sampling for zz_2871354184
 finished run 2 for problem zz_2871354184
 start run 3 for problem zz_2871354184
   start samplings 1000 for problem zz_2871354184
sampled for problem zz_2871354184
sampled for problem zz_1089975612
finished samples sampling for zz_1089975612
 finished run 2 for problem zz_1089975612
 start run 3 for problem zz_1089975612
   start samplings 1000 for problem zz_1089975612
sampled for problem zz_1089975612
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0277687505
finished samples sampling for zz_0277687505
 finished run 3 for problem zz_0277687505
 start run 4 for problem zz_0277687505
   start samplings 1000 for problem zz_0277687505
sampled for problem zz_0277687505
sampled for problem zz_6016382926
finished samples sampling for zz_6016382926
 finished run 2 for problem zz_6016382926
 start run 3 for problem zz_6016382926
   start samplings 1000 for problem zz_6016382926
sampled for problem zz_6016382926
sampled for problem zz_2260395055
finished samples sampling for zz_2260395055
 finished run 3 for problem zz_2260395055
 start run 4 for problem zz_2260395055
   start samplings 1000 for problem zz_2260395055
sampled for problem zz_2260395055
sampled for problem zz_4285806320
finished samples sampling for zz_4285806320
 finished run 4 for problem zz_4285806320
 start run 5 for problem zz_4285806320
   start samplings 1000 for problem zz_4285806320
sampled for problem zz_4285806320
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2239038483
finished samples sampling for zz_2239038483
 finished run 3 for problem zz_2239038483
 start run 4 for problem zz_2239038483
   start samplings 1000 for problem zz_2239038483
sampled for problem zz_2239038483
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6835473743
finished samples sampling for zz_6835473743
 finished run 3 for problem zz_6835473743
 start run 4 for problem zz_6835473743
   start samplings 1000 for problem zz_6835473743
sampled for problem zz_6835473743
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2871354184
finished samples sampling for zz_2871354184
 finished run 3 for problem zz_2871354184
 start run 4 for problem zz_2871354184
   start samplings 1000 for problem zz_2871354184
sampled for problem zz_2871354184
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_1089975612
finished samples sampling for zz_1089975612
 finished run 3 for problem zz_1089975612
 start run 4 for problem zz_1089975612
   start samplings 1000 for problem zz_1089975612
sampled for problem zz_1089975612
sampled for problem zz_0277687505
finished samples sampling for zz_0277687505
 finished run 4 for problem zz_0277687505
 start run 5 for problem zz_0277687505
   start samplings 1000 for problem zz_0277687505
sampled for problem zz_0277687505
sampled for problem zz_6016382926
finished samples sampling for zz_6016382926
 finished run 3 for problem zz_6016382926
 start run 4 for problem zz_6016382926
   start samplings 1000 for problem zz_6016382926
sampled for problem zz_6016382926
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2260395055
finished samples sampling for zz_2260395055
 finished run 4 for problem zz_2260395055
 start run 5 for problem zz_2260395055
   start samplings 1000 for problem zz_2260395055
 Queue sizes: problems_to_submit = 13, answers_to_write = 1
 start writing answer for problem {} zz_6986245643
 succesfully retrieved answer for problem {} zz_9142185862
 start working on problem zz_0538469761
sampled for problem zz_4262621135
finished samples sampling for zz_4262621135
 finished run 0 for problem zz_4262621135
 start run 1 for problem zz_4262621135
   start samplings 1000 for problem zz_4262621135
 problem zz_5744954469 will take can be sampled with a single run
 problem zz_5744954469 will be solved 1 times per run
sampled for problem zz_4262621135
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fef5077f650>
 problem zz_0538469761 will take can be sampled with a single run
 problem zz_0538469761 will be solved 1 times per run
sampled for problem zz_4282889685
finished samples sampling for zz_4282889685
 finished run 9 for problem zz_4282889685
 Queue sizes: problems_to_submit = 12, answers_to_write = 1
sampled for problem zz_3147064965
finished samples sampling for zz_3147064965
 finished run 9 for problem zz_3147064965
 start run 0 for problem zz_5744954469
   start samplings 1000 for problem zz_5744954469
sampled for problem zz_5744954469
 start run 0 for problem zz_0538469761
   start samplings 1000 for problem zz_0538469761
sampled for problem zz_0538469761
 succesfully retrieved answer for problem {} zz_4282889685
 start working on problem zz_7063111329
 succesfully retrieved answer for problem {} zz_3147064965
 start working on problem zz_8884820367
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fef5077f650>
 Queue sizes: problems_to_submit = 10, answers_to_write = 3
 problem zz_8884820367 will take can be sampled with a single run
 problem zz_8884820367 will be solved 1 times per run
 problem zz_7063111329 will take can be sampled with a single run
 problem zz_7063111329 will be solved 1 times per run
sampled for problem zz_0946095345
finished samples sampling for zz_0946095345
 finished run 9 for problem zz_0946095345
 start run 0 for problem zz_8884820367
   start samplings 1000 for problem zz_8884820367
sampled for problem zz_8884820367
sampled for problem zz_6368149696
finished samples sampling for zz_6368149696
 finished run 9 for problem zz_6368149696
 start run 0 for problem zz_7063111329
   start samplings 1000 for problem zz_7063111329
sampled for problem zz_7063111329
 succesfully retrieved answer for problem {} zz_0946095345
 start working on problem zz_7350679553
 succesfully retrieved answer for problem {} zz_6368149696
 start working on problem zz_0163190663
 problem zz_7350679553 will take can be sampled with a single run
 problem zz_7350679553 will be solved 1 times per run
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
 start run 0 for problem zz_7350679553
   start samplings 1000 for problem zz_7350679553
sampled for problem zz_7350679553
 problem zz_0163190663 will take can be sampled with a single run
 problem zz_0163190663 will be solved 1 times per run
 start run 0 for problem zz_0163190663
   start samplings 1000 for problem zz_0163190663
sampled for problem zz_0163190663
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
sampled for problem zz_9283730726
finished samples sampling for zz_9283730726
 finished run 0 for problem zz_9283730726
 start run 1 for problem zz_9283730726
   start samplings 1000 for problem zz_9283730726
sampled for problem zz_9283730726
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
sampled for problem zz_4262621135
finished samples sampling for zz_4262621135
 finished run 1 for problem zz_4262621135
 start run 2 for problem zz_4262621135
   start samplings 1000 for problem zz_4262621135
sampled for problem zz_4262621135
sampled for problem zz_0538469761
finished samples sampling for zz_0538469761
 finished run 0 for problem zz_0538469761
 start run 1 for problem zz_0538469761
   start samplings 1000 for problem zz_0538469761
sampled for problem zz_0538469761
sampled for problem zz_5744954469
finished samples sampling for zz_5744954469
 finished run 0 for problem zz_5744954469
 start run 1 for problem zz_5744954469
   start samplings 1000 for problem zz_5744954469
sampled for problem zz_5744954469
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_8884820367
finished samples sampling for zz_8884820367
 finished run 0 for problem zz_8884820367
 start run 1 for problem zz_8884820367
   start samplings 1000 for problem zz_8884820367
sampled for problem zz_8884820367
sampled for problem zz_7063111329
finished samples sampling for zz_7063111329
 finished run 0 for problem zz_7063111329
 start run 1 for problem zz_7063111329
   start samplings 1000 for problem zz_7063111329
sampled for problem zz_7063111329
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
 finished writing answer for problem {} zz_5857141561
 start writing answer for problem {} zz_9142185862
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fef5071b770> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_2699010835
finished samples sampling for zz_2699010835
 finished run 1 for problem zz_2699010835
 start run 2 for problem zz_2699010835
   start samplings 1000 for problem zz_2699010835
sampled for problem zz_2699010835
sampled for problem zz_4933543679
finished samples sampling for zz_4933543679
 finished run 2 for problem zz_4933543679
 start run 3 for problem zz_4933543679
   start samplings 1000 for problem zz_4933543679
sampled for problem zz_4933543679
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_3528964636
 start writing answer for problem {} zz_3953747332
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f662055eae0>
sampled for problem zz_6419836897
finished samples sampling for zz_6419836897
 finished run 1 for problem zz_6419836897
 start run 2 for problem zz_6419836897
   start samplings 1000 for problem zz_6419836897
sampled for problem zz_6419836897
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f662055eae0>
sampled for problem zz_5205717936
finished samples sampling for zz_5205717936
 finished run 1 for problem zz_5205717936
 start run 2 for problem zz_5205717936
   start samplings 1000 for problem zz_5205717936
sampled for problem zz_5205717936
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
sampled for problem zz_6278981758
finished samples sampling for zz_6278981758
 finished run 1 for problem zz_6278981758
 start run 2 for problem zz_6278981758
   start samplings 1000 for problem zz_6278981758
sampled for problem zz_6278981758
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
sampled for problem zz_6270472886
finished samples sampling for zz_6270472886
 finished run 1 for problem zz_6270472886
 start run 2 for problem zz_6270472886
   start samplings 1000 for problem zz_6270472886
sampled for problem zz_6270472886
sampled for problem zz_7471821836
finished samples sampling for zz_7471821836
 finished run 1 for problem zz_7471821836
 start run 2 for problem zz_7471821836
   start samplings 1000 for problem zz_7471821836
sampled for problem zz_7471821836
sampled for problem zz_8721690652
finished samples sampling for zz_8721690652
 finished run 2 for problem zz_8721690652
 start run 3 for problem zz_8721690652
   start samplings 1000 for problem zz_8721690652
sampled for problem zz_8721690652
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
 finished writing answer for problem {} zz_6026927798
 start writing answer for problem {} zz_0001863196
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f66205d2090>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f66205d2090>
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2699010835
finished samples sampling for zz_2699010835
 finished run 2 for problem zz_2699010835
 start run 3 for problem zz_2699010835
   start samplings 1000 for problem zz_2699010835
sampled for problem zz_2699010835
sampled for problem zz_4933543679
finished samples sampling for zz_4933543679
 finished run 3 for problem zz_4933543679
 start run 4 for problem zz_4933543679
   start samplings 1000 for problem zz_4933543679
sampled for problem zz_4933543679
sampled for problem zz_6419836897
finished samples sampling for zz_6419836897
 finished run 2 for problem zz_6419836897
 start run 3 for problem zz_6419836897
   start samplings 1000 for problem zz_6419836897
sampled for problem zz_6419836897
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_5205717936
finished samples sampling for zz_5205717936
 finished run 2 for problem zz_5205717936
 start run 3 for problem zz_5205717936
   start samplings 1000 for problem zz_5205717936
sampled for problem zz_5205717936
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_8714690430
finished samples sampling for zz_8714690430
 finished run 7 for problem zz_8714690430
 start run 8 for problem zz_8714690430
   start samplings 1000 for problem zz_8714690430
sampled for problem zz_8714690430
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_7841130710
finished samples sampling for zz_7841130710
 finished run 7 for problem zz_7841130710
 start run 8 for problem zz_7841130710
   start samplings 1000 for problem zz_7841130710
sampled for problem zz_7841130710
sampled for problem zz_8290171268
finished samples sampling for zz_8290171268
 finished run 7 for problem zz_8290171268
 start run 8 for problem zz_8290171268
   start samplings 1000 for problem zz_8290171268
sampled for problem zz_8290171268
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3387349060
finished samples sampling for zz_3387349060
 finished run 8 for problem zz_3387349060
 start run 9 for problem zz_3387349060
   start samplings 1000 for problem zz_3387349060
sampled for problem zz_3387349060
sampled for problem zz_1701713947
finished samples sampling for zz_1701713947
 finished run 8 for problem zz_1701713947
 start run 9 for problem zz_1701713947
   start samplings 1000 for problem zz_1701713947
sampled for problem zz_1701713947
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5533357779
finished samples sampling for zz_5533357779
 finished run 8 for problem zz_5533357779
 start run 9 for problem zz_5533357779
   start samplings 1000 for problem zz_5533357779
sampled for problem zz_5533357779
sampled for problem zz_0295310170
finished samples sampling for zz_0295310170
 finished run 8 for problem zz_0295310170
 start run 9 for problem zz_0295310170
   start samplings 1000 for problem zz_0295310170
sampled for problem zz_0295310170
sampled for problem zz_2117849290
finished samples sampling for zz_2117849290
 finished run 8 for problem zz_2117849290
 start run 9 for problem zz_2117849290
   start samplings 1000 for problem zz_2117849290
sampled for problem zz_2117849290
sampled for problem zz_8714690430
finished samples sampling for zz_8714690430
 finished run 8 for problem zz_8714690430
 start run 9 for problem zz_8714690430
   start samplings 1000 for problem zz_8714690430
sampled for problem zz_8714690430
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_7841130710
finished samples sampling for zz_7841130710
 finished run 8 for problem zz_7841130710
 start run 9 for problem zz_7841130710
   start samplings 1000 for problem zz_7841130710
sampled for problem zz_7841130710
sampled for problem zz_8290171268
finished samples sampling for zz_8290171268
 finished run 8 for problem zz_8290171268
 start run 9 for problem zz_8290171268
   start samplings 1000 for problem zz_8290171268
sampled for problem zz_8290171268
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3387349060
finished samples sampling for zz_3387349060
 finished run 9 for problem zz_3387349060
 succesfully retrieved answer for problem {} zz_3387349060
 start working on problem zz_3511504764
 start writing answer for problem {} zz_3387349060
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4ed29b9e0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4ed29b9e0>
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 problem zz_3511504764 will take can be sampled with a single run
 problem zz_3511504764 will be solved 1 times per run
sampled for problem zz_0295310170
finished samples sampling for zz_0295310170
 finished run 9 for problem zz_0295310170
sampled for problem zz_5533357779
finished samples sampling for zz_5533357779
 finished run 9 for problem zz_5533357779
sampled for problem zz_1701713947
finished samples sampling for zz_1701713947
 finished run 9 for problem zz_1701713947
sampled for problem zz_8714690430
finished samples sampling for zz_8714690430
 finished run 9 for problem zz_8714690430
sampled for problem zz_7841130710
finished samples sampling for zz_7841130710
 finished run 9 for problem zz_7841130710
sampled for problem zz_2117849290
finished samples sampling for zz_2117849290
 finished run 9 for problem zz_2117849290
 start run 0 for problem zz_3511504764
   start samplings 1000 for problem zz_3511504764
sampled for problem zz_3511504764
 succesfully retrieved answer for problem {} zz_0295310170
 start working on problem zz_0893645049
 start writing answer for problem {} zz_0295310170
sampled for problem zz_8290171268
finished samples sampling for zz_8290171268
 finished run 9 for problem zz_8290171268
 succesfully retrieved answer for problem {} zz_5533357779
 start working on problem zz_4167523720
 succesfully retrieved answer for problem {} zz_1701713947
 start working on problem zz_3527907281
 Queue sizes: problems_to_submit = 12, answers_to_write = 2
 problem zz_0893645049 will take can be sampled with a single run
 problem zz_0893645049 will be solved 1 times per run
 succesfully retrieved answer for problem {} zz_8714690430
 start working on problem zz_4971361908
 problem zz_4167523720 will take can be sampled with a single run
 problem zz_4167523720 will be solved 1 times per run
 problem zz_3527907281 will take can be sampled with a single run
 problem zz_3527907281 will be solved 1 times per run
 succesfully retrieved answer for problem {} zz_7841130710
 start working on problem zz_0534179516
 Queue sizes: problems_to_submit = 10, answers_to_write = 4
 problem zz_4971361908 will take can be sampled with a single run
 problem zz_4971361908 will be solved 1 times per run
 problem zz_0534179516 will take can be sampled with a single run
 problem zz_0534179516 will be solved 1 times per run
 succesfully retrieved answer for problem {} zz_2117849290
 start working on problem zz_3231454862
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4ec551760>
 succesfully retrieved answer for problem {} zz_8290171268
 start working on problem zz_2676805068
 start run 0 for problem zz_0893645049
   start samplings 1000 for problem zz_0893645049
sampled for problem zz_0893645049
 start run 0 for problem zz_4167523720
   start samplings 1000 for problem zz_4167523720
sampled for problem zz_4167523720
 start run 0 for problem zz_3527907281
   start samplings 1000 for problem zz_3527907281
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
sampled for problem zz_3527907281
 problem zz_3231454862 will take can be sampled with a single run
 problem zz_3231454862 will be solved 1 times per run
 start run 0 for problem zz_4971361908
   start samplings 1000 for problem zz_4971361908
sampled for problem zz_4971361908
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4ec551760>
 start run 0 for problem zz_0534179516
   start samplings 1000 for problem zz_0534179516
sampled for problem zz_0534179516
 start run 0 for problem zz_3231454862 Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_2258027639
finished samples sampling for zz_2258027639
 finished run 1 for problem zz_2258027639
 start run 2 for problem zz_2258027639
   start samplings 1000 for problem zz_2258027639
sampled for problem zz_2258027639
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6241994977
 start writing answer for problem {} zz_7720896514
sampled for problem zz_6577828538
finished samples sampling for zz_6577828538
 finished run 0 for problem zz_6577828538
 start run 1 for problem zz_6577828538
   start samplings 1000 for problem zz_6577828538
sampled for problem zz_6577828538
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f98e43ea270>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f98e43ea270>
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
sampled for problem zz_4983060353
finished samples sampling for zz_4983060353
 finished run 0 for problem zz_4983060353
 start run 1 for problem zz_4983060353
   start samplings 1000 for problem zz_4983060353
sampled for problem zz_4983060353
sampled for problem zz_6074050616
finished samples sampling for zz_6074050616
 finished run 0 for problem zz_6074050616
 start run 1 for problem zz_6074050616
   start samplings 1000 for problem zz_6074050616
sampled for problem zz_3358737269
finished samples sampling for zz_3358737269
 finished run 0 for problem zz_3358737269
 start run 1 for problem zz_3358737269
   start samplings 1000 for problem zz_3358737269
sampled for problem zz_6074050616
sampled for problem zz_3358737269
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
sampled for problem zz_2791652904
finished samples sampling for zz_2791652904
 finished run 1 for problem zz_2791652904
 start run 2 for problem zz_2791652904
   start samplings 1000 for problem zz_2791652904
sampled for problem zz_2791652904
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
sampled for problem zz_2921244493
finished samples sampling for zz_2921244493
 finished run 1 for problem zz_2921244493
 start run 2 for problem zz_2921244493
   start samplings 1000 for problem zz_2921244493
sampled for problem zz_2921244493
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
sampled for problem zz_7899741822
finished samples sampling for zz_7899741822
 finished run 1 for problem zz_7899741822
 start run 2 for problem zz_7899741822
   start samplings 1000 for problem zz_7899741822
sampled for problem zz_7899741822
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_2258027639
finished samples sampling for zz_2258027639
 finished run 2 for problem zz_2258027639
 start run 3 for problem zz_2258027639
   start samplings 1000 for problem zz_2258027639
sampled for problem zz_2258027639
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_6577828538
finished samples sampling for zz_6577828538
 finished run 1 for problem zz_6577828538
 start run 2 for problem zz_6577828538
   start samplings 1000 for problem zz_6577828538
sampled for problem zz_6577828538
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_7720896514
 start writing answer for problem {} zz_4334158375
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f98e4396360>
sampled for problem zz_0690618443
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9043043111
finished samples sampling for zz_9043043111
 finished run 7 for problem zz_9043043111
 start run 8 for problem zz_9043043111
   start samplings 1000 for problem zz_9043043111
sampled for problem zz_9043043111
sampled for problem zz_0889364291
finished samples sampling for zz_0889364291
 finished run 7 for problem zz_0889364291
 start run 8 for problem zz_0889364291
   start samplings 1000 for problem zz_0889364291
sampled for problem zz_0889364291
sampled for problem zz_6027592363
finished samples sampling for zz_6027592363
 finished run 7 for problem zz_6027592363
 start run 8 for problem zz_6027592363
   start samplings 1000 for problem zz_6027592363
sampled for problem zz_6027592363
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6244783629
finished samples sampling for zz_6244783629
 finished run 8 for problem zz_6244783629
 start run 9 for problem zz_6244783629
   start samplings 1000 for problem zz_6244783629
sampled for problem zz_6244783629
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_4660896733
finished samples sampling for zz_4660896733
 finished run 8 for problem zz_4660896733
 start run 9 for problem zz_4660896733
   start samplings 1000 for problem zz_4660896733
sampled for problem zz_4660896733
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_4833429819
finished samples sampling for zz_4833429819
 finished run 8 for problem zz_4833429819
 start run 9 for problem zz_4833429819
   start samplings 1000 for problem zz_4833429819
sampled for problem zz_4833429819
sampled for problem zz_3544680810
finished samples sampling for zz_3544680810
 finished run 8 for problem zz_3544680810
 start run 9 for problem zz_3544680810
   start samplings 1000 for problem zz_3544680810
sampled for problem zz_3544680810
sampled for problem zz_0690618443
finished samples sampling for zz_0690618443
 finished run 8 for problem zz_0690618443
 start run 9 for problem zz_0690618443
   start samplings 1000 for problem zz_0690618443
sampled for problem zz_0690618443
sampled for problem zz_9043043111
finished samples sampling for zz_9043043111
 finished run 8 for problem zz_9043043111
 start run 9 for problem zz_9043043111
   start samplings 1000 for problem zz_9043043111
sampled for problem zz_9043043111
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0889364291
finished samples sampling for zz_0889364291
 finished run 8 for problem zz_0889364291
 start run 9 for problem zz_0889364291
   start samplings 1000 for problem zz_0889364291
sampled for problem zz_0889364291
sampled for problem zz_6027592363
finished samples sampling for zz_6027592363
 finished run 8 for problem zz_6027592363
 start run 9 for problem zz_6027592363
   start samplings 1000 for problem zz_6027592363
sampled for problem zz_6027592363
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6244783629
finished samples sampling for zz_6244783629
 finished run 9 for problem zz_6244783629
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 succesfully retrieved answer for problem {} zz_6244783629
 start working on problem zz_5683679450
 start writing answer for problem {} zz_6244783629
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f2b382c54c0>
 problem zz_5683679450 will take can be sampled with a single run
 problem zz_5683679450 will be solved 1 times per run
 start run 0 for problem zz_5683679450
   start samplings 1000 for problem zz_5683679450
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_4660896733
finished samples sampling for zz_4660896733
 finished run 9 for problem zz_4660896733
sampled for problem zz_5683679450
 succesfully retrieved answer for problem {} zz_4660896733
 start working on problem zz_6820111222
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f2b382c54c0>
 start writing answer for problem {} zz_4660896733
 Queue sizes: problems_to_submit = 14, answers_to_write = 0
sampled for problem zz_4833429819
finished samples sampling for zz_4833429819
 finished run 9 for problem zz_4833429819
 problem zz_6820111222 will take can be sampled with a single run
 problem zz_6820111222 will be solved 1 times per run
sampled for problem zz_3544680810
finished samples sampling for zz_3544680810
 finished run 9 for problem zz_3544680810
sampled for problem zz_0889364291
finished samples sampling for zz_0889364291
 finished run 9 for problem zz_0889364291
sampled for problem zz_9043043111
finished samples sampling for zz_9043043111
 finished run 9 for problem zz_9043043111
sampled for problem zz_0690618443
finished samples sampling for zz_0690618443
 finished run 9 for problem zz_0690618443
sampled for problem zz_6027592363
finished samples sampling for zz_6027592363
 finished run 9 for problem zz_6027592363
 succesfully retrieved answer for problem {} zz_4833429819
 start working on problem zz_0291999630
 start run 0 for problem zz_6820111222
   start samplings 1000 for problem zz_6820111222
sampled for problem zz_6820111222
 succesfully retrieved answer for problem {} zz_3544680810
 start working on problem zz_9806083889
 problem zz_0291999630 will take can be sampled with a single run
 problem zz_0291999630 will be solved 1 times per run
 Queue sizes: problems_to_submit = 12, answers_to_write = 2
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f2b38155610>
 succesfully retrieved answer for problem {} zz_0889364291
 start working on problem zz_8633696827
 problem zz_9806083889 will take can be sampled with a single run
 problem zz_9806083889 will be solved 1 times per run
 succesfully retrieved answer for problem {} zz_9043043111
 start working on problem zz_1860673799
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f2b38155610>
 Queue sizes: problems_to_submit = 10, answers_to_write = 4
 problem zz_1860673799 will take can be sampled with a single run
 problem zz_1860673799 will be solved 1 times per run
 problem zz_8633696827 will take can be sampled with a single run
 problem zz_8633696827 will be solved 1 times per run
 Queue sizes: problems_to_submit = 10, answers_to_write = 4
 succesfully retrieved answer for problem {} zz_0690618443
 start working on problem zz_4496173481
 succesfully retrieved answer for problem {} zz_6027592363
 start working on problem zz_3984838668
 start run 0 for problem zz_0291999630
   start samplings 1000 for problem zz_0291999630
sampled for problem zz_0291999630
 problem zz_4496173481 will take can be sampled with a single run
 problem zz_4496173481 will be solved 1 times per run
 start run 0 for problem zz_9806083889
   start samplings 1000 for problem zz_9806083889
sampled for problem zz_9806083889
 problem zz_3984838668 will take can be sampled with a single run
 problem zz_3984838668 will be solved 1 times per run
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
 start run 0 for problem zz_0255343551
   start samplings 1000 for problem zz_0255343551
sampled for problem zz_0255343551
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
sampled for problem zz_4056127159
finished samples sampling for zz_4056127159
 finished run 0 for problem zz_4056127159
 start run 1 for problem zz_4056127159
   start samplings 1000 for problem zz_4056127159
sampled for problem zz_4056127159
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
sampled for problem zz_0959642795
finished samples sampling for zz_0959642795
 finished run 0 for problem zz_0959642795
 start run 1 for problem zz_0959642795
   start samplings 1000 for problem zz_0959642795
sampled for problem zz_0959642795
sampled for problem zz_2720660293
finished samples sampling for zz_2720660293
 finished run 0 for problem zz_2720660293
 start run 1 for problem zz_2720660293
   start samplings 1000 for problem zz_2720660293
sampled for problem zz_2720660293
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
 finished writing answer for problem {} zz_9489630532
 start writing answer for problem {} zz_2631571852
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9e70396db0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9e70396db0>
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
sampled for problem zz_6774697119
finished samples sampling for zz_6774697119
 finished run 0 for problem zz_6774697119
 start run 1 for problem zz_6774697119
   start samplings 1000 for problem zz_6774697119
sampled for problem zz_6774697119
sampled for problem zz_9471019571
finished samples sampling for zz_9471019571
 finished run 0 for problem zz_9471019571
 start run 1 for problem zz_9471019571
   start samplings 1000 for problem zz_9471019571
sampled for problem zz_9471019571
sampled for problem zz_5452407354
finished samples sampling for zz_5452407354
 finished run 0 for problem zz_5452407354
 start run 1 for problem zz_5452407354
   start samplings 1000 for problem zz_5452407354
sampled for problem zz_5452407354
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
sampled for problem zz_0317017085
finished samples sampling for zz_0317017085
 finished run 0 for problem zz_0317017085
 start run 1 for problem zz_0317017085
   start samplings 1000 for problem zz_0317017085
sampled for problem zz_0317017085
sampled for problem zz_0255343551
finished samples sampling for zz_0255343551
 finished run 0 for problem zz_0255343551
 start run 1 for problem zz_0255343551
   start samplings 1000 for problem zz_0255343551
sampled for problem zz_0255343551
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_4056127159
finished samples sampling for zz_4056127159
 finished run 1 for problem zz_4056127159
 start run 2 for problem zz_4056127159
   start samplings 1000 for problem zz_4056127159
sampled for problem zz_4056127159
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fef5071b770>
sampled for problem zz_7350679553
finished samples sampling for zz_7350679553
 finished run 0 for problem zz_7350679553
 start run 1 for problem zz_7350679553
   start samplings 1000 for problem zz_7350679553
sampled for problem zz_7350679553
sampled for problem zz_0163190663
finished samples sampling for zz_0163190663
 finished run 0 for problem zz_0163190663
 start run 1 for problem zz_0163190663
   start samplings 1000 for problem zz_0163190663
sampled for problem zz_0163190663
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6986245643
 start writing answer for problem {} zz_4282889685
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fef5077e9f0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fef5077e9f0>
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
sampled for problem zz_9283730726
finished samples sampling for zz_9283730726
 finished run 1 for problem zz_9283730726
 start run 2 for problem zz_9283730726
   start samplings 1000 for problem zz_9283730726
sampled for problem zz_9283730726
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
sampled for problem zz_4262621135
finished samples sampling for zz_4262621135
 finished run 2 for problem zz_4262621135
 start run 3 for problem zz_4262621135
   start samplings 1000 for problem zz_4262621135
sampled for problem zz_4262621135
sampled for problem zz_0538469761
finished samples sampling for zz_0538469761
 finished run 1 for problem zz_0538469761
 start run 2 for problem zz_0538469761
   start samplings 1000 for problem zz_0538469761
sampled for problem zz_0538469761
sampled for problem zz_5744954469
finished samples sampling for zz_5744954469
 finished run 1 for problem zz_5744954469
 start run 2 for problem zz_5744954469
   start samplings 1000 for problem zz_5744954469
sampled for problem zz_5744954469
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
sampled for problem zz_8884820367
finished samples sampling for zz_8884820367
 finished run 1 for problem zz_8884820367
 start run 2 for problem zz_8884820367
   start samplings 1000 for problem zz_8884820367
sampled for problem zz_8884820367
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
sampled for problem zz_7063111329
finished samples sampling for zz_7063111329
 finished run 1 for problem zz_7063111329
 start run 2 for problem zz_7063111329
   start samplings 1000 for problem zz_7063111329
sampled for problem zz_7063111329
sampled for problem zz_7350679553
finished samples sampling for zz_7350679553
 finished run 1 for problem zz_7350679553
 start run 2 for problem zz_7350679553
   start samplings 1000 for problem zz_7350679553
sampled for problem zz_7350679553
sampled for problem zz_0163190663
finished samples sampling for zz_0163190663
 finished run 1 for problem zz_0163190663
 start run 2 for problem zz_0163190663
   start samplings 1000 for problem zz_0163190663
sampled for problem zz_0163190663
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])   start samplings 1000 for problem zz_9220287810
sampled for problem zz_9220287810
sampled for problem zz_8714453254
finished samples sampling for zz_8714453254
 finished run 7 for problem zz_8714453254
 start run 8 for problem zz_8714453254
   start samplings 1000 for problem zz_8714453254
sampled for problem zz_8714453254
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6026204315
finished samples sampling for zz_6026204315
 finished run 7 for problem zz_6026204315
 start run 8 for problem zz_6026204315
   start samplings 1000 for problem zz_6026204315
sampled for problem zz_6026204315
sampled for problem zz_5365434579
finished samples sampling for zz_5365434579
 finished run 7 for problem zz_5365434579
 start run 8 for problem zz_5365434579
   start samplings 1000 for problem zz_5365434579
sampled for problem zz_5365434579
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6277987427
finished samples sampling for zz_6277987427
 finished run 8 for problem zz_6277987427
 start run 9 for problem zz_6277987427
   start samplings 1000 for problem zz_6277987427
sampled for problem zz_6277987427
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_4171203299
finished samples sampling for zz_4171203299
 finished run 8 for problem zz_4171203299
 start run 9 for problem zz_4171203299
   start samplings 1000 for problem zz_4171203299
sampled for problem zz_4171203299
sampled for problem zz_1372475312
finished samples sampling for zz_1372475312
 finished run 8 for problem zz_1372475312
 start run 9 for problem zz_1372475312
   start samplings 1000 for problem zz_1372475312
sampled for problem zz_1372475312
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9220287810
finished samples sampling for zz_9220287810
 finished run 8 for problem zz_9220287810
 start run 9 for problem zz_9220287810
   start samplings 1000 for problem zz_9220287810
sampled for problem zz_9220287810
sampled for problem zz_8714453254
finished samples sampling for zz_8714453254
 finished run 8 for problem zz_8714453254
 start run 9 for problem zz_8714453254
   start samplings 1000 for problem zz_8714453254
sampled for problem zz_8714453254
sampled for problem zz_3274278151
finished samples sampling for zz_3274278151
 finished run 8 for problem zz_3274278151
 start run 9 for problem zz_3274278151
   start samplings 1000 for problem zz_3274278151
sampled for problem zz_3274278151
sampled for problem zz_6026204315
finished samples sampling for zz_6026204315
 finished run 8 for problem zz_6026204315
 start run 9 for problem zz_6026204315
   start samplings 1000 for problem zz_6026204315
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6026204315
sampled for problem zz_5365434579
finished samples sampling for zz_5365434579
 finished run 8 for problem zz_5365434579
 start run 9 for problem zz_5365434579
   start samplings 1000 for problem zz_5365434579
sampled for problem zz_5365434579
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6277987427
finished samples sampling for zz_6277987427
 finished run 9 for problem zz_6277987427
 succesfully retrieved answer for problem {} zz_6277987427
 start working on problem zz_5971996237
 start writing answer for problem {} zz_6277987427
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8c2d460f20>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8c2d460f20>
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 problem zz_5971996237 will take can be sampled with a single run
 problem zz_5971996237 will be solved 1 times per run
sampled for problem zz_4171203299
finished samples sampling for zz_4171203299
 finished run 9 for problem zz_4171203299
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_9220287810
finished samples sampling for zz_9220287810
 finished run 9 for problem zz_9220287810
sampled for problem zz_1372475312
finished samples sampling for zz_1372475312
 finished run 9 for problem zz_1372475312
sampled for problem zz_8714453254
finished samples sampling for zz_8714453254
 finished run 9 for problem zz_8714453254
sampled for problem zz_3274278151
finished samples sampling for zz_3274278151
 finished run 9 for problem zz_3274278151
sampled for problem zz_6026204315
finished samples sampling for zz_6026204315
 finished run 9 for problem zz_6026204315
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_5365434579
finished samples sampling for zz_5365434579
 finished run 9 for problem zz_5365434579
 start run 0 for problem zz_5971996237
   start samplings 1000 for problem zz_5971996237
sampled for problem zz_5971996237
 succesfully retrieved answer for problem {} zz_4171203299
 start working on problem zz_6489818378
 succesfully retrieved answer for problem {} zz_9220287810
 start working on problem zz_4709661397
 start writing answer for problem {} zz_4171203299
 succesfully retrieved answer for problem {} zz_1372475312
 start working on problem zz_4815697258
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8c2c79eab0>
 succesfully retrieved answer for problem {} zz_8714453254
 start working on problem zz_0931578977
 Queue sizes: problems_to_submit = 11, answers_to_write = 3
 problem zz_6489818378 will take can be sampled with a single run
 problem zz_6489818378 will be solved 1 times per run
 succesfully retrieved answer for problem {} zz_3274278151
 start working on problem zz_8942337152
 problem zz_4709661397 will take can be sampled with a single run
 problem zz_4709661397 will be solved 1 times per run
 Queue sizes: problems_to_submit = 10, answers_to_write = 4
 problem zz_0931578977 will take can be sampled with a single run
 problem zz_0931578977 will be solved 1 times per run
 problem zz_4815697258 will take can be sampled with a single run
 problem zz_4815697258 will be solved 1 times per run
 succesfully retrieved answer for problem {} zz_6026204315
 start working on problem zz_8276325827
 succesfully retrieved answer for problem {} zz_5365434579
 start working on problem zz_3851427014
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
 problem zz_8942337152 will take can be sampled with a single run
 problem zz_8942337152 will be solved 1 times per run
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8c2c79eab0>
 start run 0 for problem zz_6489818378
   start samplings 1000 for problem zz_6489818378
 problem zz_3851427014 will take can be sampled with a single run
 problem zz_3851427014 will be solved 1 times per run
sampled for problem zz_6489818378
 problem zz_8276325827 will take can be sampled with a single run
 problem zz_8276325827 will be solved 1 times per run
 start run 0 for problem zz_4709661397
   start samplings 1000 for problem zz_4709661397
sampled for problem zz_4709661397
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
 start run 0 for problem zz_0931578977
sampled for problem zz_6278981758
finished samples sampling for zz_6278981758
 finished run 2 for problem zz_6278981758
 start run 3 for problem zz_6278981758
   start samplings 1000 for problem zz_6278981758
sampled for problem zz_6278981758
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_3953747332
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6270472886
finished samples sampling for zz_6270472886
 finished run 2 for problem zz_6270472886
 start run 3 for problem zz_6270472886
   start samplings 1000 for problem zz_6270472886
sampled for problem zz_6270472886
sampled for problem zz_7471821836
finished samples sampling for zz_7471821836
 finished run 2 for problem zz_7471821836
 start run 3 for problem zz_7471821836
   start samplings 1000 for problem zz_7471821836
sampled for problem zz_7471821836
sampled for problem zz_8721690652
finished samples sampling for zz_8721690652
 finished run 3 for problem zz_8721690652
 start run 4 for problem zz_8721690652
   start samplings 1000 for problem zz_8721690652
sampled for problem zz_8721690652
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0001863196
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2699010835
finished samples sampling for zz_2699010835
 finished run 3 for problem zz_2699010835
 start run 4 for problem zz_2699010835
   start samplings 1000 for problem zz_2699010835
sampled for problem zz_2699010835
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4933543679
finished samples sampling for zz_4933543679
 finished run 4 for problem zz_4933543679
 start run 5 for problem zz_4933543679
   start samplings 1000 for problem zz_4933543679
sampled for problem zz_4933543679
sampled for problem zz_6419836897
finished samples sampling for zz_6419836897
 finished run 3 for problem zz_6419836897
 start run 4 for problem zz_6419836897
   start samplings 1000 for problem zz_6419836897
sampled for problem zz_6419836897
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_5205717936
finished samples sampling for zz_5205717936
 finished run 3 for problem zz_5205717936
 start run 4 for problem zz_5205717936
   start samplings 1000 for problem zz_5205717936
sampled for problem zz_5205717936
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6278981758
finished samples sampling for zz_6278981758
 finished run 3 for problem zz_6278981758
 start run 4 for problem zz_6278981758
   start samplings 1000 for problem zz_6278981758
sampled for problem zz_6278981758
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6270472886
finished samples sampling for zz_6270472886
 finished run 3 for problem zz_6270472886
 start run 4 for problem zz_6270472886
   start samplings 1000 for problem zz_6270472886
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f98e4396360>
sampled for problem zz_4983060353
finished samples sampling for zz_4983060353
 finished run 1 for problem zz_4983060353
 start run 2 for problem zz_4983060353
   start samplings 1000 for problem zz_4983060353
sampled for problem zz_4983060353
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
sampled for problem zz_3358737269
finished samples sampling for zz_3358737269
 finished run 1 for problem zz_3358737269
 start run 2 for problem zz_3358737269
   start samplings 1000 for problem zz_3358737269
sampled for problem zz_3358737269
sampled for problem zz_6074050616
finished samples sampling for zz_6074050616
 finished run 1 for problem zz_6074050616
 start run 2 for problem zz_6074050616
   start samplings 1000 for problem zz_6074050616
sampled for problem zz_6074050616
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6882327039
 start writing answer for problem {} zz_5611322142
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f98e43c5130>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f98e43c5130>
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
sampled for problem zz_2791652904
finished samples sampling for zz_2791652904
 finished run 2 for problem zz_2791652904
 start run 3 for problem zz_2791652904
   start samplings 1000 for problem zz_2791652904
sampled for problem zz_2791652904
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
sampled for problem zz_2921244493
finished samples sampling for zz_2921244493
 finished run 2 for problem zz_2921244493
 start run 3 for problem zz_2921244493
   start samplings 1000 for problem zz_2921244493
sampled for problem zz_2921244493
sampled for problem zz_7899741822
finished samples sampling for zz_7899741822
 finished run 2 for problem zz_7899741822
 start run 3 for problem zz_7899741822
   start samplings 1000 for problem zz_7899741822
sampled for problem zz_7899741822
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
sampled for problem zz_2258027639
finished samples sampling for zz_2258027639
 finished run 3 for problem zz_2258027639
 start run 4 for problem zz_2258027639
   start samplings 1000 for problem zz_2258027639
sampled for problem zz_2258027639
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
sampled for problem zz_6577828538
finished samples sampling for zz_6577828538
 finished run 2 for problem zz_6577828538
 start run 3 for problem zz_6577828538
   start samplings 1000 for problem zz_6577828538
sampled for problem zz_6577828538
sampled for problem zz_4983060353
finished samples sampling for zz_4983060353
 finished run 2 for problem zz_4983060353
 start run 3 for problem zz_4983060353
   start samplings 1000 for problem zz_4983060353
sampled for problem zz_4983060353
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
sampled for problem zz_3358737269
finished samples sampling for zz_3358737269
 finished run 2 for problem zz_3358737269
 start run 3 for problem zz_3358737269
   start samplings 1000 for problem zz_3358737269
sampled for problem zz_3358737269
sampled for problem zz_6074050616
finished samples sampling for zz_6074050616
 finished run 2 for problem zz_6074050616
 start run 3 for problem zz_6074050616
   start samplings 1000 for problem zz_6074050616
sampled for problem zz_6074050616
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
   start samplings 1000 for problem zz_3231454862
sampled for problem zz_3231454862
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
 problem zz_2676805068 will take can be sampled with a single run
 problem zz_2676805068 will be solved 1 times per run
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
sampled for problem zz_3511504764
finished samples sampling for zz_3511504764
 finished run 0 for problem zz_3511504764
 start run 1 for problem zz_3511504764
   start samplings 1000 for problem zz_3511504764
sampled for problem zz_3511504764
 start run 0 for problem zz_2676805068
   start samplings 1000 for problem zz_2676805068
sampled for problem zz_2676805068
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
sampled for problem zz_0893645049
finished samples sampling for zz_0893645049
 finished run 0 for problem zz_0893645049
 start run 1 for problem zz_0893645049
   start samplings 1000 for problem zz_0893645049
sampled for problem zz_0893645049
sampled for problem zz_4167523720
finished samples sampling for zz_4167523720
 finished run 0 for problem zz_4167523720
 start run 1 for problem zz_4167523720
   start samplings 1000 for problem zz_4167523720
sampled for problem zz_4167523720
sampled for problem zz_3527907281
finished samples sampling for zz_3527907281
 finished run 0 for problem zz_3527907281
 start run 1 for problem zz_3527907281
   start samplings 1000 for problem zz_3527907281
sampled for problem zz_3527907281
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
sampled for problem zz_4971361908
finished samples sampling for zz_4971361908
 finished run 0 for problem zz_4971361908
 start run 1 for problem zz_4971361908
   start samplings 1000 for problem zz_4971361908
sampled for problem zz_4971361908
sampled for problem zz_0534179516
finished samples sampling for zz_0534179516
 finished run 0 for problem zz_0534179516
 start run 1 for problem zz_0534179516
   start samplings 1000 for problem zz_0534179516
sampled for problem zz_0534179516
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
sampled for problem zz_3231454862
finished samples sampling for zz_3231454862
 finished run 0 for problem zz_3231454862
 start run 1 for problem zz_3231454862
   start samplings 1000 for problem zz_3231454862
sampled for problem zz_3231454862
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
 finished writing answer for problem {} zz_0295310170
 start writing answer for problem {} zz_5533357779
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4ec5b3c20>
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
 start run 0 for problem zz_8633696827
   start samplings 1000 for problem zz_8633696827
sampled for problem zz_8633696827
 start run 0 for problem zz_1860673799
   start samplings 1000 for problem zz_1860673799
sampled for problem zz_1860673799
 start run 0 for problem zz_4496173481
   start samplings 1000 for problem zz_4496173481
sampled for problem zz_4496173481
 start run 0 for problem zz_3984838668
   start samplings 1000 for problem zz_3984838668
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
sampled for problem zz_3984838668
sampled for problem zz_5683679450
finished samples sampling for zz_5683679450
 finished run 0 for problem zz_5683679450
 start run 1 for problem zz_5683679450
   start samplings 1000 for problem zz_5683679450
sampled for problem zz_5683679450
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
sampled for problem zz_6820111222
finished samples sampling for zz_6820111222
 finished run 0 for problem zz_6820111222
 start run 1 for problem zz_6820111222
   start samplings 1000 for problem zz_6820111222
sampled for problem zz_6820111222
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
sampled for problem zz_0291999630
finished samples sampling for zz_0291999630
 finished run 0 for problem zz_0291999630
 start run 1 for problem zz_0291999630
   start samplings 1000 for problem zz_0291999630
sampled for problem zz_0291999630
sampled for problem zz_9806083889
finished samples sampling for zz_9806083889
 finished run 0 for problem zz_9806083889
 start run 1 for problem zz_9806083889
   start samplings 1000 for problem zz_9806083889
sampled for problem zz_9806083889
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_8633696827
finished samples sampling for zz_8633696827
 finished run 0 for problem zz_8633696827
 start run 1 for problem zz_8633696827
   start samplings 1000 for problem zz_8633696827
sampled for problem zz_8633696827
sampled for problem zz_1860673799
finished samples sampling for zz_1860673799
 finished run 0 for problem zz_1860673799
 start run 1 for problem zz_1860673799
   start samplings 1000 for problem zz_1860673799
sampled for problem zz_1860673799
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6244783629
 start writing answer for problem {} zz_4833429819
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_4496173481
finished samples sampling for zz_4496173481
 finished run 0 for problem zz_4496173481
 start run 1 for problem zz_4496173481
   start samplings 1000 for problem zz_4496173481
sampled for problem zz_4496173481
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f2b381b96a0>
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_3984838668
finished samples sampling for zz_3984838668
 finished run 0 for problem zz_3984838668
 start run 1 for problem zz_3984838668
   start samplings 1000 for problem zz_3984838668
sampled for problem zz_3984838668
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f2b381b96a0>
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
 finished writing answer for problem {} zz_3085251181
 start writing answer for problem {} zz_7909671180
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9e70395d30>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9e70395d30>
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
sampled for problem zz_0959642795
finished samples sampling for zz_0959642795
 finished run 1 for problem zz_0959642795
 start run 2 for problem zz_0959642795
   start samplings 1000 for problem zz_0959642795
sampled for problem zz_0959642795
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
sampled for problem zz_2720660293
finished samples sampling for zz_2720660293
 finished run 1 for problem zz_2720660293
 start run 2 for problem zz_2720660293
   start samplings 1000 for problem zz_2720660293
sampled for problem zz_2720660293
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
sampled for problem zz_6774697119
finished samples sampling for zz_6774697119
 finished run 1 for problem zz_6774697119
 start run 2 for problem zz_6774697119
   start samplings 1000 for problem zz_6774697119
sampled for problem zz_6774697119
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
sampled for problem zz_9471019571
finished samples sampling for zz_9471019571
 finished run 1 for problem zz_9471019571
 start run 2 for problem zz_9471019571
   start samplings 1000 for problem zz_9471019571
sampled for problem zz_9471019571
sampled for problem zz_5452407354
finished samples sampling for zz_5452407354
 finished run 1 for problem zz_5452407354
 start run 2 for problem zz_5452407354
   start samplings 1000 for problem zz_5452407354
sampled for problem zz_5452407354
sampled for problem zz_0317017085
finished samples sampling for zz_0317017085
 finished run 1 for problem zz_0317017085
 start run 2 for problem zz_0317017085
   start samplings 1000 for problem zz_0317017085
sampled for problem zz_0317017085
sampled for problem zz_0255343551
finished samples sampling for zz_0255343551
 finished run 1 for problem zz_0255343551
 start run 2 for problem zz_0255343551
   start samplings 1000 for problem zz_0255343551
sampled for problem zz_0255343551
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_4056127159
finished samples sampling for zz_4056127159
 finished run 2 for problem zz_4056127159
 start run 3 for problem zz_4056127159
   start samplings 1000 for problem zz_4056127159
sampled for problem zz_4056127159
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_2631571852
 start writing answer for problem {} zz_1950776516
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9e703a8ef0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9e703a8ef0>
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
   start samplings 1000 for problem zz_0931578977
sampled for problem zz_0931578977
 start run 0 for problem zz_4815697258
   start samplings 1000 for problem zz_4815697258
sampled for problem zz_4815697258
 start run 0 for problem zz_8942337152
   start samplings 1000 for problem zz_8942337152
sampled for problem zz_8942337152
 start run 0 for problem zz_3851427014
   start samplings 1000 for problem zz_3851427014
sampled for problem zz_3851427014
 start run 0 for problem zz_8276325827
   start samplings 1000 for problem zz_8276325827
sampled for problem zz_8276325827
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
sampled for problem zz_5971996237
finished samples sampling for zz_5971996237
 finished run 0 for problem zz_5971996237
 start run 1 for problem zz_5971996237
   start samplings 1000 for problem zz_5971996237
sampled for problem zz_5971996237
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6277987427
 start writing answer for problem {} zz_9220287810
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8c2c77a150>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8c2c77a150>
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_4171203299
 start writing answer for problem {} zz_1372475312
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8c2c762db0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8c2c762db0>
sampled for problem zz_6489818378
finished samples sampling for zz_6489818378
 finished run 0 for problem zz_6489818378
 start run 1 for problem zz_6489818378
   start samplings 1000 for problem zz_6489818378
sampled for problem zz_6489818378
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
sampled for problem zz_4709661397
finished samples sampling for zz_4709661397
 finished run 0 for problem zz_4709661397
 start run 1 for problem zz_4709661397
   start samplings 1000 for problem zz_4709661397
sampled for problem zz_4709661397
sampled for problem zz_0931578977
finished samples sampling for zz_0931578977
 finished run 0 for problem zz_0931578977
 start run 1 for problem zz_0931578977
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_4334158375
 start writing answer for problem {} zz_9064081178
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f98e43c7620>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f98e43c7620>
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2791652904
finished samples sampling for zz_2791652904
 finished run 3 for problem zz_2791652904
 start run 4 for problem zz_2791652904
   start samplings 1000 for problem zz_2791652904
sampled for problem zz_2791652904
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2921244493
finished samples sampling for zz_2921244493
 finished run 3 for problem zz_2921244493
 start run 4 for problem zz_2921244493
   start samplings 1000 for problem zz_2921244493
sampled for problem zz_2921244493
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_7899741822
finished samples sampling for zz_7899741822
 finished run 3 for problem zz_7899741822
 start run 4 for problem zz_7899741822
   start samplings 1000 for problem zz_7899741822
sampled for problem zz_7899741822
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2258027639
finished samples sampling for zz_2258027639
 finished run 4 for problem zz_2258027639
 start run 5 for problem zz_2258027639
   start samplings 1000 for problem zz_2258027639
sampled for problem zz_2258027639
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_6577828538
finished samples sampling for zz_6577828538
 finished run 3 for problem zz_6577828538
 start run 4 for problem zz_6577828538
   start samplings 1000 for problem zz_6577828538
sampled for problem zz_6577828538
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_5611322142
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
 finished writing answer for problem {} zz_4282889685
 start writing answer for problem {} zz_3147064965
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fef5079e840>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fef5079e840>
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
sampled for problem zz_9283730726
finished samples sampling for zz_9283730726
 finished run 2 for problem zz_9283730726
 start run 3 for problem zz_9283730726
   start samplings 1000 for problem zz_9283730726
sampled for problem zz_9283730726
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_9142185862
 start writing answer for problem {} zz_0946095345
sampled for problem zz_4262621135
finished samples sampling for zz_4262621135
 finished run 3 for problem zz_4262621135
 start run 4 for problem zz_4262621135
   start samplings 1000 for problem zz_4262621135
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
sampled for problem zz_4262621135
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fef5072f4a0>
sampled for problem zz_0538469761
finished samples sampling for zz_0538469761
 finished run 2 for problem zz_0538469761
 start run 3 for problem zz_0538469761
   start samplings 1000 for problem zz_0538469761
sampled for problem zz_0538469761
sampled for problem zz_5744954469
finished samples sampling for zz_5744954469
 finished run 2 for problem zz_5744954469
 start run 3 for problem zz_5744954469
   start samplings 1000 for problem zz_5744954469
sampled for problem zz_5744954469
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fef5072f4a0>
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
sampled for problem zz_8884820367
finished samples sampling for zz_8884820367
 finished run 2 for problem zz_8884820367
 start run 3 for problem zz_8884820367
   start samplings 1000 for problem zz_8884820367
sampled for problem zz_8884820367
sampled for problem zz_7063111329
finished samples sampling for zz_7063111329
 finished run 2 for problem zz_7063111329
 start run 3 for problem zz_7063111329
   start samplings 1000 for problem zz_7063111329
sampled for problem zz_7063111329
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
sampled for problem zz_7350679553
finished samples sampling for zz_7350679553
 finished run 2 for problem zz_7350679553
 start run 3 for problem zz_7350679553
   start samplings 1000 for problem zz_7350679553
sampled for problem zz_7350679553
sampled for problem zz_0163190663
finished samples sampling for zz_0163190663
 finished run 2 for problem zz_0163190663
 start run 3 for problem zz_0163190663
   start samplings 1000 for problem zz_0163190663
sampled for problem zz_0163190663
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4ec5b3c20>
 finished writing answer for problem {} zz_3387349060
 start writing answer for problem {} zz_1701713947
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4ec51c4a0>
sampled for problem zz_3511504764
finished samples sampling for zz_3511504764
 finished run 1 for problem zz_3511504764
 start run 2 for problem zz_3511504764
   start samplings 1000 for problem zz_3511504764
sampled for problem zz_3511504764
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4ec51c4a0>
sampled for problem zz_2676805068
finished samples sampling for zz_2676805068
 finished run 0 for problem zz_2676805068
 start run 1 for problem zz_2676805068
   start samplings 1000 for problem zz_2676805068
sampled for problem zz_2676805068
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
sampled for problem zz_0893645049
finished samples sampling for zz_0893645049
 finished run 1 for problem zz_0893645049
 start run 2 for problem zz_0893645049
   start samplings 1000 for problem zz_0893645049
sampled for problem zz_0893645049
sampled for problem zz_4167523720
finished samples sampling for zz_4167523720
 finished run 1 for problem zz_4167523720
 start run 2 for problem zz_4167523720
   start samplings 1000 for problem zz_4167523720
sampled for problem zz_4167523720
sampled for problem zz_3527907281
finished samples sampling for zz_3527907281
 finished run 1 for problem zz_3527907281
 start run 2 for problem zz_3527907281
   start samplings 1000 for problem zz_3527907281
sampled for problem zz_3527907281
sampled for problem zz_4971361908
finished samples sampling for zz_4971361908
 finished run 1 for problem zz_4971361908
 start run 2 for problem zz_4971361908
   start samplings 1000 for problem zz_4971361908
sampled for problem zz_4971361908
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
sampled for problem zz_0534179516
finished samples sampling for zz_0534179516
 finished run 1 for problem zz_0534179516
 start run 2 for problem zz_0534179516
   start samplings 1000 for problem zz_0534179516
sampled for problem zz_0534179516
sampled for problem zz_3231454862
finished samples sampling for zz_3231454862
 finished run 1 for problem zz_3231454862
 start run 2 for problem zz_3231454862
   start samplings 1000 for problem zz_3231454862
sampled for problem zz_3231454862
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_5533357779
 start writing answer for problem {} zz_8714690430
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4ec5b20f0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4ec5b20f0>
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
sampled for problem zz_3511504764
finished samples sampling for zz_3511504764
 finished run 2 for problem zz_3511504764
 start run 3 for problem zz_3511504764
   start samplings 1000 for problem zz_3511504764
sampled for problem zz_3511504764
sampled for problem zz_2676805068
finished samples sampling for zz_2676805068
 finished run 1 for problem zz_2676805068
 start run 2 for problem zz_2676805068
   start samplings 1000 for problem zz_2676805068
sampled for problem zz_2676805068
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables
sampled for problem zz_2260395055
sampled for problem zz_4285806320
finished samples sampling for zz_4285806320
 finished run 5 for problem zz_4285806320
 start run 6 for problem zz_4285806320
   start samplings 1000 for problem zz_4285806320
sampled for problem zz_4285806320
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2239038483
finished samples sampling for zz_2239038483
 finished run 4 for problem zz_2239038483
 start run 5 for problem zz_2239038483
   start samplings 1000 for problem zz_2239038483
sampled for problem zz_2239038483
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6835473743
finished samples sampling for zz_6835473743
 finished run 4 for problem zz_6835473743
 start run 5 for problem zz_6835473743
   start samplings 1000 for problem zz_6835473743
sampled for problem zz_6835473743
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2871354184
finished samples sampling for zz_2871354184
 finished run 4 for problem zz_2871354184
 start run 5 for problem zz_2871354184
   start samplings 1000 for problem zz_2871354184
sampled for problem zz_2871354184
sampled for problem zz_1089975612
finished samples sampling for zz_1089975612
 finished run 4 for problem zz_1089975612
 start run 5 for problem zz_1089975612
   start samplings 1000 for problem zz_1089975612
sampled for problem zz_1089975612
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0277687505
finished samples sampling for zz_0277687505
 finished run 5 for problem zz_0277687505
 start run 6 for problem zz_0277687505
   start samplings 1000 for problem zz_0277687505
sampled for problem zz_0277687505
sampled for problem zz_6016382926
finished samples sampling for zz_6016382926
 finished run 4 for problem zz_6016382926
 start run 5 for problem zz_6016382926
   start samplings 1000 for problem zz_6016382926
sampled for problem zz_6016382926
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2260395055
finished samples sampling for zz_2260395055
 finished run 5 for problem zz_2260395055
 start run 6 for problem zz_2260395055
   start samplings 1000 for problem zz_2260395055
sampled for problem zz_2260395055
sampled for problem zz_4285806320
finished samples sampling for zz_4285806320
 finished run 6 for problem zz_4285806320
 start run 7 for problem zz_4285806320
   start samplings 1000 for problem zz_4285806320
sampled for problem zz_4285806320
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2239038483
finished samples sampling for zz_2239038483
 finished run 5 for problem zz_2239038483
 start run 6 for problem zz_2239038483
   start samplings 1000 for problem zz_2239038483
sampled for problem zz_2239038483
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6835473743
finished samples sampling for zz_6835473743
 finished run 5 for problem zz_6835473743
 start run 6 for problem zz_6835473743
   start samplings 1000 for problem zz_6835473743
sampled for problem zz_6835473743
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2871354184
finished samples sampling for zz_2871354184
 finished run 5 for problem zz_2871354184
 start run 6 for problem zz_2871354184
   start samplings 1000 for problem zz_2871354184
sampled for problem zz_2871354184
sampled for problem zz_1089975612
finished samples sampling for zz_1089975612
 finished run 5 for problem zz_1089975612
 start run 6 for problem zz_1089975612
   start samplings 1000 for problem zz_1089975612
sampled for problem zz_1089975612
sampled for problem zz_0277687505
finished samples sampling for zz_0277687505
 finished run 6 for problem zz_0277687505
 start run 7 for problem zz_0277687505
   start samplings 1000 for problem zz_0277687505
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0277687505
sampled for problem zz_6016382926
finished samples sampling for zz_6016382926
 finished run 5 for problem zz_6016382926
 start run 6 for problem zz_6016382926
   start samplings 1000 for problem zz_6016382926
sampled for problem zz_6016382926
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2260395055
finished samples sampling for zz_2260395055
 finished run 6 for problem zz_2260395055
 start run 7 for problem zz_2260395055
   start samplings 1000 for problem zz_2260395055
sampled for problem zz_2260395055
sampled for problem zz_4285806320
finished samples sampling for zz_4285806320
 finished run 7 for problem zz_4285806320
 start run 8 for problem zz_4285806320
   start samplings 1000 for problem zz_4285806320
sampled for problem zz_4285806320
sampled for problem zz_2239038483
finished samples sampling for zz_2239038483
 finished run 6 for problem zz_2239038483
 start run 7 for problem zz_2239038483
   start samplings 1000 for problem zz_2239038483
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2239038483
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6835473743
finished samples sampling for zz_6835473743
 finished run 6 for problem zz_6835473743
 start run 7 for problem zz_6835473743
   start samplings 1000 for problem zz_6835473743
sampled for problem zz_6835473743
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2871354184
finished samples sampling for zz_2871354184
 finished run 6 for problem zz_2871354184
 start run 7 for problem zz_2871354184
   start samplings 1000 for problem zz_2871354184
sampled for problem zz_2871354184
sampled for problem zz_1089975612
finished samples sampling for zz_1089975612
 finished run 6 for problem zz_1089975612
 start run 7 for problem zz_1089975612
   start samplings 1000 for problem zz_1089975612
sampled for problem zz_1089975612
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0277687505
finished samples sampling for zz_0277687505
 finished run 7 for problem zz_0277687505
 start run 8 for problem zz_0277687505
   start samplings 1000 for problem zz_0277687505
sampled for problem zz_0277687505
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6016382926
finished samples sampling for zz_6016382926
 finished run 6 for problem zz_6016382926
 start run 7 for problem zz_6016382926
   start samplings 1000 for problem zz_6016382926
sampled for problem zz_6016382926
sampled for problem zz_2260395055
finished samples sampling for zz_2260395055
 finished run 7 for problem zz_2260395055
 start run 8 for problem zz_2260395055
   start samplings 1000 for problem zz_2260395055
sampled for problem zz_2260395055
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4285806320
finished samples sampling for zz_4285806320
 finished run 8 for problem zz_4285806320
 start run 9 for problem zz_4285806320
   start samplings 1000 for problem zz_4285806320
sampled for problem zz_4285806320
sampled for problem zz_2239038483
finished samples sampling for zz_2239038483
 finished run 7 for problem zz_2239038483
 start run 8 for problem zz_2239038483
   start samplings 1000 for problem zz_2239038483
sampled for problem zz_2239038483
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6835473743
finished samples sampling for zz_6835473743
 finished run 7 for problem zz_6835473743
 start run 8 for problem zz_6835473743
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_3147064965
 start writing answer for problem {} zz_6368149696
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fef50769040>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fef50769040>
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_9283730726
finished samples sampling for zz_9283730726
 finished run 3 for problem zz_9283730726
 start run 4 for problem zz_9283730726
   start samplings 1000 for problem zz_9283730726
sampled for problem zz_9283730726
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4262621135
finished samples sampling for zz_4262621135
 finished run 4 for problem zz_4262621135
 start run 5 for problem zz_4262621135
   start samplings 1000 for problem zz_4262621135
sampled for problem zz_4262621135
sampled for problem zz_0538469761
finished samples sampling for zz_0538469761
 finished run 3 for problem zz_0538469761
 start run 4 for problem zz_0538469761
   start samplings 1000 for problem zz_0538469761
sampled for problem zz_0538469761
sampled for problem zz_5744954469
finished samples sampling for zz_5744954469
 finished run 3 for problem zz_5744954469
 start run 4 for problem zz_5744954469
   start samplings 1000 for problem zz_5744954469
sampled for problem zz_5744954469
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0946095345
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_8884820367
finished samples sampling for zz_8884820367
 finished run 3 for problem zz_8884820367
 start run 4 for problem zz_8884820367
   start samplings 1000 for problem zz_8884820367
sampled for problem zz_8884820367
sampled for problem zz_7063111329
finished samples sampling for zz_7063111329
 finished run 3 for problem zz_7063111329
 start run 4 for problem zz_7063111329
   start samplings 1000 for problem zz_7063111329
sampled for problem zz_7063111329
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_4660896733
 start writing answer for problem {} zz_3544680810
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f2b381e06e0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f2b381e06e0>
sampled for problem zz_5683679450
finished samples sampling for zz_5683679450
 finished run 1 for problem zz_5683679450
 start run 2 for problem zz_5683679450
   start samplings 1000 for problem zz_5683679450
sampled for problem zz_5683679450
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
sampled for problem zz_6820111222
finished samples sampling for zz_6820111222
 finished run 1 for problem zz_6820111222
 start run 2 for problem zz_6820111222
   start samplings 1000 for problem zz_6820111222
sampled for problem zz_6820111222
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
sampled for problem zz_0291999630
finished samples sampling for zz_0291999630
 finished run 1 for problem zz_0291999630
 start run 2 for problem zz_0291999630
   start samplings 1000 for problem zz_0291999630
sampled for problem zz_0291999630
sampled for problem zz_9806083889
finished samples sampling for zz_9806083889
 finished run 1 for problem zz_9806083889
 start run 2 for problem zz_9806083889
   start samplings 1000 for problem zz_9806083889
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
sampled for problem zz_9806083889
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
sampled for problem zz_8633696827
finished samples sampling for zz_8633696827
 finished run 1 for problem zz_8633696827
 start run 2 for problem zz_8633696827
   start samplings 1000 for problem zz_8633696827
sampled for problem zz_8633696827
sampled for problem zz_1860673799
finished samples sampling for zz_1860673799
 finished run 1 for problem zz_1860673799
 start run 2 for problem zz_1860673799
   start samplings 1000 for problem zz_1860673799
sampled for problem zz_1860673799
sampled for problem zz_4496173481
finished samples sampling for zz_4496173481
 finished run 1 for problem zz_4496173481
 start run 2 for problem zz_4496173481
   start samplings 1000 for problem zz_4496173481
sampled for problem zz_4496173481
sampled for problem zz_3984838668
finished samples sampling for zz_3984838668
 finished run 1 for problem zz_3984838668
 start run 2 for problem zz_3984838668
   start samplings 1000 for problem zz_3984838668
sampled for problem zz_3984838668
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_5683679450
finished samples sampling for zz_5683679450
 finished run 2 for problem zz_5683679450
 start run 3 for problem zz_5683679450
   start samplings 1000 for problem zz_5683679450
sampled for problem zz_5683679450
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_0959642795
finished samples sampling for zz_0959642795
 finished run 2 for problem zz_0959642795
 start run 3 for problem zz_0959642795
   start samplings 1000 for problem zz_0959642795
sampled for problem zz_0959642795
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_7909671180
 start writing answer for problem {} zz_7591282265
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9e703d2870>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9e703d2870>
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
sampled for problem zz_2720660293
finished samples sampling for zz_2720660293
 finished run 2 for problem zz_2720660293
 start run 3 for problem zz_2720660293
   start samplings 1000 for problem zz_2720660293
sampled for problem zz_2720660293
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
sampled for problem zz_6774697119
finished samples sampling for zz_6774697119
 finished run 2 for problem zz_6774697119
 start run 3 for problem zz_6774697119
   start samplings 1000 for problem zz_6774697119
sampled for problem zz_6774697119
sampled for problem zz_9471019571
finished samples sampling for zz_9471019571
 finished run 2 for problem zz_9471019571
 start run 3 for problem zz_9471019571
   start samplings 1000 for problem zz_9471019571
sampled for problem zz_9471019571
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
sampled for problem zz_5452407354
finished samples sampling for zz_5452407354
 finished run 2 for problem zz_5452407354
 start run 3 for problem zz_5452407354
   start samplings 1000 for problem zz_5452407354
sampled for problem zz_5452407354
sampled for problem zz_0317017085
finished samples sampling for zz_0317017085
 finished run 2 for problem zz_0317017085
 start run 3 for problem zz_0317017085
   start samplings 1000 for problem zz_0317017085
sampled for problem zz_0317017085
sampled for problem zz_0255343551
finished samples sampling for zz_0255343551
 finished run 2 for problem zz_0255343551
 start run 3 for problem zz_0255343551
   start samplings 1000 for problem zz_0255343551
sampled for problem zz_0255343551
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
sampled for problem zz_4056127159
finished samples sampling for zz_4056127159
 finished run 3 for problem zz_4056127159
 start run 4 for problem zz_4056127159
   start samplings 1000 for problem zz_4056127159
sampled for problem zz_4056127159
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_7591282265
 start writing answer for problem {} zz_6600677120
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9e703abc50>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9e703abc50>
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_0959642795
finished samples sampling for zz_0959642795
 finished run 3 for problem zz_0959642795
 start run 4 for problem zz_0959642795
   start samplings 1000 for problem zz_0959642795
sampled for problem zz_0959642795
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
   start samplings 1000 for problem zz_0931578977
sampled for problem zz_0931578977
sampled for problem zz_4815697258
finished samples sampling for zz_4815697258
 finished run 0 for problem zz_4815697258
 start run 1 for problem zz_4815697258
   start samplings 1000 for problem zz_4815697258
sampled for problem zz_4815697258
sampled for problem zz_8942337152
finished samples sampling for zz_8942337152
 finished run 0 for problem zz_8942337152
 start run 1 for problem zz_8942337152
   start samplings 1000 for problem zz_8942337152
sampled for problem zz_8942337152
sampled for problem zz_3851427014
finished samples sampling for zz_3851427014
 finished run 0 for problem zz_3851427014
 start run 1 for problem zz_3851427014
   start samplings 1000 for problem zz_3851427014
sampled for problem zz_3851427014
sampled for problem zz_8276325827
finished samples sampling for zz_8276325827
 finished run 0 for problem zz_8276325827
 start run 1 for problem zz_8276325827
   start samplings 1000 for problem zz_8276325827
sampled for problem zz_8276325827
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
sampled for problem zz_5971996237
finished samples sampling for zz_5971996237
 finished run 1 for problem zz_5971996237
 start run 2 for problem zz_5971996237
   start samplings 1000 for problem zz_5971996237
sampled for problem zz_5971996237
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_9220287810
 start writing answer for problem {} zz_8714453254
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8c2c7794f0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8c2c7794f0>
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
sampled for problem zz_6489818378
finished samples sampling for zz_6489818378
 finished run 1 for problem zz_6489818378
 start run 2 for problem zz_6489818378
   start samplings 1000 for problem zz_6489818378
sampled for problem zz_6489818378
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_4709661397
finished samples sampling for zz_4709661397
 finished run 1 for problem zz_4709661397
 start run 2 for problem zz_4709661397
   start samplings 1000 for problem zz_4709661397
sampled for problem zz_4709661397
sampled for problem zz_0931578977
finished samples sampling for zz_0931578977
 finished run 1 for problem zz_0931578977
 start run 2 for problem zz_0931578977
   start samplings 1000 for problem zz_0931578977
sampled for problem zz_0931578977
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_4815697258
finished samples sampling for zz_4815697258
 finished run 1 for problem zz_4815697258
 start run 2 for problem zz_4815697258
   start samplings 1000 for problem zz_4815697258
sampled for problem zz_4815697258
sampled for problem zz_8942337152
finished samples sampling for zz_8942337152
 finished run 1 for problem zz_8942337152
 start run 2 for problem zz_8942337152
   start samplings 1000 for problem zz_8942337152
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
sampled for problem zz_8942337152
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_3851427014
finished samples sampling for zz_3851427014
 finished run 1 for problem zz_3851427014
 start run 2 for problem zz_3851427014
   start samplings 1000 for problem zz_3851427014
sampled for problem zz_3851427014
sampled for problem zz_8276325827
finished samples sampling for zz_8276325827
 finished run 1 for problem zz_8276325827
 start run 2 for problem zz_8276325827
   start samplings 1000 for problem zz_8276325827
sampled for problem zz_8276325827
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_1950776516
 start writing answer for problem {} zz_8754965043
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9e703aa1e0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9e703aa1e0>
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2720660293
finished samples sampling for zz_2720660293
 finished run 3 for problem zz_2720660293
 start run 4 for problem zz_2720660293
   start samplings 1000 for problem zz_2720660293
sampled for problem zz_2720660293
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6774697119
finished samples sampling for zz_6774697119
 finished run 3 for problem zz_6774697119
 start run 4 for problem zz_6774697119
   start samplings 1000 for problem zz_6774697119
sampled for problem zz_6774697119
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_9471019571
finished samples sampling for zz_9471019571
 finished run 3 for problem zz_9471019571
 start run 4 for problem zz_9471019571
   start samplings 1000 for problem zz_9471019571
sampled for problem zz_9471019571
sampled for problem zz_5452407354
finished samples sampling for zz_5452407354
 finished run 3 for problem zz_5452407354
 start run 4 for problem zz_5452407354
   start samplings 1000 for problem zz_5452407354
sampled for problem zz_5452407354
sampled for problem zz_0317017085
finished samples sampling for zz_0317017085
 finished run 3 for problem zz_0317017085
 start run 4 for problem zz_0317017085
   start samplings 1000 for problem zz_0317017085
sampled for problem zz_0317017085
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0255343551
finished samples sampling for zz_0255343551
 finished run 3 for problem zz_0255343551
 start run 4 for problem zz_0255343551
   start samplings 1000 for problem zz_0255343551
sampled for problem zz_0255343551
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_4056127159
finished samples sampling for zz_4056127159
 finished run 4 for problem zz_4056127159
 start run 5 for problem zz_4056127159
   start samplings 1000 for problem zz_4056127159
sampled for problem zz_4056127159
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8754965043
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
 finished writing answer for problem {} zz_1701713947
 start writing answer for problem {} zz_7841130710
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4ec5d9610>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4ec5d9610>
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
sampled for problem zz_0893645049
finished samples sampling for zz_0893645049
 finished run 2 for problem zz_0893645049
 start run 3 for problem zz_0893645049
   start samplings 1000 for problem zz_0893645049
sampled for problem zz_0893645049
sampled for problem zz_4167523720
finished samples sampling for zz_4167523720
 finished run 2 for problem zz_4167523720
 start run 3 for problem zz_4167523720
   start samplings 1000 for problem zz_4167523720
sampled for problem zz_4167523720
sampled for problem zz_3527907281
finished samples sampling for zz_3527907281
 finished run 2 for problem zz_3527907281
 start run 3 for problem zz_3527907281
   start samplings 1000 for problem zz_3527907281
sampled for problem zz_3527907281
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
sampled for problem zz_4971361908
finished samples sampling for zz_4971361908
 finished run 2 for problem zz_4971361908
 start run 3 for problem zz_4971361908
   start samplings 1000 for problem zz_4971361908
sampled for problem zz_4971361908
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
sampled for problem zz_0534179516
finished samples sampling for zz_0534179516
 finished run 2 for problem zz_0534179516
 start run 3 for problem zz_0534179516
   start samplings 1000 for problem zz_0534179516
sampled for problem zz_0534179516
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
sampled for problem zz_3231454862
finished samples sampling for zz_3231454862
 finished run 2 for problem zz_3231454862
 start run 3 for problem zz_3231454862
   start samplings 1000 for problem zz_3231454862
sampled for problem zz_3231454862
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_7841130710
 start writing answer for problem {} zz_2117849290
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4ec5db0b0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4ec5db0b0>
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
sampled for problem zz_3511504764
finished samples sampling for zz_3511504764
 finished run 3 for problem zz_3511504764
 start run 4 for problem zz_3511504764
   start samplings 1000 for problem zz_3511504764
sampled for problem zz_3511504764
sampled for problem zz_2676805068
finished samples sampling for zz_2676805068
 finished run 2 for problem zz_2676805068
 start run 3 for problem zz_2676805068
   start samplings 1000 for problem zz_2676805068
sampled for problem zz_2676805068
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_4833429819
 start writing answer for problem {} zz_0889364291
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f2b381e29c0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f2b381e29c0>
 finished writing answer for problem {} zz_3544680810
 start writing answer for problem {} zz_9043043111
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f2b38175c40>
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f2b38175c40>
sampled for problem zz_6820111222
finished samples sampling for zz_6820111222
 finished run 2 for problem zz_6820111222
 start run 3 for problem zz_6820111222
   start samplings 1000 for problem zz_6820111222
sampled for problem zz_6820111222
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
sampled for problem zz_0291999630
finished samples sampling for zz_0291999630
 finished run 2 for problem zz_0291999630
 start run 3 for problem zz_0291999630
   start samplings 1000 for problem zz_0291999630
sampled for problem zz_0291999630
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
sampled for problem zz_9806083889
finished samples sampling for zz_9806083889
 finished run 2 for problem zz_9806083889
 start run 3 for problem zz_9806083889
   start samplings 1000 for problem zz_9806083889
sampled for problem zz_9806083889
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
sampled for problem zz_8633696827
finished samples sampling for zz_8633696827
 finished run 2 for problem zz_8633696827
 start run 3 for problem zz_8633696827
   start samplings 1000 for problem zz_8633696827
sampled for problem zz_8633696827
sampled for problem zz_1860673799
finished samples sampling for zz_1860673799
 finished run 2 for problem zz_1860673799
 start run 3 for problem zz_1860673799
   start samplings 1000 for problem zz_1860673799
sampled for problem zz_1860673799
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
sampled for problem zz_4496173481
finished samples sampling for zz_4496173481
 finished run 2 for problem zz_4496173481
 start run 3 for problem zz_4496173481
   start samplings 1000 for problem zz_4496173481
sampled for problem zz_4496173481
sampled for problem zz_3984838668
finished samples sampling for zz_3984838668
 finished run 2 for problem zz_3984838668
 start run 3 for problem zz_3984838668
   start samplings 1000 for problem zz_3984838668
sampled for problem zz_3984838668
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_5683679450
finished samples sampling for zz_5683679450
 finished run 3 for problem zz_5683679450
 start run 4 for problem zz_5683679450
   start samplings 1000 for problem zz_5683679450
sampled for problem zz_5683679450
 finished writing answer for problem {} zz_9043043111
 start writing answer for problem {} zz_0690618443
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f2b381bb8c0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f2b381bb8c0>
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_1372475312
 start writing answer for problem {} zz_3274278151
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8c2c79d460>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8c2c79d460>
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
sampled for problem zz_5971996237
finished samples sampling for zz_5971996237
 finished run 2 for problem zz_5971996237
 start run 3 for problem zz_5971996237
   start samplings 1000 for problem zz_5971996237
sampled for problem zz_5971996237
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8714453254
 start writing answer for problem {} zz_6026204315
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8c2c6fdc10>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8c2c6fdc10>
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_6489818378
finished samples sampling for zz_6489818378
 finished run 2 for problem zz_6489818378
 start run 3 for problem zz_6489818378
   start samplings 1000 for problem zz_6489818378
sampled for problem zz_6489818378
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
sampled for problem zz_4709661397
finished samples sampling for zz_4709661397
 finished run 2 for problem zz_4709661397
 start run 3 for problem zz_4709661397
   start samplings 1000 for problem zz_4709661397
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_2117849290
 start writing answer for problem {} zz_8290171268
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4ec56bf80>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4ec56bf80>
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0893645049
finished samples sampling for zz_0893645049
 finished run 3 for problem zz_0893645049
 start run 4 for problem zz_0893645049
   start samplings 1000 for problem zz_0893645049
sampled for problem zz_0893645049
sampled for problem zz_4167523720
finished samples sampling for zz_4167523720
 finished run 3 for problem zz_4167523720
 start run 4 for problem zz_4167523720
   start samplings 1000 for problem zz_4167523720
sampled for problem zz_4167523720
sampled for problem zz_4971361908
finished samples sampling for zz_4971361908
 finished run 3 for problem zz_4971361908
 start run 4 for problem zz_4971361908
   start samplings 1000 for problem zz_4971361908
sampled for problem zz_4971361908
sampled for problem zz_3527907281
finished samples sampling for zz_3527907281
 finished run 3 for problem zz_3527907281
 start run 4 for problem zz_3527907281
   start samplings 1000 for problem zz_3527907281
sampled for problem zz_3527907281
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8714690430
sampled for problem zz_0534179516
finished samples sampling for zz_0534179516
 finished run 3 for problem zz_0534179516
 start run 4 for problem zz_0534179516
   start samplings 1000 for problem zz_0534179516
sampled for problem zz_0534179516
sampled for problem zz_3231454862
finished samples sampling for zz_3231454862
 finished run 3 for problem zz_3231454862
 start run 4 for problem zz_3231454862
   start samplings 1000 for problem zz_3231454862
sampled for problem zz_3231454862
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_6270472886
sampled for problem zz_7471821836
finished samples sampling for zz_7471821836
 finished run 3 for problem zz_7471821836
 start run 4 for problem zz_7471821836
   start samplings 1000 for problem zz_7471821836
sampled for problem zz_7471821836
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_8721690652
finished samples sampling for zz_8721690652
 finished run 4 for problem zz_8721690652
 start run 5 for problem zz_8721690652
   start samplings 1000 for problem zz_8721690652
sampled for problem zz_8721690652
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2699010835
finished samples sampling for zz_2699010835
 finished run 4 for problem zz_2699010835
 start run 5 for problem zz_2699010835
   start samplings 1000 for problem zz_2699010835
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2699010835
sampled for problem zz_4933543679
finished samples sampling for zz_4933543679
 finished run 5 for problem zz_4933543679
 start run 6 for problem zz_4933543679
   start samplings 1000 for problem zz_4933543679
sampled for problem zz_4933543679
sampled for problem zz_6419836897
finished samples sampling for zz_6419836897
 finished run 4 for problem zz_6419836897
 start run 5 for problem zz_6419836897
   start samplings 1000 for problem zz_6419836897
sampled for problem zz_6419836897
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_5205717936
finished samples sampling for zz_5205717936
 finished run 4 for problem zz_5205717936
 start run 5 for problem zz_5205717936
   start samplings 1000 for problem zz_5205717936
sampled for problem zz_5205717936
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6278981758
finished samples sampling for zz_6278981758
 finished run 4 for problem zz_6278981758
 start run 5 for problem zz_6278981758
   start samplings 1000 for problem zz_6278981758
sampled for problem zz_6278981758
sampled for problem zz_6270472886
finished samples sampling for zz_6270472886
 finished run 4 for problem zz_6270472886
 start run 5 for problem zz_6270472886
   start samplings 1000 for problem zz_6270472886
sampled for problem zz_6270472886
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_7471821836
finished samples sampling for zz_7471821836
 finished run 4 for problem zz_7471821836
 start run 5 for problem zz_7471821836
   start samplings 1000 for problem zz_7471821836
sampled for problem zz_7471821836
sampled for problem zz_8721690652
finished samples sampling for zz_8721690652
 finished run 5 for problem zz_8721690652
 start run 6 for problem zz_8721690652
   start samplings 1000 for problem zz_8721690652
sampled for problem zz_8721690652
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2699010835
finished samples sampling for zz_2699010835
 finished run 5 for problem zz_2699010835
 start run 6 for problem zz_2699010835
   start samplings 1000 for problem zz_2699010835
sampled for problem zz_2699010835
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4933543679
finished samples sampling for zz_4933543679
 finished run 6 for problem zz_4933543679
 start run 7 for problem zz_4933543679
   start samplings 1000 for problem zz_4933543679
sampled for problem zz_4933543679
sampled for problem zz_6419836897
finished samples sampling for zz_6419836897
 finished run 5 for problem zz_6419836897
 start run 6 for problem zz_6419836897
   start samplings 1000 for problem zz_6419836897
sampled for problem zz_6419836897
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_5205717936
finished samples sampling for zz_5205717936
 finished run 5 for problem zz_5205717936
 start run 6 for problem zz_5205717936
   start samplings 1000 for problem zz_5205717936
sampled for problem zz_5205717936
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6278981758
finished samples sampling for zz_6278981758
 finished run 5 for problem zz_6278981758
 start run 6 for problem zz_6278981758
   start samplings 1000 for problem zz_6278981758
sampled for problem zz_6278981758
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6270472886
finished samples sampling for zz_6270472886
 finished run 5 for problem zz_6270472886
 start run 6 for problem zz_6270472886
   start samplings 1000 for problem zz_6270472886
sampled for problem zz_6270472886
sampled for problem zz_7471821836
finished samples sampling for zz_7471821836
 finished run 5 for problem zz_7471821836
 start run 6 for problem zz_7471821836
   start samplings 1000 for problem zz_7471821836
sampled for problem zz_7471821836
sampled for problem zz_8721690652
finished samples sampling for zz_8721690652
 finished run 6 for problem zz_8721690652
 start run 7 for problem zz_8721690652
   start samplings 1000 for problem zz_8721690652
sampled for problem zz_8721690652
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2699010835
finished samples sampling for zz_2699010835
 finished run 6 for problem zz_2699010835
 start run 7 for problem zz_2699010835
   start samplings 1000 for problem zz_2699010835
sampled for problem zz_2699010835
sampled for problem zz_4933543679
finished samples sampling for zz_4933543679
 finished run 7 for problem zz_4933543679
 start run 8 for problem zz_4933543679
   start samplings 1000 for problem zz_4933543679
sampled for problem zz_4933543679
sampled for problem zz_6419836897
finished samples sampling for zz_6419836897
 finished run 6 for problem zz_6419836897
 start run 7 for problem zz_6419836897
   start samplings 1000 for problem zz_6419836897
sampled for problem zz_6419836897
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_5205717936
finished samples sampling for zz_5205717936
 finished run 6 for problem zz_5205717936
 start run 7 for problem zz_5205717936
   start samplings 1000 for problem zz_5205717936
sampled for problem zz_5205717936
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6278981758
finished samples sampling for zz_6278981758
 finished run 6 for problem zz_6278981758
 start run 7 for problem zz_6278981758
   start samplings 1000 for problem zz_6278981758
sampled for problem zz_6278981758
sampled for problem zz_6270472886
finished samples sampling for zz_6270472886
 finished run 6 for problem zz_6270472886
 start run 7 for problem zz_6270472886
   start samplings 1000 for problem zz_6270472886
sampled for problem zz_6270472886
sampled for problem zz_7471821836
finished samples sampling for zz_7471821836
 finished run 6 for problem zz_7471821836
 start run 7 for problem zz_7471821836
   start samplings 1000 for problem zz_7471821836
sampled for problem zz_7471821836
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_8721690652
finished samples sampling for zz_8721690652
 finished run 7 for problem zz_8721690652
 start run 8 for problem zz_8721690652
   start samplings 1000 for problem zz_8721690652
sampled for problem zz_8721690652
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
   start samplings 1000 for problem zz_6835473743
sampled for problem zz_6835473743
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2871354184
finished samples sampling for zz_2871354184
 finished run 7 for problem zz_2871354184
 start run 8 for problem zz_2871354184
   start samplings 1000 for problem zz_2871354184
sampled for problem zz_2871354184
sampled for problem zz_1089975612
finished samples sampling for zz_1089975612
 finished run 7 for problem zz_1089975612
 start run 8 for problem zz_1089975612
   start samplings 1000 for problem zz_1089975612
sampled for problem zz_1089975612
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0277687505
finished samples sampling for zz_0277687505
 finished run 8 for problem zz_0277687505
 start run 9 for problem zz_0277687505
   start samplings 1000 for problem zz_0277687505
sampled for problem zz_0277687505
sampled for problem zz_6016382926
finished samples sampling for zz_6016382926
 finished run 7 for problem zz_6016382926
 start run 8 for problem zz_6016382926
   start samplings 1000 for problem zz_6016382926
sampled for problem zz_6016382926
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2260395055
finished samples sampling for zz_2260395055
 finished run 8 for problem zz_2260395055
 start run 9 for problem zz_2260395055
   start samplings 1000 for problem zz_2260395055
sampled for problem zz_2260395055
sampled for problem zz_4285806320
finished samples sampling for zz_4285806320
 finished run 9 for problem zz_4285806320
 succesfully retrieved answer for problem {} zz_4285806320
 start working on problem zz_7146200131
 start writing answer for problem {} zz_4285806320
 problem zz_7146200131 will take can be sampled with a single run
 problem zz_7146200131 will be solved 1 times per run
 start run 0 for problem zz_7146200131
   start samplings 1000 for problem zz_7146200131
sampled for problem zz_7146200131
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f61d94952e0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f61d94952e0>
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_2239038483
finished samples sampling for zz_2239038483
 finished run 8 for problem zz_2239038483
 start run 9 for problem zz_2239038483
   start samplings 1000 for problem zz_2239038483
sampled for problem zz_2239038483
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_6835473743
finished samples sampling for zz_6835473743
 finished run 8 for problem zz_6835473743
 start run 9 for problem zz_6835473743
   start samplings 1000 for problem zz_6835473743
sampled for problem zz_6835473743
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_4285806320
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_2871354184
finished samples sampling for zz_2871354184
 finished run 8 for problem zz_2871354184
 start run 9 for problem zz_2871354184
   start samplings 1000 for problem zz_2871354184
sampled for problem zz_2871354184
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_1089975612
finished samples sampling for zz_1089975612
 finished run 8 for problem zz_1089975612
 start run 9 for problem zz_1089975612
   start samplings 1000 for problem zz_1089975612
sampled for problem zz_1089975612
sampled for problem zz_0277687505
finished samples sampling for zz_0277687505
 finished run 9 for problem zz_0277687505
 succesfully retrieved answer for problem {} zz_0277687505
 start working on problem zz_6878848354
 start writing answer for problem {} zz_0277687505
 problem zz_6878848354 will take can be sampled with a single run
 problem zz_6878848354 will be solved 1 times per run
 start run 0 for problem zz_6878848354
   start samplings 1000 for problem zz_6878848354
sampled for problem zz_6878848354
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f61db3256d0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f61db3256d0>
 Queue sizes: problems_to_submit = 6, answers_to_write = 0
sampled for problem zz_6016382926
finished samples sampling for zz_6016382926
 finished run 8 for problem zz_6016382926
 start run 9 for problem zz_6016382926
   start samplings 1000 for problem zz_6016382926
sampled for problem zz_6016382926
 Queue sizes: problems_to_submit = 6, answers_to_write = 0
sampled for problem zz_2260395055
finished samples sampling for zz_2260395055
 finished run 9 for problem zz_2260395055
 succesfully retrieved answer for problem {} zz_2260395055
 start working on problem zz_3413098363
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_6820111222
finished samples sampling for zz_6820111222
 finished run 3 for problem zz_6820111222
 start run 4 for problem zz_6820111222
   start samplings 1000 for problem zz_6820111222
sampled for problem zz_6820111222
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0889364291
 start writing answer for problem {} zz_6027592363
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f2b381a5760>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f2b381a5760>
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0291999630
finished samples sampling for zz_0291999630
 finished run 3 for problem zz_0291999630
 start run 4 for problem zz_0291999630
   start samplings 1000 for problem zz_0291999630
sampled for problem zz_0291999630
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_9806083889
finished samples sampling for zz_9806083889
 finished run 3 for problem zz_9806083889
 start run 4 for problem zz_9806083889
   start samplings 1000 for problem zz_9806083889
sampled for problem zz_9806083889
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_8633696827
finished samples sampling for zz_8633696827
 finished run 3 for problem zz_8633696827
 start run 4 for problem zz_8633696827
   start samplings 1000 for problem zz_8633696827
sampled for problem zz_8633696827
sampled for problem zz_1860673799
finished samples sampling for zz_1860673799
 finished run 3 for problem zz_1860673799
 start run 4 for problem zz_1860673799
   start samplings 1000 for problem zz_1860673799
sampled for problem zz_1860673799
sampled for problem zz_4496173481
finished samples sampling for zz_4496173481
 finished run 3 for problem zz_4496173481
 start run 4 for problem zz_4496173481
   start samplings 1000 for problem zz_4496173481
sampled for problem zz_4496173481
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_3984838668
finished samples sampling for zz_3984838668
 finished run 3 for problem zz_3984838668
 start run 4 for problem zz_3984838668
   start samplings 1000 for problem zz_3984838668
sampled for problem zz_3984838668
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_5683679450
finished samples sampling for zz_5683679450
 finished run 4 for problem zz_5683679450
 start run 5 for problem zz_5683679450
   start samplings 1000 for problem zz_5683679450
sampled for problem zz_5683679450
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'>
sampled for problem zz_4709661397
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_0931578977
finished samples sampling for zz_0931578977
 finished run 2 for problem zz_0931578977
 start run 3 for problem zz_0931578977
   start samplings 1000 for problem zz_0931578977
sampled for problem zz_0931578977
sampled for problem zz_4815697258
finished samples sampling for zz_4815697258
 finished run 2 for problem zz_4815697258
 start run 3 for problem zz_4815697258
   start samplings 1000 for problem zz_4815697258
sampled for problem zz_4815697258
 finished writing answer for problem {} zz_6026204315
 start writing answer for problem {} zz_5365434579
sampled for problem zz_8942337152
finished samples sampling for zz_8942337152
 finished run 2 for problem zz_8942337152
 start run 3 for problem zz_8942337152
   start samplings 1000 for problem zz_8942337152
sampled for problem zz_8942337152
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8c2c7618e0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8c2c7618e0>
sampled for problem zz_3851427014
finished samples sampling for zz_3851427014
 finished run 2 for problem zz_3851427014
 start run 3 for problem zz_3851427014
   start samplings 1000 for problem zz_3851427014
sampled for problem zz_3851427014
sampled for problem zz_8276325827
finished samples sampling for zz_8276325827
 finished run 2 for problem zz_8276325827
 start run 3 for problem zz_8276325827
   start samplings 1000 for problem zz_8276325827
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_8276325827
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_5971996237
finished samples sampling for zz_5971996237
 finished run 3 for problem zz_5971996237
 start run 4 for problem zz_5971996237
   start samplings 1000 for problem zz_5971996237
sampled for problem zz_5971996237
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_3274278151
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_5365434579
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6489818378
finished samples sampling for zz_6489818378
 finished run 3 for problem zz_6489818378
 finished writing answer for problem {} zz_9064081178
sampled for problem zz_4983060353
finished samples sampling for zz_4983060353
 finished run 3 for problem zz_4983060353
 start run 4 for problem zz_4983060353
   start samplings 1000 for problem zz_4983060353
sampled for problem zz_4983060353
sampled for problem zz_3358737269
finished samples sampling for zz_3358737269
 finished run 3 for problem zz_3358737269
 start run 4 for problem zz_3358737269
   start samplings 1000 for problem zz_3358737269
sampled for problem zz_3358737269
sampled for problem zz_6074050616
finished samples sampling for zz_6074050616
 finished run 3 for problem zz_6074050616
 start run 4 for problem zz_6074050616
   start samplings 1000 for problem zz_6074050616
sampled for problem zz_6074050616
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2791652904
finished samples sampling for zz_2791652904
 finished run 4 for problem zz_2791652904
 start run 5 for problem zz_2791652904
   start samplings 1000 for problem zz_2791652904
sampled for problem zz_2791652904
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2921244493
finished samples sampling for zz_2921244493
 finished run 4 for problem zz_2921244493
 start run 5 for problem zz_2921244493
   start samplings 1000 for problem zz_2921244493
sampled for problem zz_2921244493
sampled for problem zz_7899741822
finished samples sampling for zz_7899741822
 finished run 4 for problem zz_7899741822
 start run 5 for problem zz_7899741822
   start samplings 1000 for problem zz_7899741822
sampled for problem zz_7899741822
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2258027639
finished samples sampling for zz_2258027639
 finished run 5 for problem zz_2258027639
 start run 6 for problem zz_2258027639
   start samplings 1000 for problem zz_2258027639
sampled for problem zz_2258027639
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6577828538
finished samples sampling for zz_6577828538
 finished run 4 for problem zz_6577828538
 start run 5 for problem zz_6577828538
   start samplings 1000 for problem zz_6577828538
sampled for problem zz_6577828538
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4983060353
finished samples sampling for zz_4983060353
 finished run 4 for problem zz_4983060353
 start run 5 for problem zz_4983060353
   start samplings 1000 for problem zz_4983060353
sampled for problem zz_4983060353
sampled for problem zz_3358737269
finished samples sampling for zz_3358737269
 finished run 4 for problem zz_3358737269
 start run 5 for problem zz_3358737269
   start samplings 1000 for problem zz_3358737269
sampled for problem zz_3358737269
sampled for problem zz_6074050616
finished samples sampling for zz_6074050616
 finished run 4 for problem zz_6074050616
 start run 5 for problem zz_6074050616
   start samplings 1000 for problem zz_6074050616
sampled for problem zz_6074050616
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2791652904
finished samples sampling for zz_2791652904
 finished run 5 for problem zz_2791652904
 start run 6 for problem zz_2791652904
   start samplings 1000 for problem zz_2791652904
sampled for problem zz_2791652904
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2921244493
finished samples sampling for zz_2921244493
 finished run 5 for problem zz_2921244493
 start run 6 for problem zz_2921244493
   start samplings 1000 for problem zz_2921244493
sampled for problem zz_2921244493
sampled for problem zz_7899741822
finished samples sampling for zz_7899741822
 finished run 5 for problem zz_7899741822
 start run 6 for problem zz_7899741822
   start samplings 1000 for problem zz_7899741822
sampled for problem zz_7899741822
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2258027639
finished samples sampling for zz_2258027639
 finished run 6 for problem zz_2258027639
 start run 7 for problem zz_2258027639
   start samplings 1000 for problem zz_2258027639
sampled for problem zz_2258027639
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6577828538
finished samples sampling for zz_6577828538
 finished run 5 for problem zz_6577828538
 start run 6 for problem zz_6577828538
   start samplings 1000 for problem zz_6577828538
sampled for problem zz_6577828538
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4983060353
finished samples sampling for zz_4983060353
 finished run 5 for problem zz_4983060353
 start run 6 for problem zz_4983060353
   start samplings 1000 for problem zz_4983060353
sampled for problem zz_4983060353
sampled for problem zz_3358737269
finished samples sampling for zz_3358737269
 finished run 5 for problem zz_3358737269
 start run 6 for problem zz_3358737269
   start samplings 1000 for problem zz_3358737269
sampled for problem zz_3358737269
sampled for problem zz_6074050616
finished samples sampling for zz_6074050616
 finished run 5 for problem zz_6074050616
 start run 6 for problem zz_6074050616
   start samplings 1000 for problem zz_6074050616
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6074050616
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2791652904
finished samples sampling for zz_2791652904
 finished run 6 for problem zz_2791652904
 start run 7 for problem zz_2791652904
   start samplings 1000 for problem zz_2791652904
sampled for problem zz_2791652904
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2921244493
finished samples sampling for zz_2921244493
 finished run 6 for problem zz_2921244493
 start run 7 for problem zz_2921244493
   start samplings 1000 for problem zz_2921244493
sampled for problem zz_2921244493
sampled for problem zz_7899741822
finished samples sampling for zz_7899741822
 finished run 6 for problem zz_7899741822
 start run 7 for problem zz_7899741822
   start samplings 1000 for problem zz_7899741822
sampled for problem zz_7899741822
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2258027639
finished samples sampling for zz_2258027639
 finished run 7 for problem zz_2258027639
 start run 8 for problem zz_2258027639
   start samplings 1000 for problem zz_2258027639
sampled for problem zz_2258027639
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6577828538
finished samples sampling for zz_6577828538
 finished run 6 for problem zz_6577828538
 start run 7 for problem zz_6577828538
   start samplings 1000 for problem zz_6577828538
sampled for problem zz_6577828538
sampled for problem zz_4983060353
finished samples sampling for zz_4983060353
 finished run 6 for problem zz_4983060353
 start run 7 for problem zz_4983060353
   start samplings 1000 for problem zz_4983060353
sampled for problem zz_4983060353
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_3358737269
finished samples sampling for zz_3358737269
 finished run 6 for problem zz_3358737269
 start run 7 for problem zz_3358737269
   start samplings 1000 for problem zz_3358737269
sampled for problem zz_3358737269
sampled for problem zz_6074050616
finished samples sampling for zz_6074050616
 finished run 6 for problem zz_6074050616
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6368149696
sampled for problem zz_7350679553
finished samples sampling for zz_7350679553
 finished run 3 for problem zz_7350679553
 start run 4 for problem zz_7350679553
   start samplings 1000 for problem zz_7350679553
sampled for problem zz_7350679553
sampled for problem zz_0163190663
finished samples sampling for zz_0163190663
 finished run 3 for problem zz_0163190663
 start run 4 for problem zz_0163190663
   start samplings 1000 for problem zz_0163190663
sampled for problem zz_0163190663
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_9283730726
finished samples sampling for zz_9283730726
 finished run 4 for problem zz_9283730726
 start run 5 for problem zz_9283730726
   start samplings 1000 for problem zz_9283730726
sampled for problem zz_9283730726
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4262621135
finished samples sampling for zz_4262621135
 finished run 5 for problem zz_4262621135
 start run 6 for problem zz_4262621135
   start samplings 1000 for problem zz_4262621135
sampled for problem zz_4262621135
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0538469761
finished samples sampling for zz_0538469761
 finished run 4 for problem zz_0538469761
 start run 5 for problem zz_0538469761
   start samplings 1000 for problem zz_0538469761
sampled for problem zz_0538469761
sampled for problem zz_5744954469
finished samples sampling for zz_5744954469
 finished run 4 for problem zz_5744954469
 start run 5 for problem zz_5744954469
   start samplings 1000 for problem zz_5744954469
sampled for problem zz_5744954469
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_8884820367
finished samples sampling for zz_8884820367
 finished run 4 for problem zz_8884820367
 start run 5 for problem zz_8884820367
   start samplings 1000 for problem zz_8884820367
sampled for problem zz_8884820367
sampled for problem zz_7063111329
finished samples sampling for zz_7063111329
 finished run 4 for problem zz_7063111329
 start run 5 for problem zz_7063111329
   start samplings 1000 for problem zz_7063111329
sampled for problem zz_7063111329
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_7350679553
finished samples sampling for zz_7350679553
 finished run 4 for problem zz_7350679553
 start run 5 for problem zz_7350679553
   start samplings 1000 for problem zz_7350679553
sampled for problem zz_7350679553
sampled for problem zz_0163190663
finished samples sampling for zz_0163190663
 finished run 4 for problem zz_0163190663
 start run 5 for problem zz_0163190663
   start samplings 1000 for problem zz_0163190663
sampled for problem zz_0163190663
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_9283730726
finished samples sampling for zz_9283730726
 finished run 5 for problem zz_9283730726
 start run 6 for problem zz_9283730726
   start samplings 1000 for problem zz_9283730726
sampled for problem zz_9283730726
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4262621135
finished samples sampling for zz_4262621135
 finished run 6 for problem zz_4262621135
 start run 7 for problem zz_4262621135
   start samplings 1000 for problem zz_4262621135
sampled for problem zz_4262621135
sampled for problem zz_0538469761
finished samples sampling for zz_0538469761
 finished run 5 for problem zz_0538469761
 start run 6 for problem zz_0538469761
   start samplings 1000 for problem zz_0538469761
sampled for problem zz_0538469761
sampled for problem zz_5744954469
finished samples sampling for zz_5744954469
 finished run 5 for problem zz_5744954469
 start run 6 for problem zz_5744954469
   start samplings 1000 for problem zz_5744954469
sampled for problem zz_5744954469
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_8884820367
finished samples sampling for zz_8884820367
 finished run 5 for problem zz_8884820367
 start run 6 for problem zz_8884820367
   start samplings 1000 for problem zz_8884820367
sampled for problem zz_8884820367
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_7063111329
finished samples sampling for zz_7063111329
 finished run 5 for problem zz_7063111329
 start run 6 for problem zz_7063111329
   start samplings 1000 for problem zz_7063111329
sampled for problem zz_7063111329
sampled for problem zz_7350679553
finished samples sampling for zz_7350679553
 finished run 5 for problem zz_7350679553
 start run 6 for problem zz_7350679553
   start samplings 1000 for problem zz_7350679553
sampled for problem zz_7350679553
sampled for problem zz_0163190663
finished samples sampling for zz_0163190663
 finished run 5 for problem zz_0163190663
 start run 6 for problem zz_0163190663
   start samplings 1000 for problem zz_0163190663
sampled for problem zz_0163190663
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_9283730726
finished samples sampling for zz_9283730726
 finished run 6 for problem zz_9283730726
 start run 7 for problem zz_9283730726
   start samplings 1000 for problem zz_9283730726
sampled for problem zz_9283730726
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4262621135
finished samples sampling for zz_4262621135
 finished run 7 for problem zz_4262621135
 start run 8 for problem zz_4262621135
   start samplings 1000 for problem zz_4262621135
sampled for problem zz_4262621135
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0538469761
finished samples sampling for zz_0538469761
 finished run 6 for problem zz_0538469761
 start run 7 for problem zz_0538469761
   start samplings 1000 for problem zz_0538469761
sampled for problem zz_0538469761
sampled for problem zz_5744954469
finished samples sampling for zz_5744954469
 finished run 6 for problem zz_5744954469
 start run 7 for problem zz_5744954469
   start samplings 1000 for problem zz_5744954469
sampled for problem zz_5744954469
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_8884820367
finished samples sampling for zz_8884820367
 finished run 6 for problem zz_8884820367
 start run 7 for problem zz_8884820367
   start samplings 1000 for problem zz_8884820367
sampled for problem zz_8884820367
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_7063111329
finished samples sampling for zz_7063111329
 finished run 6 for problem zz_7063111329
 start run 7 for problem zz_7063111329
   start samplings 1000 for problem zz_7063111329
sampled for problem zz_7063111329
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_7350679553
finished samples sampling for zz_7350679553
 finished run 6 for problem zz_7350679553
 start run 7 for problem zz_7350679553
   start samplings 1000 for problem zz_7350679553
sampled for problem zz_7350679553
sampled for problem zz_0163190663
finished samples sampling for zz_0163190663
 finished run 6 for problem zz_0163190663
 start writing answer for problem {} zz_2260395055
sampled for problem zz_2239038483
finished samples sampling for zz_2239038483
 finished run 9 for problem zz_2239038483
sampled for problem zz_7146200131
finished samples sampling for zz_7146200131
 finished run 0 for problem zz_7146200131
 start run 1 for problem zz_7146200131
   start samplings 1000 for problem zz_7146200131
sampled for problem zz_7146200131
 succesfully retrieved answer for problem {} zz_2239038483
 start working on problem zz_5080149557
 problem zz_3413098363 will take can be sampled with a single run
 problem zz_3413098363 will be solved 1 times per run
sampled for problem zz_6835473743
finished samples sampling for zz_6835473743
 finished run 9 for problem zz_6835473743
 problem zz_5080149557 will take can be sampled with a single run
 problem zz_5080149557 will be solved 1 times per run
 start run 0 for problem zz_3413098363
   start samplings 1000 for problem zz_3413098363
sampled for problem zz_3413098363
 succesfully retrieved answer for problem {} zz_6835473743
 start working on problem zz_1078675606
 start run 0 for problem zz_5080149557
   start samplings 1000 for problem zz_5080149557
sampled for problem zz_5080149557
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f61e9bf3ef0>
 Queue sizes: problems_to_submit = 3, answers_to_write = 2
 problem zz_1078675606 will take can be sampled with a single run
 problem zz_1078675606 will be solved 1 times per run
 start run 0 for problem zz_1078675606
   start samplings 1000 for problem zz_1078675606
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f61e9bf3ef0>
sampled for problem zz_1078675606
 Queue sizes: problems_to_submit = 3, answers_to_write = 2
 Queue sizes: problems_to_submit = 3, answers_to_write = 2
 Queue sizes: problems_to_submit = 3, answers_to_write = 2
 Queue sizes: problems_to_submit = 3, answers_to_write = 2
sampled for problem zz_2871354184
finished samples sampling for zz_2871354184
 finished run 9 for problem zz_2871354184
 succesfully retrieved answer for problem {} zz_2871354184
 start working on problem zz_2344528541
 problem zz_2344528541 will take can be sampled with a single run
 problem zz_2344528541 will be solved 1 times per run
 start run 0 for problem zz_2344528541
   start samplings 1000 for problem zz_2344528541
sampled for problem zz_2344528541
 Queue sizes: problems_to_submit = 2, answers_to_write = 3
sampled for problem zz_1089975612
finished samples sampling for zz_1089975612
 finished run 9 for problem zz_1089975612
sampled for problem zz_6878848354
finished samples sampling for zz_6878848354
 finished run 0 for problem zz_6878848354
 start run 1 for problem zz_6878848354
   start samplings 1000 for problem zz_6878848354
sampled for problem zz_6878848354
 succesfully retrieved answer for problem {} zz_1089975612
 start working on problem zz_7476695043
 problem zz_7476695043 will take can be sampled with a single run
 problem zz_7476695043 will be solved 1 times per run
 start run 0 for problem zz_7476695043
   start samplings 1000 for problem zz_7476695043
sampled for problem zz_7476695043
 Queue sizes: problems_to_submit = 1, answers_to_write = 4
sampled for problem zz_6016382926
finished samples sampling for zz_6016382926
 finished run 9 for problem zz_6016382926
 succesfully retrieved answer for problem {} zz_6016382926
 start working on problem zz_0850550946
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 problem zz_0850550946 will take can be sampled with a single run
 problem zz_0850550946 will be solved 1 times per run
 start run 0 for problem zz_0850550946
   start samplings 1000 for problem zz_0850550946
sampled for problem zz_0850550946
sampled for problem zz_7146200131
finished samples sampling for zz_7146200131
 finished run 1 for problem zz_7146200131
 start run 2 for problem zz_7146200131
   start samplings 1000 for problem zz_7146200131
sampled for problem zz_7146200131
sampled for problem zz_3413098363
finished samples sampling for zz_3413098363
 finished run 0 for problem zz_3413098363
 start run 1 for problem zz_3413098363
   start samplings 1000 for problem zz_3413098363
sampled for problem zz_3413098363
sampled for problem zz_5080149557
finished samples sampling for zz_5080149557
 finished run 0 for problem zz_5080149557
 start run 1 for problem zz_5080149557
   start samplings 1000 for problem zz_5080149557
sampled for problem zz_5080149557
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
sampled for problem zz_1078675606
finished samples sampling for zz_1078675606
 finished run 0 for problem zz_1078675606
 start run 1 for problem zz_1078675606
   start samplings 1000 for problem zz_1078675606
sampled for problem zz_1078675606
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_2260395055
 start writing answer for problem {} zz_2239038483
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f61e894b260>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f61e894b260>
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2699010835
finished samples sampling for zz_2699010835
 finished run 7 for problem zz_2699010835
 start run 8 for problem zz_2699010835
   start samplings 1000 for problem zz_2699010835
sampled for problem zz_2699010835
sampled for problem zz_4933543679
finished samples sampling for zz_4933543679
 finished run 8 for problem zz_4933543679
 start run 9 for problem zz_4933543679
   start samplings 1000 for problem zz_4933543679
sampled for problem zz_4933543679
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6419836897
finished samples sampling for zz_6419836897
 finished run 7 for problem zz_6419836897
 start run 8 for problem zz_6419836897
   start samplings 1000 for problem zz_6419836897
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6419836897
sampled for problem zz_5205717936
finished samples sampling for zz_5205717936
 finished run 7 for problem zz_5205717936
 start run 8 for problem zz_5205717936
   start samplings 1000 for problem zz_5205717936
sampled for problem zz_5205717936
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6278981758
finished samples sampling for zz_6278981758
 finished run 7 for problem zz_6278981758
 start run 8 for problem zz_6278981758
   start samplings 1000 for problem zz_6278981758
sampled for problem zz_6278981758
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6270472886
finished samples sampling for zz_6270472886
 finished run 7 for problem zz_6270472886
 start run 8 for problem zz_6270472886
   start samplings 1000 for problem zz_6270472886
sampled for problem zz_6270472886
sampled for problem zz_7471821836
finished samples sampling for zz_7471821836
 finished run 7 for problem zz_7471821836
 start run 8 for problem zz_7471821836
   start samplings 1000 for problem zz_7471821836
sampled for problem zz_7471821836
sampled for problem zz_8721690652
finished samples sampling for zz_8721690652
 finished run 8 for problem zz_8721690652
 start run 9 for problem zz_8721690652
   start samplings 1000 for problem zz_8721690652
sampled for problem zz_8721690652
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2699010835
finished samples sampling for zz_2699010835
 finished run 8 for problem zz_2699010835
 start run 9 for problem zz_2699010835
   start samplings 1000 for problem zz_2699010835
sampled for problem zz_2699010835
sampled for problem zz_4933543679
finished samples sampling for zz_4933543679
 finished run 9 for problem zz_4933543679
 succesfully retrieved answer for problem {} zz_4933543679
 start working on problem zz_9489144589
 start writing answer for problem {} zz_4933543679
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 problem zz_9489144589 will take can be sampled with a single run
 problem zz_9489144589 will be solved 1 times per run
 start run 0 for problem zz_9489144589
   start samplings 1000 for problem zz_9489144589
sampled for problem zz_9489144589
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f6401eb83b0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f6401eb83b0>
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_6419836897
finished samples sampling for zz_6419836897
 finished run 8 for problem zz_6419836897
 start run 9 for problem zz_6419836897
   start samplings 1000 for problem zz_6419836897
sampled for problem zz_6419836897
sampled for problem zz_5205717936
finished samples sampling for zz_5205717936
 finished run 8 for problem zz_5205717936
 start run 9 for problem zz_5205717936
   start samplings 1000 for problem zz_5205717936
sampled for problem zz_5205717936
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_4933543679
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_6278981758
finished samples sampling for zz_6278981758
 finished run 8 for problem zz_6278981758
 start run 9 for problem zz_6278981758
   start samplings 1000 for problem zz_6278981758
sampled for problem zz_6278981758
sampled for problem zz_6270472886
finished samples sampling for zz_6270472886
 finished run 8 for problem zz_6270472886
 start run 9 for problem zz_6270472886
   start samplings 1000 for problem zz_6270472886
sampled for problem zz_6270472886
sampled for problem zz_7471821836
finished samples sampling for zz_7471821836
 finished run 8 for problem zz_7471821836
 start run 9 for problem zz_7471821836
   start samplings 1000 for problem zz_7471821836
sampled for problem zz_7471821836
sampled for problem zz_8721690652
finished samples sampling for zz_8721690652
 finished run 9 for problem zz_8721690652
 succesfully retrieved answer for problem {} zz_8721690652
 start working on problem zz_3918938749
 start writing answer for problem {} zz_8721690652
elif concurrent.futures.thread.ThreadPoolExecutor Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6600677120
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0959642795
finished samples sampling for zz_0959642795
 finished run 4 for problem zz_0959642795
 start run 5 for problem zz_0959642795
   start samplings 1000 for problem zz_0959642795
sampled for problem zz_0959642795
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2720660293
finished samples sampling for zz_2720660293
 finished run 4 for problem zz_2720660293
 start run 5 for problem zz_2720660293
   start samplings 1000 for problem zz_2720660293
sampled for problem zz_2720660293
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6774697119
finished samples sampling for zz_6774697119
 finished run 4 for problem zz_6774697119
 start run 5 for problem zz_6774697119
   start samplings 1000 for problem zz_6774697119
sampled for problem zz_6774697119
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_9471019571
finished samples sampling for zz_9471019571
 finished run 4 for problem zz_9471019571
 start run 5 for problem zz_9471019571
   start samplings 1000 for problem zz_9471019571
sampled for problem zz_9471019571
sampled for problem zz_0317017085
finished samples sampling for zz_0317017085
 finished run 4 for problem zz_0317017085
 start run 5 for problem zz_0317017085
   start samplings 1000 for problem zz_0317017085
sampled for problem zz_0317017085
sampled for problem zz_5452407354
finished samples sampling for zz_5452407354
 finished run 4 for problem zz_5452407354
 start run 5 for problem zz_5452407354
   start samplings 1000 for problem zz_5452407354
sampled for problem zz_5452407354
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0255343551
finished samples sampling for zz_0255343551
 finished run 4 for problem zz_0255343551
 start run 5 for problem zz_0255343551
   start samplings 1000 for problem zz_0255343551
sampled for problem zz_0255343551
sampled for problem zz_4056127159
finished samples sampling for zz_4056127159
 finished run 5 for problem zz_4056127159
 start run 6 for problem zz_4056127159
   start samplings 1000 for problem zz_4056127159
sampled for problem zz_4056127159
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0959642795
finished samples sampling for zz_0959642795
 finished run 5 for problem zz_0959642795
 start run 6 for problem zz_0959642795
   start samplings 1000 for problem zz_0959642795
sampled for problem zz_0959642795
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2720660293
finished samples sampling for zz_2720660293
 finished run 5 for problem zz_2720660293
 start run 6 for problem zz_2720660293
   start samplings 1000 for problem zz_2720660293
sampled for problem zz_2720660293
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6774697119
finished samples sampling for zz_6774697119
 finished run 5 for problem zz_6774697119
 start run 6 for problem zz_6774697119
   start samplings 1000 for problem zz_6774697119
sampled for problem zz_6774697119
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_9471019571
finished samples sampling for zz_9471019571
 finished run 5 for problem zz_9471019571
 start run 6 for problem zz_9471019571
   start samplings 1000 for problem zz_9471019571
sampled for problem zz_9471019571
sampled for problem zz_0317017085
finished samples sampling for zz_0317017085
 finished run 5 for problem zz_0317017085
 start run 6 for problem zz_0317017085
   start samplings 1000 for problem zz_0317017085
sampled for problem zz_0317017085
sampled for problem zz_5452407354
finished samples sampling for zz_5452407354
 finished run 5 for problem zz_5452407354
 start run 6 for problem zz_5452407354
   start samplings 1000 for problem zz_5452407354
sampled for problem zz_5452407354
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0255343551
finished samples sampling for zz_0255343551
 finished run 5 for problem zz_0255343551
 start run 6 for problem zz_0255343551
   start samplings 1000 for problem zz_0255343551
sampled for problem zz_0255343551
sampled for problem zz_4056127159
finished samples sampling for zz_4056127159
 finished run 6 for problem zz_4056127159
 start run 7 for problem zz_4056127159
   start samplings 1000 for problem zz_4056127159
sampled for problem zz_4056127159
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0959642795
finished samples sampling for zz_0959642795
 finished run 6 for problem zz_0959642795
 start run 7 for problem zz_0959642795
   start samplings 1000 for problem zz_0959642795
sampled for problem zz_0959642795
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2720660293
finished samples sampling for zz_2720660293
 finished run 6 for problem zz_2720660293
 start run 7 for problem zz_2720660293
   start samplings 1000 for problem zz_2720660293
sampled for problem zz_2720660293
sampled for problem zz_6774697119
finished samples sampling for zz_6774697119
 finished run 6 for problem zz_6774697119
 start run 7 for problem zz_6774697119
   start samplings 1000 for problem zz_6774697119
sampled for problem zz_6774697119
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_9471019571
finished samples sampling for zz_9471019571
 finished run 6 for problem zz_9471019571
 start run 7 for problem zz_9471019571
   start samplings 1000 for problem zz_9471019571
sampled for problem zz_9471019571
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0317017085
finished samples sampling for zz_0317017085
 finished run 6 for problem zz_0317017085
 start run 7 for problem zz_0317017085
   start samplings 1000 for problem zz_0317017085
sampled for problem zz_0317017085
sampled for problem zz_0255343551
finished samples sampling for zz_0255343551
 finished run 6 for problem zz_0255343551
 start run 7 for problem zz_0255343551
   start samplings 1000 for problem zz_0255343551
sampled for problem zz_0255343551
sampled for problem zz_5452407354
finished samples sampling for zz_5452407354
 finished run 6 for problem zz_5452407354
 start run 7 for problem zz_5452407354
   start samplings 1000 for problem zz_5452407354
sampled for problem zz_5452407354
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0277687505
 start writing answer for problem {} zz_6835473743
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f61dacf5040>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f61dacf5040>
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_2344528541
finished samples sampling for zz_2344528541
 finished run 0 for problem zz_2344528541
 start run 1 for problem zz_2344528541
   start samplings 1000 for problem zz_2344528541
sampled for problem zz_2344528541
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_6878848354
finished samples sampling for zz_6878848354
 finished run 1 for problem zz_6878848354
 start run 2 for problem zz_6878848354
   start samplings 1000 for problem zz_6878848354
sampled for problem zz_6878848354
sampled for problem zz_7476695043
finished samples sampling for zz_7476695043
 finished run 0 for problem zz_7476695043
 start run 1 for problem zz_7476695043
   start samplings 1000 for problem zz_7476695043
sampled for problem zz_7476695043
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_0850550946
finished samples sampling for zz_0850550946
 finished run 0 for problem zz_0850550946
 start run 1 for problem zz_0850550946
   start samplings 1000 for problem zz_0850550946
sampled for problem zz_0850550946
sampled for problem zz_7146200131
finished samples sampling for zz_7146200131
 finished run 2 for problem zz_7146200131
 start run 3 for problem zz_7146200131
   start samplings 1000 for problem zz_7146200131
sampled for problem zz_7146200131
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_3413098363
finished samples sampling for zz_3413098363
 finished run 1 for problem zz_3413098363
 start run 2 for problem zz_3413098363
   start samplings 1000 for problem zz_3413098363
sampled for problem zz_3413098363
sampled for problem zz_5080149557
finished samples sampling for zz_5080149557
 finished run 1 for problem zz_5080149557
 start run 2 for problem zz_5080149557
   start samplings 1000 for problem zz_5080149557
sampled for problem zz_5080149557
sampled for problem zz_1078675606
finished samples sampling for zz_1078675606
 finished run 1 for problem zz_1078675606
 start run 2 for problem zz_1078675606
   start samplings 1000 for problem zz_1078675606
sampled for problem zz_1078675606
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'>
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8290171268
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_3511504764
finished samples sampling for zz_3511504764
 finished run 4 for problem zz_3511504764
 start run 5 for problem zz_3511504764
   start samplings 1000 for problem zz_3511504764
sampled for problem zz_3511504764
sampled for problem zz_2676805068
finished samples sampling for zz_2676805068
 finished run 3 for problem zz_2676805068
 start run 4 for problem zz_2676805068
   start samplings 1000 for problem zz_2676805068
sampled for problem zz_2676805068
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0893645049
finished samples sampling for zz_0893645049
 finished run 4 for problem zz_0893645049
 start run 5 for problem zz_0893645049
   start samplings 1000 for problem zz_0893645049
sampled for problem zz_0893645049
sampled for problem zz_4167523720
finished samples sampling for zz_4167523720
 finished run 4 for problem zz_4167523720
 start run 5 for problem zz_4167523720
   start samplings 1000 for problem zz_4167523720
sampled for problem zz_4167523720
sampled for problem zz_4971361908
finished samples sampling for zz_4971361908
 finished run 4 for problem zz_4971361908
 start run 5 for problem zz_4971361908
   start samplings 1000 for problem zz_4971361908
sampled for problem zz_4971361908
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_3527907281
finished samples sampling for zz_3527907281
 finished run 4 for problem zz_3527907281
 start run 5 for problem zz_3527907281
   start samplings 1000 for problem zz_3527907281
sampled for problem zz_3527907281
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0534179516
finished samples sampling for zz_0534179516
 finished run 4 for problem zz_0534179516
 start run 5 for problem zz_0534179516
   start samplings 1000 for problem zz_0534179516
sampled for problem zz_0534179516
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_3231454862
finished samples sampling for zz_3231454862
 finished run 4 for problem zz_3231454862
 start run 5 for problem zz_3231454862
   start samplings 1000 for problem zz_3231454862
sampled for problem zz_3231454862
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_3511504764
finished samples sampling for zz_3511504764
 finished run 5 for problem zz_3511504764
 start run 6 for problem zz_3511504764
   start samplings 1000 for problem zz_3511504764
sampled for problem zz_3511504764
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2676805068
finished samples sampling for zz_2676805068
 finished run 4 for problem zz_2676805068
 start run 5 for problem zz_2676805068
   start samplings 1000 for problem zz_2676805068
sampled for problem zz_2676805068
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0893645049
finished samples sampling for zz_0893645049
 finished run 5 for problem zz_0893645049
 start run 6 for problem zz_0893645049
   start samplings 1000 for problem zz_0893645049
sampled for problem zz_0893645049
sampled for problem zz_4167523720
finished samples sampling for zz_4167523720
 finished run 5 for problem zz_4167523720
 start run 6 for problem zz_4167523720
   start samplings 1000 for problem zz_4167523720
sampled for problem zz_4167523720
sampled for problem zz_4971361908
finished samples sampling for zz_4971361908
 finished run 5 for problem zz_4971361908
 start run 6 for problem zz_4971361908
   start samplings 1000 for problem zz_4971361908
sampled for problem zz_4971361908
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_3527907281
finished samples sampling for zz_3527907281
 finished run 5 for problem zz_3527907281
 start run 6 for problem zz_3527907281
   start samplings 1000 for problem zz_3527907281
sampled for problem zz_3527907281
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_3231454862
finished samples sampling for zz_3231454862
 finished run 5 for problem zz_3231454862
 start run 6 for problem zz_3231454862
   start samplings 1000 for problem zz_3231454862
sampled for problem zz_3231454862
sampled for problem zz_0534179516
finished samples sampling for zz_0534179516
 finished run 5 for problem zz_0534179516
 start run 6 for problem zz_0534179516
   start samplings 1000 for problem zz_0534179516
sampled for problem zz_0534179516
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_3511504764
finished samples sampling for zz_3511504764
 finished run 6 for problem zz_3511504764
 start run 7 for problem zz_3511504764
   start samplings 1000 for problem zz_3511504764
sampled for problem zz_3511504764
sampled for problem zz_2676805068
finished samples sampling for zz_2676805068
 finished run 5 for problem zz_2676805068
 start run 6 for problem zz_2676805068
   start samplings 1000 for problem zz_2676805068
sampled for problem zz_2676805068
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0893645049
finished samples sampling for zz_0893645049
 finished run 6 for problem zz_0893645049
 start run 7 for problem zz_0893645049
   start samplings 1000 for problem zz_0893645049
sampled for problem zz_0893645049
sampled for problem zz_4167523720
finished samples sampling for zz_4167523720
 finished run 6 for problem zz_4167523720
 start run 7 for problem zz_4167523720
   start samplings 1000 for problem zz_4167523720
sampled for problem zz_4167523720
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4971361908
finished samples sampling for zz_4971361908
 finished run 6 for problem zz_4971361908
 start run 7 for problem zz_4971361908
   start samplings 1000 for problem zz_4971361908
sampled for problem zz_4971361908
sampled for problem zz_3527907281
finished samples sampling for zz_3527907281
 finished run 6 for problem zz_3527907281
 start run 7 for problem zz_3527907281
   start samplings 1000 for problem zz_3527907281
sampled for problem zz_3527907281
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_3231454862
finished samples sampling for zz_3231454862
 finished run 6 for problem zz_3231454862
 start run 7 for problem zz_3231454862
   start samplings 1000 for problem zz_3231454862
 start run 7 for problem zz_6074050616
   start samplings 1000 for problem zz_6074050616
sampled for problem zz_6074050616
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2791652904
finished samples sampling for zz_2791652904
 finished run 7 for problem zz_2791652904
 start run 8 for problem zz_2791652904
   start samplings 1000 for problem zz_2791652904
sampled for problem zz_2791652904
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2921244493
finished samples sampling for zz_2921244493
 finished run 7 for problem zz_2921244493
 start run 8 for problem zz_2921244493
   start samplings 1000 for problem zz_2921244493
sampled for problem zz_2921244493
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_7899741822
finished samples sampling for zz_7899741822
 finished run 7 for problem zz_7899741822
 start run 8 for problem zz_7899741822
   start samplings 1000 for problem zz_7899741822
sampled for problem zz_7899741822
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2258027639
finished samples sampling for zz_2258027639
 finished run 8 for problem zz_2258027639
 start run 9 for problem zz_2258027639
   start samplings 1000 for problem zz_2258027639
sampled for problem zz_2258027639
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6577828538
finished samples sampling for zz_6577828538
 finished run 7 for problem zz_6577828538
 start run 8 for problem zz_6577828538
   start samplings 1000 for problem zz_6577828538
sampled for problem zz_6577828538
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_3358737269
finished samples sampling for zz_3358737269
 finished run 7 for problem zz_3358737269
 start run 8 for problem zz_3358737269
   start samplings 1000 for problem zz_3358737269
sampled for problem zz_3358737269
sampled for problem zz_4983060353
finished samples sampling for zz_4983060353
 finished run 7 for problem zz_4983060353
 start run 8 for problem zz_4983060353
   start samplings 1000 for problem zz_4983060353
sampled for problem zz_4983060353
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6074050616
finished samples sampling for zz_6074050616
 finished run 7 for problem zz_6074050616
 start run 8 for problem zz_6074050616
   start samplings 1000 for problem zz_6074050616
sampled for problem zz_6074050616
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2791652904
finished samples sampling for zz_2791652904
 finished run 8 for problem zz_2791652904
 start run 9 for problem zz_2791652904
   start samplings 1000 for problem zz_2791652904
sampled for problem zz_2791652904
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2921244493
finished samples sampling for zz_2921244493
 finished run 8 for problem zz_2921244493
 start run 9 for problem zz_2921244493
   start samplings 1000 for problem zz_2921244493
sampled for problem zz_2921244493
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_7899741822
finished samples sampling for zz_7899741822
 finished run 8 for problem zz_7899741822
 start run 9 for problem zz_7899741822
   start samplings 1000 for problem zz_7899741822
sampled for problem zz_7899741822
sampled for problem zz_2258027639
finished samples sampling for zz_2258027639
 finished run 9 for problem zz_2258027639
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 succesfully retrieved answer for problem {} zz_2258027639
 start working on problem zz_9585089572
 start writing answer for problem {} zz_2258027639
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f984c5d60f0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f984c5d60f0>
 problem zz_9585089572 will take can be sampled with a single run
 problem zz_9585089572 will be solved 1 times per run
 start run 0 for problem zz_9585089572
   start samplings 1000 for problem zz_9585089572
sampled for problem zz_9585089572
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_6577828538
finished samples sampling for zz_6577828538
 finished run 8 for problem zz_6577828538
 start run 9 for problem zz_6577828538
   start samplings 1000 for problem zz_6577828538
sampled for problem zz_6577828538
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_3358737269
finished samples sampling for zz_3358737269
 finished run 8 for problem zz_3358737269
 start run 9 for problem zz_3358737269
   start samplings 1000 for problem zz_3358737269
sampled for problem zz_3358737269
sampled for problem zz_4983060353
finished samples sampling for zz_4983060353
 finished run 8 for problem zz_4983060353
 start run 9 for problem zz_4983060353
   start samplings 1000 for problem zz_4983060353
sampled for problem zz_4983060353
sampled for problem zz_6074050616
finished samples sampling for zz_6074050616
 finished run 8 for problem zz_6074050616
 start run 9 for problem zz_6074050616
   start samplings 1000 for problem zz_6074050616
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_6074050616
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)]) Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6027592363
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0690618443
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6820111222
finished samples sampling for zz_6820111222
 finished run 4 for problem zz_6820111222
 start run 5 for problem zz_6820111222
   start samplings 1000 for problem zz_6820111222
sampled for problem zz_6820111222
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0291999630
finished samples sampling for zz_0291999630
 finished run 4 for problem zz_0291999630
 start run 5 for problem zz_0291999630
   start samplings 1000 for problem zz_0291999630
sampled for problem zz_0291999630
sampled for problem zz_9806083889
finished samples sampling for zz_9806083889
 finished run 4 for problem zz_9806083889
 start run 5 for problem zz_9806083889
   start samplings 1000 for problem zz_9806083889
sampled for problem zz_9806083889
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_8633696827
finished samples sampling for zz_8633696827
 finished run 4 for problem zz_8633696827
 start run 5 for problem zz_8633696827
   start samplings 1000 for problem zz_8633696827
sampled for problem zz_8633696827
sampled for problem zz_1860673799
finished samples sampling for zz_1860673799
 finished run 4 for problem zz_1860673799
 start run 5 for problem zz_1860673799
   start samplings 1000 for problem zz_1860673799
sampled for problem zz_1860673799
sampled for problem zz_4496173481
finished samples sampling for zz_4496173481
 finished run 4 for problem zz_4496173481
 start run 5 for problem zz_4496173481
   start samplings 1000 for problem zz_4496173481
sampled for problem zz_4496173481
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_3984838668
finished samples sampling for zz_3984838668
 finished run 4 for problem zz_3984838668
 start run 5 for problem zz_3984838668
   start samplings 1000 for problem zz_3984838668
sampled for problem zz_3984838668
sampled for problem zz_5683679450
finished samples sampling for zz_5683679450
 finished run 5 for problem zz_5683679450
 start run 6 for problem zz_5683679450
   start samplings 1000 for problem zz_5683679450
sampled for problem zz_5683679450
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6820111222
finished samples sampling for zz_6820111222
 finished run 5 for problem zz_6820111222
 start run 6 for problem zz_6820111222
   start samplings 1000 for problem zz_6820111222
sampled for problem zz_6820111222
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0291999630
finished samples sampling for zz_0291999630
 finished run 5 for problem zz_0291999630
 start run 6 for problem zz_0291999630
   start samplings 1000 for problem zz_0291999630
sampled for problem zz_0291999630
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_9806083889
finished samples sampling for zz_9806083889
 finished run 5 for problem zz_9806083889
 start run 6 for problem zz_9806083889
   start samplings 1000 for problem zz_9806083889
sampled for problem zz_9806083889
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_8633696827
finished samples sampling for zz_8633696827
 finished run 5 for problem zz_8633696827
 start run 6 for problem zz_8633696827
   start samplings 1000 for problem zz_8633696827
sampled for problem zz_8633696827
sampled for problem zz_1860673799
finished samples sampling for zz_1860673799
 finished run 5 for problem zz_1860673799
 start run 6 for problem zz_1860673799
   start samplings 1000 for problem zz_1860673799
sampled for problem zz_1860673799
sampled for problem zz_4496173481
finished samples sampling for zz_4496173481
 finished run 5 for problem zz_4496173481
 start run 6 for problem zz_4496173481
   start samplings 1000 for problem zz_4496173481
sampled for problem zz_4496173481
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_3984838668
finished samples sampling for zz_3984838668
 finished run 5 for problem zz_3984838668
 start run 6 for problem zz_3984838668
   start samplings 1000 for problem zz_3984838668
sampled for problem zz_3984838668
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_5683679450
finished samples sampling for zz_5683679450
 finished run 6 for problem zz_5683679450
 start run 7 for problem zz_5683679450
   start samplings 1000 for problem zz_5683679450
sampled for problem zz_5683679450
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6820111222
finished samples sampling for zz_6820111222
 finished run 6 for problem zz_6820111222
 start run 7 for problem zz_6820111222
   start samplings 1000 for problem zz_6820111222
sampled for problem zz_6820111222
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0291999630
finished samples sampling for zz_0291999630
 finished run 6 for problem zz_0291999630
 start run 7 for problem zz_0291999630
   start samplings 1000 for problem zz_0291999630
sampled for problem zz_0291999630
sampled for problem zz_9806083889
finished samples sampling for zz_9806083889
 finished run 6 for problem zz_9806083889
 start run 7 for problem zz_9806083889
   start samplings 1000 for problem zz_9806083889
sampled for problem zz_9806083889
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_8633696827
finished samples sampling for zz_8633696827
 finished run 6 for problem zz_8633696827
 start run 7 for problem zz_8633696827
   start samplings 1000 for problem zz_8633696827
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f64c8707f50>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f64c8707f50>
 Queue sizes: problems_to_submit = 6, answers_to_write = 0
 problem zz_3918938749 will take can be sampled with a single run
 problem zz_3918938749 will be solved 1 times per run
 start run 0 for problem zz_3918938749
   start samplings 1000 for problem zz_3918938749
sampled for problem zz_3918938749
 Queue sizes: problems_to_submit = 6, answers_to_write = 0
 Queue sizes: problems_to_submit = 6, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8721690652
 Queue sizes: problems_to_submit = 6, answers_to_write = 0
sampled for problem zz_2699010835
finished samples sampling for zz_2699010835
 finished run 9 for problem zz_2699010835
 succesfully retrieved answer for problem {} zz_2699010835
 start working on problem zz_2654810283
 start writing answer for problem {} zz_2699010835
 Queue sizes: problems_to_submit = 5, answers_to_write = 0
 problem zz_2654810283 will take can be sampled with a single run
 problem zz_2654810283 will be solved 1 times per run
 start run 0 for problem zz_2654810283
   start samplings 1000 for problem zz_2654810283
sampled for problem zz_2654810283
sampled for problem zz_9489144589
finished samples sampling for zz_9489144589
 finished run 0 for problem zz_9489144589
 start run 1 for problem zz_9489144589
   start samplings 1000 for problem zz_9489144589
sampled for problem zz_9489144589
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f6620599400>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f6620599400>
sampled for problem zz_5205717936
finished samples sampling for zz_5205717936
 finished run 9 for problem zz_5205717936
sampled for problem zz_6419836897
finished samples sampling for zz_6419836897
 finished run 9 for problem zz_6419836897
 succesfully retrieved answer for problem {} zz_5205717936
 start working on problem zz_2068306658
 start writing answer for problem {} zz_5205717936
 succesfully retrieved answer for problem {} zz_6419836897
 start working on problem zz_4526454422
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f6408e8c470>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f6408e8c470>
 Queue sizes: problems_to_submit = 3, answers_to_write = 1
 problem zz_2068306658 will take can be sampled with a single run
 problem zz_2068306658 will be solved 1 times per run
 problem zz_4526454422 will take can be sampled with a single run
 problem zz_4526454422 will be solved 1 times per run
 start run 0 for problem zz_2068306658
   start samplings 1000 for problem zz_2068306658
sampled for problem zz_2068306658
 start run 0 for problem zz_4526454422
   start samplings 1000 for problem zz_4526454422
sampled for problem zz_4526454422
 Queue sizes: problems_to_submit = 3, answers_to_write = 1
 Queue sizes: problems_to_submit = 3, answers_to_write = 1
sampled for problem zz_6278981758
finished samples sampling for zz_6278981758
 finished run 9 for problem zz_6278981758
 succesfully retrieved answer for problem {} zz_6278981758
 start working on problem zz_5004330110
 problem zz_5004330110 will take can be sampled with a single run
 problem zz_5004330110 will be solved 1 times per run
 start run 0 for problem zz_5004330110
   start samplings 1000 for problem zz_5004330110
sampled for problem zz_5004330110
sampled for problem zz_6270472886
finished samples sampling for zz_6270472886
 finished run 9 for problem zz_6270472886
 succesfully retrieved answer for problem {} zz_6270472886
 start working on problem zz_0802311939
 Queue sizes: problems_to_submit = 1, answers_to_write = 3
 problem zz_0802311939 will take can be sampled with a single run
 problem zz_0802311939 will be solved 1 times per run
 start run 0 for problem zz_0802311939
   start samplings 1000 for problem zz_0802311939
sampled for problem zz_0802311939
sampled for problem zz_7471821836
finished samples sampling for zz_7471821836
 finished run 9 for problem zz_7471821836
 succesfully retrieved answer for problem {} zz_7471821836
 start working on problem zz_8746424212
 problem zz_8746424212 will take can be sampled with a single run
 problem zz_8746424212 will be solved 1 times per run
 start run 0 for problem zz_8746424212
   start samplings 1000 for problem zz_8746424212
sampled for problem zz_8746424212
sampled for problem zz_3918938749
finished samples sampling for zz_3918938749
 finished run 0 for problem zz_3918938749
 start run 1 for problem zz_3918938749
   start samplings 1000 for problem zz_3918938749
sampled for problem zz_3918938749
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4 Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6835473743
 start writing answer for problem {} zz_2871354184
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f61da8eef00>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f61da8eef00>
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_2239038483
 start writing answer for problem {} zz_1089975612
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f60a1dd0050>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f60a1dd0050>
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_2344528541
finished samples sampling for zz_2344528541
 finished run 1 for problem zz_2344528541
 start run 2 for problem zz_2344528541
   start samplings 1000 for problem zz_2344528541
sampled for problem zz_2344528541
sampled for problem zz_6878848354
finished samples sampling for zz_6878848354
 finished run 2 for problem zz_6878848354
 start run 3 for problem zz_6878848354
   start samplings 1000 for problem zz_6878848354
sampled for problem zz_6878848354
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_7476695043
finished samples sampling for zz_7476695043
 finished run 1 for problem zz_7476695043
 start run 2 for problem zz_7476695043
   start samplings 1000 for problem zz_7476695043
sampled for problem zz_7476695043
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_0850550946
finished samples sampling for zz_0850550946
 finished run 1 for problem zz_0850550946
 start run 2 for problem zz_0850550946
   start samplings 1000 for problem zz_0850550946
sampled for problem zz_0850550946
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_7146200131
finished samples sampling for zz_7146200131
 finished run 3 for problem zz_7146200131
 start run 4 for problem zz_7146200131
   start samplings 1000 for problem zz_7146200131
sampled for problem zz_7146200131
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_3413098363
finished samples sampling for zz_3413098363
 finished run 2 for problem zz_3413098363
 start run 3 for problem zz_3413098363
   start samplings 1000 for problem zz_3413098363
sampled for problem zz_3413098363
sampled for problem zz_5080149557
finished samples sampling for zz_5080149557
 finished run 2 for problem zz_5080149557
 start run 3 for problem zz_5080149557
   start samplings 1000 for problem zz_5080149557
sampled for problem zz_5080149557
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_1078675606
finished samples sampling for zz_1078675606
 finished run 2 for problem zz_1078675606
 start run 3 for problem zz_1078675606
   start samplings 1000 for problem zz_1078675606
sampled for problem zz_1078675606
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 start run 7 for problem zz_0163190663
   start samplings 1000 for problem zz_0163190663
sampled for problem zz_0163190663
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_9283730726
finished samples sampling for zz_9283730726
 finished run 7 for problem zz_9283730726
 start run 8 for problem zz_9283730726
   start samplings 1000 for problem zz_9283730726
sampled for problem zz_9283730726
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4262621135
finished samples sampling for zz_4262621135
 finished run 8 for problem zz_4262621135
 start run 9 for problem zz_4262621135
   start samplings 1000 for problem zz_4262621135
sampled for problem zz_4262621135
sampled for problem zz_0538469761
finished samples sampling for zz_0538469761
 finished run 7 for problem zz_0538469761
 start run 8 for problem zz_0538469761
   start samplings 1000 for problem zz_0538469761
sampled for problem zz_0538469761
sampled for problem zz_5744954469
finished samples sampling for zz_5744954469
 finished run 7 for problem zz_5744954469
 start run 8 for problem zz_5744954469
   start samplings 1000 for problem zz_5744954469
sampled for problem zz_5744954469
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_8884820367
finished samples sampling for zz_8884820367
 finished run 7 for problem zz_8884820367
 start run 8 for problem zz_8884820367
   start samplings 1000 for problem zz_8884820367
sampled for problem zz_8884820367
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_7063111329
finished samples sampling for zz_7063111329
 finished run 7 for problem zz_7063111329
 start run 8 for problem zz_7063111329
   start samplings 1000 for problem zz_7063111329
sampled for problem zz_7063111329
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_7350679553
finished samples sampling for zz_7350679553
 finished run 7 for problem zz_7350679553
 start run 8 for problem zz_7350679553
   start samplings 1000 for problem zz_7350679553
sampled for problem zz_7350679553
sampled for problem zz_0163190663
finished samples sampling for zz_0163190663
 finished run 7 for problem zz_0163190663
 start run 8 for problem zz_0163190663
   start samplings 1000 for problem zz_0163190663
sampled for problem zz_0163190663
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_9283730726
finished samples sampling for zz_9283730726
 finished run 8 for problem zz_9283730726
 start run 9 for problem zz_9283730726
   start samplings 1000 for problem zz_9283730726
sampled for problem zz_9283730726
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4262621135
finished samples sampling for zz_4262621135
 finished run 9 for problem zz_4262621135
 succesfully retrieved answer for problem {} zz_4262621135
 start working on problem zz_3591442681
 start writing answer for problem {} zz_4262621135
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fef18314c80>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fef18314c80>
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_5744954469
finished samples sampling for zz_5744954469
 finished run 8 for problem zz_5744954469
 start run 9 for problem zz_5744954469
   start samplings 1000 for problem zz_5744954469
sampled for problem zz_5744954469
 problem zz_3591442681 will take can be sampled with a single run
 problem zz_3591442681 will be solved 1 times per run
sampled for problem zz_0538469761
finished samples sampling for zz_0538469761
 finished run 8 for problem zz_0538469761
 start run 9 for problem zz_0538469761
   start samplings 1000 for problem zz_0538469761
sampled for problem zz_0538469761
 start run 0 for problem zz_3591442681
   start samplings 1000 for problem zz_3591442681
sampled for problem zz_3591442681
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_8884820367
finished samples sampling for zz_8884820367
 finished run 8 for problem zz_8884820367
 start run 9 for problem zz_8884820367
   start samplings 1000 for problem zz_8884820367
sampled for problem zz_8884820367
sampled for problem zz_7063111329
finished samples sampling for zz_7063111329
 finished run 8 for problem zz_7063111329
 start run 9 for problem zz_7063111329
   start samplings 1000 for problem zz_7063111329
sampled for problem zz_7063111329
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_4262621135
sampled for problem zz_7350679553
finished samples sampling for zz_7350679553
 finished run 8 for problem zz_7350679553
 start run 9 for problem zz_7350679553
   start samplings 1000 for problem zz_7350679553
sampled for problem zz_7350679553
 start run 4 for problem zz_6489818378
   start samplings 1000 for problem zz_6489818378
sampled for problem zz_6489818378
sampled for problem zz_4709661397
finished samples sampling for zz_4709661397
 finished run 3 for problem zz_4709661397
 start run 4 for problem zz_4709661397
   start samplings 1000 for problem zz_4709661397
sampled for problem zz_4709661397
sampled for problem zz_0931578977
finished samples sampling for zz_0931578977
 finished run 3 for problem zz_0931578977
 start run 4 for problem zz_0931578977
   start samplings 1000 for problem zz_0931578977
sampled for problem zz_0931578977
sampled for problem zz_4815697258
finished samples sampling for zz_4815697258
 finished run 3 for problem zz_4815697258
 start run 4 for problem zz_4815697258
   start samplings 1000 for problem zz_4815697258
sampled for problem zz_4815697258
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_8942337152
finished samples sampling for zz_8942337152
 finished run 3 for problem zz_8942337152
 start run 4 for problem zz_8942337152
   start samplings 1000 for problem zz_8942337152
sampled for problem zz_8942337152
sampled for problem zz_3851427014
finished samples sampling for zz_3851427014
 finished run 3 for problem zz_3851427014
 start run 4 for problem zz_3851427014
   start samplings 1000 for problem zz_3851427014
sampled for problem zz_3851427014
sampled for problem zz_8276325827
finished samples sampling for zz_8276325827
 finished run 3 for problem zz_8276325827
 start run 4 for problem zz_8276325827
   start samplings 1000 for problem zz_8276325827
sampled for problem zz_8276325827
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_5971996237
finished samples sampling for zz_5971996237
 finished run 4 for problem zz_5971996237
 start run 5 for problem zz_5971996237
   start samplings 1000 for problem zz_5971996237
sampled for problem zz_5971996237
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6489818378
finished samples sampling for zz_6489818378
 finished run 4 for problem zz_6489818378
 start run 5 for problem zz_6489818378
   start samplings 1000 for problem zz_6489818378
sampled for problem zz_6489818378
sampled for problem zz_4815697258
finished samples sampling for zz_4815697258
 finished run 4 for problem zz_4815697258
 start run 5 for problem zz_4815697258
   start samplings 1000 for problem zz_4815697258
sampled for problem zz_4815697258
sampled for problem zz_8942337152
finished samples sampling for zz_8942337152
 finished run 4 for problem zz_8942337152
 start run 5 for problem zz_8942337152
   start samplings 1000 for problem zz_8942337152
sampled for problem zz_8942337152
sampled for problem zz_4709661397
finished samples sampling for zz_4709661397
 finished run 4 for problem zz_4709661397
 start run 5 for problem zz_4709661397
   start samplings 1000 for problem zz_4709661397
sampled for problem zz_4709661397
sampled for problem zz_0931578977
finished samples sampling for zz_0931578977
 finished run 4 for problem zz_0931578977
 start run 5 for problem zz_0931578977
   start samplings 1000 for problem zz_0931578977
sampled for problem zz_0931578977
sampled for problem zz_3851427014
finished samples sampling for zz_3851427014
 finished run 4 for problem zz_3851427014
 start run 5 for problem zz_3851427014
   start samplings 1000 for problem zz_3851427014
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_3851427014
sampled for problem zz_8276325827
finished samples sampling for zz_8276325827
 finished run 4 for problem zz_8276325827
 start run 5 for problem zz_8276325827
   start samplings 1000 for problem zz_8276325827
sampled for problem zz_8276325827
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_5971996237
finished samples sampling for zz_5971996237
 finished run 5 for problem zz_5971996237
 start run 6 for problem zz_5971996237
   start samplings 1000 for problem zz_5971996237
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_5971996237
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6489818378
finished samples sampling for zz_6489818378
 finished run 5 for problem zz_6489818378
 start run 6 for problem zz_6489818378
   start samplings 1000 for problem zz_6489818378
sampled for problem zz_6489818378
sampled for problem zz_4815697258
finished samples sampling for zz_4815697258
 finished run 5 for problem zz_4815697258
 start run 6 for problem zz_4815697258
   start samplings 1000 for problem zz_4815697258
sampled for problem zz_4815697258
sampled for problem zz_8942337152
finished samples sampling for zz_8942337152
 finished run 5 for problem zz_8942337152
 start run 6 for problem zz_8942337152
   start samplings 1000 for problem zz_8942337152
sampled for problem zz_8942337152
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4709661397
finished samples sampling for zz_4709661397
 finished run 5 for problem zz_4709661397
 start run 6 for problem zz_4709661397
   start samplings 1000 for problem zz_4709661397
sampled for problem zz_4709661397
sampled for problem zz_0931578977
finished samples sampling for zz_0931578977
 finished run 5 for problem zz_0931578977
 start run 6 for problem zz_0931578977
   start samplings 1000 for problem zz_0931578977
sampled for problem zz_0931578977
sampled for problem zz_3851427014
finished samples sampling for zz_3851427014
 finished run 5 for problem zz_3851427014
 start run 6 for problem zz_3851427014
   start samplings 1000 for problem zz_3851427014
sampled for problem zz_3851427014
sampled for problem zz_8276325827
finished samples sampling for zz_8276325827
 finished run 5 for problem zz_8276325827
 start run 6 for problem zz_8276325827
   start samplings 1000 for problem zz_8276325827
sampled for problem zz_8276325827
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_5971996237
finished samples sampling for zz_5971996237
 finished run 6 for problem zz_5971996237
 start run 7 for problem zz_5971996237
   start samplings 1000 for problem zz_5971996237
sampled for problem zz_5971996237
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6489818378
finished samples sampling for zz_6489818378
 finished run 6 for problem zz_6489818378
 start run 7 for problem zz_6489818378
   start samplings 1000 for problem zz_6489818378
sampled for problem zz_6489818378
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4815697258
finished samples sampling for zz_4815697258
 finished run 6 for problem zz_4815697258
 start run 7 for problem zz_4815697258
   start samplings 1000 for problem zz_4815697258
sampled for problem zz_4815697258
sampled for problem zz_8942337152
finished samples sampling for zz_8942337152
 finished run 6 for problem zz_8942337152
 start run 7 for problem zz_8942337152
   start samplings 1000 for problem zz_8942337152
sampled for problem zz_8942337152
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2654810283
finished samples sampling for zz_2654810283
 finished run 0 for problem zz_2654810283
 start run 1 for problem zz_2654810283
   start samplings 1000 for problem zz_2654810283
sampled for problem zz_2654810283
sampled for problem zz_9489144589
finished samples sampling for zz_9489144589
 finished run 1 for problem zz_9489144589
 start run 2 for problem zz_9489144589
   start samplings 1000 for problem zz_9489144589
sampled for problem zz_9489144589
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_5205717936
 start writing answer for problem {} zz_6419836897
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f64090f2750>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f64090f2750>
sampled for problem zz_2068306658
finished samples sampling for zz_2068306658
 finished run 0 for problem zz_2068306658
 start run 1 for problem zz_2068306658
   start samplings 1000 for problem zz_2068306658
sampled for problem zz_2068306658
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_4526454422
finished samples sampling for zz_4526454422
 finished run 0 for problem zz_4526454422
 start run 1 for problem zz_4526454422
   start samplings 1000 for problem zz_4526454422
sampled for problem zz_4526454422
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_2699010835
 start writing answer for problem {} zz_6278981758
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f6402bdad50>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f6402bdad50>
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_5004330110
finished samples sampling for zz_5004330110
 finished run 0 for problem zz_5004330110
 start run 1 for problem zz_5004330110
   start samplings 1000 for problem zz_5004330110
sampled for problem zz_5004330110
sampled for problem zz_0802311939
finished samples sampling for zz_0802311939
 finished run 0 for problem zz_0802311939
 start run 1 for problem zz_0802311939
   start samplings 1000 for problem zz_0802311939
sampled for problem zz_0802311939
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_8746424212
finished samples sampling for zz_8746424212
 finished run 0 for problem zz_8746424212
 start run 1 for problem zz_8746424212
   start samplings 1000 for problem zz_8746424212
sampled for problem zz_8746424212
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_2871354184
 start writing answer for problem {} zz_6016382926
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f60a1de1d30>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f60a1de1d30>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2344528541
finished samples sampling for zz_2344528541
 finished run 2 for problem zz_2344528541
 start run 3 for problem zz_2344528541
   start samplings 1000 for problem zz_2344528541
sampled for problem zz_2344528541
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_6878848354
finished samples sampling for zz_6878848354
 finished run 3 for problem zz_6878848354
 start run 4 for problem zz_6878848354
   start samplings 1000 for problem zz_6878848354
sampled for problem zz_6878848354
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_7476695043
finished samples sampling for zz_7476695043
 finished run 2 for problem zz_7476695043
 start run 3 for problem zz_7476695043
   start samplings 1000 for problem zz_7476695043
sampled for problem zz_7476695043
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_1089975612
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6016382926
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0850550946
finished samples sampling for zz_0850550946
 finished run 2 for problem zz_0850550946
 start run 3 for problem zz_0850550946
   start samplings 1000 for problem zz_0850550946
sampled for problem zz_0850550946
sampled for problem zz_7146200131
finished samples sampling for zz_7146200131
 finished run 4 for problem zz_7146200131
 start run 5 for problem zz_7146200131
   start samplings 1000 for problem zz_7146200131
sampled for problem zz_7146200131
sampled for problem zz_3413098363
finished samples sampling for zz_3413098363
 finished run 3 for problem zz_3413098363
 start run 4 for problem zz_3413098363
   start samplings 1000 for problem zz_3413098363
sampled for problem zz_3413098363
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_5080149557
finished samples sampling for zz_5080149557
 finished run 3 for problem zz_5080149557
 start run 4 for problem zz_5080149557
sampled for problem zz_4056127159
finished samples sampling for zz_4056127159
 finished run 7 for problem zz_4056127159
 start run 8 for problem zz_4056127159
   start samplings 1000 for problem zz_4056127159
sampled for problem zz_4056127159
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0959642795
finished samples sampling for zz_0959642795
 finished run 7 for problem zz_0959642795
 start run 8 for problem zz_0959642795
   start samplings 1000 for problem zz_0959642795
sampled for problem zz_0959642795
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2720660293
finished samples sampling for zz_2720660293
 finished run 7 for problem zz_2720660293
 start run 8 for problem zz_2720660293
   start samplings 1000 for problem zz_2720660293
sampled for problem zz_2720660293
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6774697119
finished samples sampling for zz_6774697119
 finished run 7 for problem zz_6774697119
 start run 8 for problem zz_6774697119
   start samplings 1000 for problem zz_6774697119
sampled for problem zz_6774697119
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_9471019571
finished samples sampling for zz_9471019571
 finished run 7 for problem zz_9471019571
 start run 8 for problem zz_9471019571
   start samplings 1000 for problem zz_9471019571
sampled for problem zz_9471019571
sampled for problem zz_0317017085
finished samples sampling for zz_0317017085
 finished run 7 for problem zz_0317017085
 start run 8 for problem zz_0317017085
   start samplings 1000 for problem zz_0317017085
sampled for problem zz_0317017085
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0255343551
finished samples sampling for zz_0255343551
 finished run 7 for problem zz_0255343551
 start run 8 for problem zz_0255343551
   start samplings 1000 for problem zz_0255343551
sampled for problem zz_0255343551
sampled for problem zz_5452407354
finished samples sampling for zz_5452407354
 finished run 7 for problem zz_5452407354
 start run 8 for problem zz_5452407354
   start samplings 1000 for problem zz_5452407354
sampled for problem zz_5452407354
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4056127159
finished samples sampling for zz_4056127159
 finished run 8 for problem zz_4056127159
 start run 9 for problem zz_4056127159
   start samplings 1000 for problem zz_4056127159
sampled for problem zz_4056127159
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0959642795
finished samples sampling for zz_0959642795
 finished run 8 for problem zz_0959642795
 start run 9 for problem zz_0959642795
   start samplings 1000 for problem zz_0959642795
sampled for problem zz_0959642795
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2720660293
finished samples sampling for zz_2720660293
 finished run 8 for problem zz_2720660293
 start run 9 for problem zz_2720660293
   start samplings 1000 for problem zz_2720660293
sampled for problem zz_2720660293
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6774697119
finished samples sampling for zz_6774697119
 finished run 8 for problem zz_6774697119
 start run 9 for problem zz_6774697119
   start samplings 1000 for problem zz_6774697119
sampled for problem zz_6774697119
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_9471019571
finished samples sampling for zz_9471019571
 finished run 8 for problem zz_9471019571
 start run 9 for problem zz_9471019571
   start samplings 1000 for problem zz_9471019571
sampled for problem zz_9471019571
sampled for problem zz_0255343551
finished samples sampling for zz_0255343551
 finished run 8 for problem zz_0255343551
 start run 9 for problem zz_0255343551
   start samplings 1000 for problem zz_0255343551
sampled for problem zz_0255343551
sampled for problem zz_5452407354
finished samples sampling for zz_5452407354
 finished run 8 for problem zz_5452407354
 start run 9 for problem zz_5452407354
   start samplings 1000 for problem zz_5452407354
sampled for problem zz_5452407354
sampled for problem zz_0317017085
finished samples sampling for zz_0317017085
 finished run 8 for problem zz_0317017085
 start run 9 for problem zz_0317017085
   start samplings 1000 for problem zz_0317017085
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0317017085
sampled for problem zz_4056127159
finished samples sampling for zz_4056127159
 finished run 9 for problem zz_4056127159
 succesfully retrieved answer for problem {} zz_4056127159
 start working on problem zz_8074406757
 start writing answer for problem {} zz_4056127159
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9df47ea780>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9df47ea780>
 problem zz_8074406757 will take can be sampled with a single run
 problem zz_8074406757 will be solved 1 times per run
 start run 0 for problem zz_8074406757
   start samplings 1000 for problem zz_8074406757
sampled for problem zz_8074406757
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_2258027639
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_2791652904
finished samples sampling for zz_2791652904
 finished run 9 for problem zz_2791652904
 succesfully retrieved answer for problem {} zz_2791652904
 start working on problem zz_8705539192
 start writing answer for problem {} zz_2791652904
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f976c703d40>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f976c703d40>
 problem zz_8705539192 will take can be sampled with a single run
 problem zz_8705539192 will be solved 1 times per run
 Queue sizes: problems_to_submit = 6, answers_to_write = 0
 start run 0 for problem zz_8705539192
   start samplings 1000 for problem zz_8705539192
sampled for problem zz_8705539192
sampled for problem zz_2921244493
finished samples sampling for zz_2921244493
 finished run 9 for problem zz_2921244493
 succesfully retrieved answer for problem {} zz_2921244493
 start working on problem zz_7988238591
 start writing answer for problem {} zz_2921244493
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f96cd8fbb60>
 problem zz_7988238591 will take can be sampled with a single run
 problem zz_7988238591 will be solved 1 times per run
sampled for problem zz_7899741822
finished samples sampling for zz_7899741822
 finished run 9 for problem zz_7899741822
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f96cd8fbb60>
 start run 0 for problem zz_7988238591
   start samplings 1000 for problem zz_7988238591
sampled for problem zz_7988238591
 succesfully retrieved answer for problem {} zz_7899741822
 start working on problem zz_1871566606
 Queue sizes: problems_to_submit = 4, answers_to_write = 1
 problem zz_1871566606 will take can be sampled with a single run
 problem zz_1871566606 will be solved 1 times per run
 start run 0 for problem zz_1871566606
   start samplings 1000 for problem zz_1871566606
sampled for problem zz_1871566606
 Queue sizes: problems_to_submit = 4, answers_to_write = 1
sampled for problem zz_9585089572
finished samples sampling for zz_9585089572
 finished run 0 for problem zz_9585089572
 start run 1 for problem zz_9585089572
   start samplings 1000 for problem zz_9585089572
sampled for problem zz_9585089572
 Queue sizes: problems_to_submit = 4, answers_to_write = 1
sampled for problem zz_6577828538
finished samples sampling for zz_6577828538
 finished run 9 for problem zz_6577828538
 succesfully retrieved answer for problem {} zz_6577828538
 start working on problem zz_8941210343
 problem zz_8941210343 will take can be sampled with a single run
 problem zz_8941210343 will be solved 1 times per run
 start run 0 for problem zz_8941210343
   start samplings 1000 for problem zz_8941210343
sampled for problem zz_8941210343
sampled for problem zz_3358737269
finished samples sampling for zz_3358737269
 finished run 9 for problem zz_3358737269
 succesfully retrieved answer for problem {} zz_3358737269
 start working on problem zz_8890212945
 Queue sizes: problems_to_submit = 2, answers_to_write = 3
 problem zz_8890212945 will take can be sampled with a single run
 problem zz_8890212945 will be solved 1 times per run
 start run 0 for problem zz_8890212945
   start samplings 1000 for problem zz_8890212945
sampled for problem zz_8890212945
sampled for problem zz_4983060353
finished samples sampling for zz_4983060353
 finished run 9 for problem zz_4983060353
 succesfully retrieved answer for problem {} zz_4983060353
 start working on problem zz_1445418313
sampled for problem zz_6074050616
finished samples sampling for zz_6074050616
 finished run 9 for problem zz_6074050616
 succesfully retrieved answer for problem {} zz_6074050616
 start working on problem zz_9873706342
 problem zz_1445418313 will take can be sampled with a single run
 problem zz_1445418313 will be solved 1 times per run
 start run 0 for problem zz_1445418313
   start samplings 1000 for problem zz_1445418313
sampled for problem zz_1445418313
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 problem zz_9873706342 will take can be sampled with a single run
 problem zz_9873706342 will be solved 1 times per run
 start run 0 for problem zz_9873706342
   start samplings 1000 for problem zz_9873706342
sampled for problem zz_9873706342
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
sampled for problem zz_8705539192
finished samples sampling for zz_8705539192
 finished run 0 for problem zz_8705539192
 start run 1 for problem zz_8705539192
   start samplings 1000 for problem zz_8705539192
sampled for problem zz_8705539192
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
sampled for problem zz_7988238591
finished samples sampling for zz_7988238591
 finished run 0 for problem zz_7988238591
 start run 1 for problem zz_7988238591
   start samplings 1000 for problem zz_7988238591
sampled for problem zz_7988238591
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
sampled for problem zz_1871566606
finished samples sampling for zz_1871566606
 finished run 0 for problem zz_1871566606
 start run 1 for problem zz_1871566606
   start samplings 1000 for problem zz_1871566606
sampled for problem zz_1871566606
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
sampled for problem zz_9585089572
finished samples sampling for zz_9585089572
 finished run 1 for problem zz_9585089572
 start run 2 for problem zz_9585089572
   start samplings 1000 for problem zz_9585089572
sampled for problem zz_9585089572
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_3918938749
finished samples sampling for zz_3918938749
 finished run 1 for problem zz_3918938749
 start run 2 for problem zz_3918938749
   start samplings 1000 for problem zz_3918938749
sampled for problem zz_3918938749
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_2654810283
finished samples sampling for zz_2654810283
 finished run 1 for problem zz_2654810283
 start run 2 for problem zz_2654810283
   start samplings 1000 for problem zz_2654810283
sampled for problem zz_2654810283
sampled for problem zz_9489144589
finished samples sampling for zz_9489144589
 finished run 2 for problem zz_9489144589
 start run 3 for problem zz_9489144589
   start samplings 1000 for problem zz_9489144589
sampled for problem zz_9489144589
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6278981758
 start writing answer for problem {} zz_6270472886
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f6403214500>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f6403214500>
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_2068306658
finished samples sampling for zz_2068306658
 finished run 1 for problem zz_2068306658
 start run 2 for problem zz_2068306658
   start samplings 1000 for problem zz_2068306658
sampled for problem zz_2068306658
sampled for problem zz_4526454422
finished samples sampling for zz_4526454422
 finished run 1 for problem zz_4526454422
 start run 2 for problem zz_4526454422
   start samplings 1000 for problem zz_4526454422
sampled for problem zz_4526454422
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_5004330110
finished samples sampling for zz_5004330110
 finished run 1 for problem zz_5004330110
 start run 2 for problem zz_5004330110
   start samplings 1000 for problem zz_5004330110
sampled for problem zz_5004330110
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_0802311939
finished samples sampling for zz_0802311939
 finished run 1 for problem zz_0802311939
 start run 2 for problem zz_0802311939
   start samplings 1000 for problem zz_0802311939
sampled for problem zz_0802311939
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6419836897
 start writing answer for problem {} zz_7471821836
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f6402c16180>
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_4056127159
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_0959642795
finished samples sampling for zz_0959642795
 finished run 9 for problem zz_0959642795
 succesfully retrieved answer for problem {} zz_0959642795
 start working on problem zz_1451684479
 start writing answer for problem {} zz_0959642795
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9d745f42c0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9d745f42c0>
 Queue sizes: problems_to_submit = 6, answers_to_write = 0
 problem zz_1451684479 will take can be sampled with a single run
 problem zz_1451684479 will be solved 1 times per run
 start run 0 for problem zz_1451684479
   start samplings 1000 for problem zz_1451684479
sampled for problem zz_1451684479
 Queue sizes: problems_to_submit = 6, answers_to_write = 0
 Queue sizes: problems_to_submit = 6, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_2720660293
finished samples sampling for zz_2720660293
 finished run 9 for problem zz_2720660293
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 succesfully retrieved answer for problem {} zz_2720660293
 start working on problem zz_0689312377
 finished writing answer for problem {} zz_0959642795
 start writing answer for problem {} zz_2720660293
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9c54707710>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9c54707710>
 Queue sizes: problems_to_submit = 5, answers_to_write = 0
sampled for problem zz_0255343551
finished samples sampling for zz_0255343551
 finished run 9 for problem zz_0255343551
 problem zz_0689312377 will take can be sampled with a single run
 problem zz_0689312377 will be solved 1 times per run
sampled for problem zz_5452407354
finished samples sampling for zz_5452407354
 finished run 9 for problem zz_5452407354
sampled for problem zz_6774697119
finished samples sampling for zz_6774697119
 finished run 9 for problem zz_6774697119
sampled for problem zz_9471019571
finished samples sampling for zz_9471019571
 finished run 9 for problem zz_9471019571
sampled for problem zz_0317017085
finished samples sampling for zz_0317017085
 finished run 9 for problem zz_0317017085
 succesfully retrieved answer for problem {} zz_0255343551
 start working on problem zz_4090347922
 start run 0 for problem zz_0689312377
   start samplings 1000 for problem zz_0689312377
sampled for problem zz_0689312377
 start writing answer for problem {} zz_0255343551
 Queue sizes: problems_to_submit = 4, answers_to_write = 0
 problem zz_4090347922 will take can be sampled with a single run
 problem zz_4090347922 will be solved 1 times per run
 succesfully retrieved answer for problem {} zz_5452407354
 start working on problem zz_9812242872
sampled for problem zz_8074406757
finished samples sampling for zz_8074406757
 finished run 0 for problem zz_8074406757
 start run 1 for problem zz_8074406757
   start samplings 1000 for problem zz_8074406757
sampled for problem zz_8074406757
 succesfully retrieved answer for problem {} zz_6774697119
 start working on problem zz_2487327787
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9b078c97f0>
 succesfully retrieved answer for problem {} zz_9471019571
 start working on problem zz_9504682920
 succesfully retrieved answer for problem {} zz_0317017085
 start working on problem zz_9439897319
 problem zz_9812242872 will take can be sampled with a single run
 problem zz_9812242872 will be solved 1 times per run
 problem zz_2487327787 will take can be sampled with a single run
 problem zz_2487327787 will be solved 1 times per run
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 start run 0 for problem zz_4090347922
   start samplings 1000 for problem zz_4090347922
 problem zz_9504682920 will take can be sampled with a single run
 problem zz_9504682920 will be solved 1 times per run
sampled for problem zz_4090347922
 problem zz_9439897319 will take can be sampled with a single run
 problem zz_9439897319 will be solved 1 times per run
 start run 0 for problem zz_9812242872
   start samplings 1000 for problem zz_9812242872
sampled for problem zz_9812242872
 start run 0 for problem zz_2487327787
   start samplings 1000 for problem zz_2487327787
sampled for problem zz_2487327787
 start run 0 for problem zz_9504682920
   start samplings 1000 for problem zz_9504682920
sampled for problem zz_9504682920
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9b078c97f0>
 start run 0 for problem zz_9439897319
   start samplings 1000 for problem zz_9439897319
sampled for problem zz_9439897319
sampled for problem zz_3231454862
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0534179516
finished samples sampling for zz_0534179516
 finished run 6 for problem zz_0534179516
 start run 7 for problem zz_0534179516
   start samplings 1000 for problem zz_0534179516
sampled for problem zz_0534179516
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_3511504764
finished samples sampling for zz_3511504764
 finished run 7 for problem zz_3511504764
 start run 8 for problem zz_3511504764
   start samplings 1000 for problem zz_3511504764
sampled for problem zz_3511504764
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2676805068
finished samples sampling for zz_2676805068
 finished run 6 for problem zz_2676805068
 start run 7 for problem zz_2676805068
   start samplings 1000 for problem zz_2676805068
sampled for problem zz_2676805068
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0893645049
finished samples sampling for zz_0893645049
 finished run 7 for problem zz_0893645049
 start run 8 for problem zz_0893645049
   start samplings 1000 for problem zz_0893645049
sampled for problem zz_0893645049
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4167523720
finished samples sampling for zz_4167523720
 finished run 7 for problem zz_4167523720
 start run 8 for problem zz_4167523720
   start samplings 1000 for problem zz_4167523720
sampled for problem zz_4167523720
sampled for problem zz_4971361908
finished samples sampling for zz_4971361908
 finished run 7 for problem zz_4971361908
 start run 8 for problem zz_4971361908
   start samplings 1000 for problem zz_4971361908
sampled for problem zz_4971361908
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_3527907281
finished samples sampling for zz_3527907281
 finished run 7 for problem zz_3527907281
 start run 8 for problem zz_3527907281
   start samplings 1000 for problem zz_3527907281
sampled for problem zz_3527907281
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_3231454862
finished samples sampling for zz_3231454862
 finished run 7 for problem zz_3231454862
 start run 8 for problem zz_3231454862
   start samplings 1000 for problem zz_3231454862
sampled for problem zz_3231454862
sampled for problem zz_0534179516
finished samples sampling for zz_0534179516
 finished run 7 for problem zz_0534179516
 start run 8 for problem zz_0534179516
   start samplings 1000 for problem zz_0534179516
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0534179516
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_3511504764
finished samples sampling for zz_3511504764
 finished run 8 for problem zz_3511504764
 start run 9 for problem zz_3511504764
   start samplings 1000 for problem zz_3511504764
sampled for problem zz_3511504764
sampled for problem zz_2676805068
finished samples sampling for zz_2676805068
 finished run 7 for problem zz_2676805068
 start run 8 for problem zz_2676805068
   start samplings 1000 for problem zz_2676805068
sampled for problem zz_2676805068
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0893645049
finished samples sampling for zz_0893645049
 finished run 8 for problem zz_0893645049
 start run 9 for problem zz_0893645049
   start samplings 1000 for problem zz_0893645049
sampled for problem zz_0893645049
sampled for problem zz_4167523720
finished samples sampling for zz_4167523720
 finished run 8 for problem zz_4167523720
 start run 9 for problem zz_4167523720
   start samplings 1000 for problem zz_4167523720
sampled for problem zz_4167523720
sampled for problem zz_4971361908
finished samples sampling for zz_4971361908
 finished run 8 for problem zz_4971361908
 start run 9 for problem zz_4971361908
   start samplings 1000 for problem zz_4971361908
sampled for problem zz_4971361908
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_3527907281
finished samples sampling for zz_3527907281
 finished run 8 for problem zz_3527907281
 start run 9 for problem zz_3527907281
   start samplings 1000 for problem zz_3527907281
sampled for problem zz_3527907281
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_3231454862
finished samples sampling for zz_3231454862
 finished run 8 for problem zz_3231454862
 start run 9 for problem zz_3231454862
   start samplings 1000 for problem zz_3231454862
sampled for problem zz_3231454862
sampled for problem zz_0534179516
finished samples sampling for zz_0534179516
 finished run 8 for problem zz_0534179516
 start run 9 for problem zz_0534179516
   start samplings 1000 for problem zz_0534179516
sampled for problem zz_0534179516
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_3511504764
finished samples sampling for zz_3511504764
 finished run 9 for problem zz_3511504764
 succesfully retrieved answer for problem {} zz_3511504764
 start working on problem zz_8061135779
sampled for problem zz_2676805068
finished samples sampling for zz_2676805068
 finished run 8 for problem zz_2676805068
 start run 9 for problem zz_2676805068
   start samplings 1000 for problem zz_2676805068
 start writing answer for problem {} zz_3511504764
sampled for problem zz_2676805068
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe41421e270>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe41421e270>
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 problem zz_8061135779 will take can be sampled with a single run
 problem zz_8061135779 will be solved 1 times per run
 start run 0 for problem zz_8061135779
   start samplings 1000 for problem zz_8061135779
sampled for problem zz_8061135779
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_0893645049
finished samples sampling for zz_0893645049
 finished run 9 for problem zz_0893645049
 succesfully retrieved answer for problem {} zz_0893645049
 start working on problem zz_5874969018
 start writing answer for problem {} zz_0893645049
 problem zz_5874969018 will take can be sampled with a single run
 problem zz_5874969018 will be solved 1 times per run
sampled for problem zz_4167523720
finished samples sampling for zz_4167523720
 finished run 9 for problem zz_4167523720
 start run 0 for problem zz_5874969018
   start samplings 1000 for problem zz_5874969018
sampled for problem zz_5874969018
sampled for problem zz_4971361908
finished samples sampling for zz_4971361908
 finished run 9 for problem zz_4971361908
 succesfully retrieved answer for problem {} zz_4167523720
 start working on problem zz_6600341654
sampled for problem zz_3527907281
finished samples sampling for zz_3527907281
 finished run 9 for problem zz_3527907281
 succesfully retrieved answer for problem {} zz_4971361908
 start working on problem zz_8036213424
 succesfully retrieved answer for problem {} zz_3527907281
 start working on problem zz_4518778851
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2ce2e1340>
 Queue sizes: problems_to_submit = 3, answers_to_write = 3
sampled for problem zz_0163190663
finished samples sampling for zz_0163190663
 finished run 8 for problem zz_0163190663
 start run 9 for problem zz_0163190663
   start samplings 1000 for problem zz_0163190663
sampled for problem zz_0163190663
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_9283730726
finished samples sampling for zz_9283730726
 finished run 9 for problem zz_9283730726
 succesfully retrieved answer for problem {} zz_9283730726
 start working on problem zz_1697148923
 start writing answer for problem {} zz_9283730726
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fefcbfb13d0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fefcbfb13d0>
 Queue sizes: problems_to_submit = 6, answers_to_write = 0
 problem zz_1697148923 will take can be sampled with a single run
 problem zz_1697148923 will be solved 1 times per run
sampled for problem zz_5744954469
finished samples sampling for zz_5744954469
 finished run 9 for problem zz_5744954469
sampled for problem zz_8884820367
finished samples sampling for zz_8884820367
 finished run 9 for problem zz_8884820367
 start run 0 for problem zz_1697148923
   start samplings 1000 for problem zz_1697148923
sampled for problem zz_1697148923
sampled for problem zz_3591442681
finished samples sampling for zz_3591442681
 finished run 0 for problem zz_3591442681
 start run 1 for problem zz_3591442681
   start samplings 1000 for problem zz_3591442681
sampled for problem zz_3591442681
sampled for problem zz_0538469761
finished samples sampling for zz_0538469761
 finished run 9 for problem zz_0538469761
 succesfully retrieved answer for problem {} zz_5744954469
 start working on problem zz_9774242506
 start writing answer for problem {} zz_5744954469
 succesfully retrieved answer for problem {} zz_8884820367
 start working on problem zz_3354126626
 succesfully retrieved answer for problem {} zz_0538469761
 start working on problem zz_1121819247
 Queue sizes: problems_to_submit = 3, answers_to_write = 2
 problem zz_9774242506 will take can be sampled with a single run
 problem zz_9774242506 will be solved 1 times per run
sampled for problem zz_7063111329
finished samples sampling for zz_7063111329
 finished run 9 for problem zz_7063111329
 start run 0 for problem zz_9774242506
   start samplings 1000 for problem zz_9774242506
sampled for problem zz_9774242506
 problem zz_3354126626 will take can be sampled with a single run
 problem zz_3354126626 will be solved 1 times per run
 problem zz_1121819247 will take can be sampled with a single run
 problem zz_1121819247 will be solved 1 times per run
 succesfully retrieved answer for problem {} zz_7063111329
 start working on problem zz_6864603226
 start run 0 for problem zz_3354126626
   start samplings 1000 for problem zz_3354126626
sampled for problem zz_3354126626
 start run 0 for problem zz_1121819247
   start samplings 1000 for problem zz_1121819247
sampled for problem zz_1121819247
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fed420f81a0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fed420f81a0>
 Queue sizes: problems_to_submit = 2, answers_to_write = 3
 problem zz_6864603226 will take can be sampled with a single run
 problem zz_6864603226 will be solved 1 times per run
sampled for problem zz_7350679553
finished samples sampling for zz_7350679553
 finished run 9 for problem zz_7350679553
 start run 0 for problem zz_6864603226
   start samplings 1000 for problem zz_6864603226
sampled for problem zz_0163190663
finished samples sampling for zz_0163190663
 finished run 9 for problem zz_0163190663
sampled for problem zz_6864603226
 succesfully retrieved answer for problem {} zz_7350679553
 start working on problem zz_5757275986
 succesfully retrieved answer for problem {} zz_0163190663
 start working on problem zz_4863812233
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 problem zz_5757275986 will take can be sampled with a single run
 problem zz_5757275986 will be solved 1 times per run
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 problem zz_4863812233 will take can be sampled with a single run
 problem zz_4863812233 will be solved 1 times per run
 start run 0 for problem zz_5757275986
   start samplings 1000 for problem zz_5757275986
sampled for problem zz_5757275986
 start run 0 for problem zz_4863812233
   start samplings 1000 for problem zz_4863812233
sampled for problem zz_4863812233
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
sampled for problem zz_1697148923
finished samples sampling for zz_1697148923
 finished run 0 for problem zz_1697148923
 start run 1 for problem zz_1697148923
   start samplings 1000 for problem zz_1697148923
sampled for problem zz_1697148923
sampled for problem zz_3591442681
finished samples sampling for zz_3591442681
 finished run 1 for problem zz_3591442681
 start run 2 for problem zz_3591442681
   start samplings 1000 for problem zz_3591442681
sampled for problem zz_3591442681
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
sampled for problem zz_9774242506
finished samples sampling for zz_9774242506
 finished run 0 for problem zz_9774242506
 start run 1 for problem zz_9774242506
   start samplings 1000 for problem zz_9774242506
sampled for problem zz_9774242506
sampled for problem zz_3354126626
finished samples sampling for zz_3354126626
 finished run 0 for problem zz_3354126626
 start run 1 for problem zz_3354126626
   start samplings 1000 for problem zz_3354126626
sampled for problem zz_3354126626
sampled for problem zz_1121819247
finished samples sampling for zz_1121819247
 finished run 0 for problem zz_1121819247
 start run 1 for problem zz_1121819247
   start samplings 1000 for problem zz_1121819247
sampled for problem zz_1121819247
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
sampled for problem zz_6864603226
finished samples sampling for zz_6864603226
 finished run 0 for problem zz_6864603226
 start run 1 for problem zz_6864603226
   start samplings 1000 for problem zz_6864603226
sampled for problem zz_6864603226
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_8633696827
sampled for problem zz_1860673799
finished samples sampling for zz_1860673799
 finished run 6 for problem zz_1860673799
 start run 7 for problem zz_1860673799
   start samplings 1000 for problem zz_1860673799
sampled for problem zz_1860673799
sampled for problem zz_3984838668
finished samples sampling for zz_3984838668
 finished run 6 for problem zz_3984838668
 start run 7 for problem zz_3984838668
   start samplings 1000 for problem zz_3984838668
sampled for problem zz_3984838668
sampled for problem zz_4496173481
finished samples sampling for zz_4496173481
 finished run 6 for problem zz_4496173481
 start run 7 for problem zz_4496173481
   start samplings 1000 for problem zz_4496173481
sampled for problem zz_4496173481
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_5683679450
finished samples sampling for zz_5683679450
 finished run 7 for problem zz_5683679450
 start run 8 for problem zz_5683679450
   start samplings 1000 for problem zz_5683679450
sampled for problem zz_5683679450
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6820111222
finished samples sampling for zz_6820111222
 finished run 7 for problem zz_6820111222
 start run 8 for problem zz_6820111222
   start samplings 1000 for problem zz_6820111222
sampled for problem zz_6820111222
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0291999630
finished samples sampling for zz_0291999630
 finished run 7 for problem zz_0291999630
 start run 8 for problem zz_0291999630
   start samplings 1000 for problem zz_0291999630
sampled for problem zz_0291999630
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_9806083889
finished samples sampling for zz_9806083889
 finished run 7 for problem zz_9806083889
 start run 8 for problem zz_9806083889
   start samplings 1000 for problem zz_9806083889
sampled for problem zz_9806083889
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_8633696827
finished samples sampling for zz_8633696827
 finished run 7 for problem zz_8633696827
 start run 8 for problem zz_8633696827
   start samplings 1000 for problem zz_8633696827
sampled for problem zz_8633696827
sampled for problem zz_1860673799
finished samples sampling for zz_1860673799
 finished run 7 for problem zz_1860673799
 start run 8 for problem zz_1860673799
   start samplings 1000 for problem zz_1860673799
sampled for problem zz_1860673799
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_3984838668
finished samples sampling for zz_3984838668
 finished run 7 for problem zz_3984838668
 start run 8 for problem zz_3984838668
   start samplings 1000 for problem zz_3984838668
sampled for problem zz_3984838668
sampled for problem zz_4496173481
finished samples sampling for zz_4496173481
 finished run 7 for problem zz_4496173481
 start run 8 for problem zz_4496173481
   start samplings 1000 for problem zz_4496173481
sampled for problem zz_4496173481
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_5683679450
finished samples sampling for zz_5683679450
 finished run 8 for problem zz_5683679450
 start run 9 for problem zz_5683679450
   start samplings 1000 for problem zz_5683679450
sampled for problem zz_5683679450
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6820111222
finished samples sampling for zz_6820111222
 finished run 8 for problem zz_6820111222
 start run 9 for problem zz_6820111222
   start samplings 1000 for problem zz_6820111222
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6820111222
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0291999630
finished samples sampling for zz_0291999630
 finished run 8 for problem zz_0291999630
 start run 9 for problem zz_0291999630
   start samplings 1000 for problem zz_0291999630
sampled for problem zz_0291999630
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_9806083889
finished samples sampling for zz_9806083889
 finished run 8 for problem zz_9806083889
 start run 9 for problem zz_9806083889
   start samplings 1000 for problem zz_9806083889
sampled for problem zz_9806083889
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_8633696827
finished samples sampling for zz_8633696827
 finished run 8 for problem zz_8633696827
 start run 9 for problem zz_8633696827
   start samplings 1000 for problem zz_8633696827
sampled for problem zz_8633696827
sampled for problem zz_1860673799
finished samples sampling for zz_1860673799
 finished run 8 for problem zz_1860673799
 start run 9 for problem zz_1860673799
   start samplings 1000 for problem zz_1860673799
sampled for problem zz_1860673799
sampled for problem zz_3984838668
finished samples sampling for zz_3984838668
 finished run 8 for problem zz_3984838668
 start run 9 for problem zz_3984838668
   start samplings 1000 for problem zz_3984838668
sampled for problem zz_3984838668
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4496173481
finished samples sampling for zz_4496173481
 finished run 8 for problem zz_4496173481
 start run 9 for problem zz_4496173481
   start samplings 1000 for problem zz_4496173481
sampled for problem zz_4496173481
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_5683679450
finished samples sampling for zz_5683679450
 finished run 9 for problem zz_5683679450
 succesfully retrieved answer for problem {} zz_5683679450
 start working on problem zz_7155401937
 start writing answer for problem {} zz_5683679450
 problem zz_7155401937 will take can be sampled with a single run
 problem zz_7155401937 will be solved 1 times per run
 start run 0 for problem zz_7155401937
   start samplings 1000 for problem zz_7155401937
sampled for problem zz_7155401937
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f2abc76a570>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f2abc76a570>
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
sampled for problem zz_8941210343
finished samples sampling for zz_8941210343
 finished run 0 for problem zz_8941210343
 start run 1 for problem zz_8941210343
   start samplings 1000 for problem zz_8941210343
sampled for problem zz_8941210343
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_2791652904
 start writing answer for problem {} zz_7899741822
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f96ccbe0290>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f96ccbe0290>
sampled for problem zz_8890212945
finished samples sampling for zz_8890212945
 finished run 0 for problem zz_8890212945
 start run 1 for problem zz_8890212945
   start samplings 1000 for problem zz_8890212945
sampled for problem zz_8890212945
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
sampled for problem zz_1445418313
finished samples sampling for zz_1445418313
 finished run 0 for problem zz_1445418313
 start run 1 for problem zz_1445418313
   start samplings 1000 for problem zz_1445418313
sampled for problem zz_1445418313
sampled for problem zz_9873706342
finished samples sampling for zz_9873706342
 finished run 0 for problem zz_9873706342
 start run 1 for problem zz_9873706342
   start samplings 1000 for problem zz_9873706342
sampled for problem zz_9873706342
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_2921244493
 start writing answer for problem {} zz_6577828538
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f96c6fd5b80>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f96c6fd5b80>
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_8705539192
finished samples sampling for zz_8705539192
 finished run 1 for problem zz_8705539192
 start run 2 for problem zz_8705539192
   start samplings 1000 for problem zz_8705539192
sampled for problem zz_8705539192
sampled for problem zz_7988238591
finished samples sampling for zz_7988238591
 finished run 1 for problem zz_7988238591
 start run 2 for problem zz_7988238591
   start samplings 1000 for problem zz_7988238591
sampled for problem zz_7988238591
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_1871566606
finished samples sampling for zz_1871566606
 finished run 1 for problem zz_1871566606
 start run 2 for problem zz_1871566606
   start samplings 1000 for problem zz_1871566606
sampled for problem zz_1871566606
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_9585089572
finished samples sampling for zz_9585089572
 finished run 2 for problem zz_9585089572
 start run 3 for problem zz_9585089572
   start samplings 1000 for problem zz_9585089572
sampled for problem zz_9585089572
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f6402c16180>
sampled for problem zz_8746424212
finished samples sampling for zz_8746424212
 finished run 1 for problem zz_8746424212
 start run 2 for problem zz_8746424212
   start samplings 1000 for problem zz_8746424212
sampled for problem zz_8746424212
sampled for problem zz_3918938749
finished samples sampling for zz_3918938749
 finished run 2 for problem zz_3918938749
 start run 3 for problem zz_3918938749
   start samplings 1000 for problem zz_3918938749
sampled for problem zz_3918938749
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2654810283
finished samples sampling for zz_2654810283
 finished run 2 for problem zz_2654810283
 start run 3 for problem zz_2654810283
   start samplings 1000 for problem zz_2654810283
sampled for problem zz_2654810283
sampled for problem zz_9489144589
finished samples sampling for zz_9489144589
 finished run 3 for problem zz_9489144589
 start run 4 for problem zz_9489144589
   start samplings 1000 for problem zz_9489144589
sampled for problem zz_9489144589
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6270472886
sampled for problem zz_2068306658
finished samples sampling for zz_2068306658
 finished run 2 for problem zz_2068306658
 start run 3 for problem zz_2068306658
   start samplings 1000 for problem zz_2068306658
sampled for problem zz_2068306658
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_4526454422
finished samples sampling for zz_4526454422
 finished run 2 for problem zz_4526454422
 start run 3 for problem zz_4526454422
   start samplings 1000 for problem zz_4526454422
sampled for problem zz_4526454422
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_7471821836
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_5004330110
finished samples sampling for zz_5004330110
 finished run 2 for problem zz_5004330110
 start run 3 for problem zz_5004330110
   start samplings 1000 for problem zz_5004330110
sampled for problem zz_5004330110
sampled for problem zz_0802311939
finished samples sampling for zz_0802311939
 finished run 2 for problem zz_0802311939
 start run 3 for problem zz_0802311939
   start samplings 1000 for problem zz_0802311939
sampled for problem zz_0802311939
sampled for problem zz_8746424212
finished samples sampling for zz_8746424212
 finished run 2 for problem zz_8746424212
 start run 3 for problem zz_8746424212
   start samplings 1000 for problem zz_8746424212
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_4709661397
finished samples sampling for zz_4709661397
 finished run 6 for problem zz_4709661397
 start run 7 for problem zz_4709661397
   start samplings 1000 for problem zz_4709661397
sampled for problem zz_4709661397
sampled for problem zz_0931578977
finished samples sampling for zz_0931578977
 finished run 6 for problem zz_0931578977
 start run 7 for problem zz_0931578977
   start samplings 1000 for problem zz_0931578977
sampled for problem zz_0931578977
sampled for problem zz_3851427014
finished samples sampling for zz_3851427014
 finished run 6 for problem zz_3851427014
 start run 7 for problem zz_3851427014
   start samplings 1000 for problem zz_3851427014
sampled for problem zz_3851427014
sampled for problem zz_8276325827
finished samples sampling for zz_8276325827
 finished run 6 for problem zz_8276325827
 start run 7 for problem zz_8276325827
   start samplings 1000 for problem zz_8276325827
sampled for problem zz_8276325827
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_5971996237
finished samples sampling for zz_5971996237
 finished run 7 for problem zz_5971996237
 start run 8 for problem zz_5971996237
   start samplings 1000 for problem zz_5971996237
sampled for problem zz_5971996237
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6489818378
finished samples sampling for zz_6489818378
 finished run 7 for problem zz_6489818378
 start run 8 for problem zz_6489818378
   start samplings 1000 for problem zz_6489818378
sampled for problem zz_6489818378
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4815697258
finished samples sampling for zz_4815697258
 finished run 7 for problem zz_4815697258
 start run 8 for problem zz_4815697258
   start samplings 1000 for problem zz_4815697258
sampled for problem zz_4815697258
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_8942337152
finished samples sampling for zz_8942337152
 finished run 7 for problem zz_8942337152
 start run 8 for problem zz_8942337152
   start samplings 1000 for problem zz_8942337152
sampled for problem zz_8942337152
sampled for problem zz_4709661397
finished samples sampling for zz_4709661397
 finished run 7 for problem zz_4709661397
 start run 8 for problem zz_4709661397
   start samplings 1000 for problem zz_4709661397
sampled for problem zz_4709661397
sampled for problem zz_0931578977
finished samples sampling for zz_0931578977
 finished run 7 for problem zz_0931578977
 start run 8 for problem zz_0931578977
   start samplings 1000 for problem zz_0931578977
sampled for problem zz_0931578977
sampled for problem zz_3851427014
finished samples sampling for zz_3851427014
 finished run 7 for problem zz_3851427014
 start run 8 for problem zz_3851427014
   start samplings 1000 for problem zz_3851427014
sampled for problem zz_3851427014
sampled for problem zz_8276325827
finished samples sampling for zz_8276325827
 finished run 7 for problem zz_8276325827
 start run 8 for problem zz_8276325827
   start samplings 1000 for problem zz_8276325827
sampled for problem zz_8276325827
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_5971996237
finished samples sampling for zz_5971996237
 finished run 8 for problem zz_5971996237
 start run 9 for problem zz_5971996237
   start samplings 1000 for problem zz_5971996237
sampled for problem zz_5971996237
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6489818378
finished samples sampling for zz_6489818378
 finished run 8 for problem zz_6489818378
 start run 9 for problem zz_6489818378
   start samplings 1000 for problem zz_6489818378
sampled for problem zz_6489818378
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4815697258
finished samples sampling for zz_4815697258
 finished run 8 for problem zz_4815697258
 start run 9 for problem zz_4815697258
   start samplings 1000 for problem zz_4815697258
sampled for problem zz_4815697258
sampled for problem zz_8942337152
finished samples sampling for zz_8942337152
 finished run 8 for problem zz_8942337152
 start run 9 for problem zz_8942337152
   start samplings 1000 for problem zz_8942337152
sampled for problem zz_8942337152
sampled for problem zz_4709661397
finished samples sampling for zz_4709661397
 finished run 8 for problem zz_4709661397
 start run 9 for problem zz_4709661397
   start samplings 1000 for problem zz_4709661397
sampled for problem zz_4709661397
sampled for problem zz_0931578977
finished samples sampling for zz_0931578977
 finished run 8 for problem zz_0931578977
 start run 9 for problem zz_0931578977
   start samplings 1000 for problem zz_0931578977
sampled for problem zz_0931578977
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_3851427014
finished samples sampling for zz_3851427014
 finished run 8 for problem zz_3851427014
 start run 9 for problem zz_3851427014
   start samplings 1000 for problem zz_3851427014
sampled for problem zz_3851427014
sampled for problem zz_8276325827
finished samples sampling for zz_8276325827
 finished run 8 for problem zz_8276325827
 start run 9 for problem zz_8276325827
   start samplings 1000 for problem zz_8276325827
sampled for problem zz_8276325827
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_5971996237
finished samples sampling for zz_5971996237
 finished run 9 for problem zz_5971996237
 succesfully retrieved answer for problem {} zz_5971996237
 start working on problem zz_6184411292
 start writing answer for problem {} zz_5971996237
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8bf431e870>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8bf431e870>
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 problem zz_6184411292 will take can be sampled with a single run
 problem zz_6184411292 will be solved 1 times per run
 start run 0 for problem zz_6184411292
   start samplings 1000 for problem zz_6184411292
sampled for problem zz_6184411292
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'>
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_5683679450
sampled for problem zz_6820111222
finished samples sampling for zz_6820111222
 finished run 9 for problem zz_6820111222
 succesfully retrieved answer for problem {} zz_6820111222
 start working on problem zz_1116142614
 start writing answer for problem {} zz_6820111222
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f291d0f3890>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f291d0f3890>
 problem zz_1116142614 will take can be sampled with a single run
 problem zz_1116142614 will be solved 1 times per run
 start run 0 for problem zz_1116142614
   start samplings 1000 for problem zz_1116142614
sampled for problem zz_1116142614
 Queue sizes: problems_to_submit = 6, answers_to_write = 0
 Queue sizes: problems_to_submit = 6, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 6, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6820111222
sampled for problem zz_0291999630
finished samples sampling for zz_0291999630
 finished run 9 for problem zz_0291999630
 succesfully retrieved answer for problem {} zz_0291999630
 start working on problem zz_0742356033
 start writing answer for problem {} zz_0291999630
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f291cbe9c70>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f291cbe9c70>
 Queue sizes: problems_to_submit = 5, answers_to_write = 0
 problem zz_0742356033 will take can be sampled with a single run
 problem zz_0742356033 will be solved 1 times per run
 start run 0 for problem zz_0742356033
   start samplings 1000 for problem zz_0742356033
sampled for problem zz_0742356033
sampled for problem zz_9806083889
finished samples sampling for zz_9806083889
 finished run 9 for problem zz_9806083889
 succesfully retrieved answer for problem {} zz_9806083889
 start working on problem zz_1686890781
 start writing answer for problem {} zz_9806083889
sampled for problem zz_8633696827
finished samples sampling for zz_8633696827
 finished run 9 for problem zz_8633696827
sampled for problem zz_1860673799
finished samples sampling for zz_1860673799
 finished run 9 for problem zz_1860673799
sampled for problem zz_4496173481
finished samples sampling for zz_4496173481
 finished run 9 for problem zz_4496173481
sampled for problem zz_3984838668
finished samples sampling for zz_3984838668
 finished run 9 for problem zz_3984838668
 succesfully retrieved answer for problem {} zz_8633696827
 start working on problem zz_9425772738
 Queue sizes: problems_to_submit = 3, answers_to_write = 1
 problem zz_1686890781 will take can be sampled with a single run
 problem zz_1686890781 will be solved 1 times per run
 succesfully retrieved answer for problem {} zz_1860673799
 start working on problem zz_8678592529
 problem zz_9425772738 will take can be sampled with a single run
 problem zz_9425772738 will be solved 1 times per run
 succesfully retrieved answer for problem {} zz_4496173481
 start working on problem zz_7901044990
 succesfully retrieved answer for problem {} zz_3984838668
 start working on problem zz_2598524958
 start run 0 for problem zz_1686890781
   start samplings 1000 for problem zz_1686890781
 problem zz_8678592529 will take can be sampled with a single run
 problem zz_8678592529 will be solved 1 times per run
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f291cbe0ce0>
sampled for problem zz_1686890781
 start run 0 for problem zz_9425772738
   start samplings 1000 for problem zz_9425772738
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
sampled for problem zz_9425772738
sampled for problem zz_7155401937
finished samples sampling for zz_7155401937
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
sampled for problem zz_1451684479
finished samples sampling for zz_1451684479
 finished run 0 for problem zz_1451684479
 start run 1 for problem zz_1451684479
   start samplings 1000 for problem zz_1451684479
sampled for problem zz_1451684479
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
sampled for problem zz_0689312377
finished samples sampling for zz_0689312377
 finished run 0 for problem zz_0689312377
 start run 1 for problem zz_0689312377
   start samplings 1000 for problem zz_0689312377
sampled for problem zz_0689312377
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
sampled for problem zz_8074406757
finished samples sampling for zz_8074406757
 finished run 1 for problem zz_8074406757
 start run 2 for problem zz_8074406757
   start samplings 1000 for problem zz_8074406757
sampled for problem zz_8074406757
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
sampled for problem zz_4090347922
finished samples sampling for zz_4090347922
 finished run 0 for problem zz_4090347922
 start run 1 for problem zz_4090347922
   start samplings 1000 for problem zz_4090347922
sampled for problem zz_4090347922
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0255343551
 start writing answer for problem {} zz_5452407354
sampled for problem zz_9812242872
finished samples sampling for zz_9812242872
 finished run 0 for problem zz_9812242872
 start run 1 for problem zz_9812242872
   start samplings 1000 for problem zz_9812242872
sampled for problem zz_9812242872
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9cb4301fa0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9cb4301fa0>
sampled for problem zz_2487327787
finished samples sampling for zz_2487327787
 finished run 0 for problem zz_2487327787
 start run 1 for problem zz_2487327787
   start samplings 1000 for problem zz_2487327787
sampled for problem zz_2487327787
sampled for problem zz_9504682920
finished samples sampling for zz_9504682920
 finished run 0 for problem zz_9504682920
 start run 1 for problem zz_9504682920
   start samplings 1000 for problem zz_9504682920
sampled for problem zz_9504682920
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_9439897319
finished samples sampling for zz_9439897319
 finished run 0 for problem zz_9439897319
 start run 1 for problem zz_9439897319
   start samplings 1000 for problem zz_9439897319
sampled for problem zz_9439897319
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_1451684479
finished samples sampling for zz_1451684479
 finished run 1 for problem zz_1451684479
 start run 2 for problem zz_1451684479
   start samplings 1000 for problem zz_1451684479
sampled for problem zz_1451684479
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_5744954469
 start writing answer for problem {} zz_8884820367
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fed41b0a030>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fed41b0a030>
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
sampled for problem zz_5757275986
finished samples sampling for zz_5757275986
 finished run 0 for problem zz_5757275986
 start run 1 for problem zz_5757275986
   start samplings 1000 for problem zz_5757275986
sampled for problem zz_5757275986
sampled for problem zz_4863812233
finished samples sampling for zz_4863812233
 finished run 0 for problem zz_4863812233
 start run 1 for problem zz_4863812233
   start samplings 1000 for problem zz_4863812233
sampled for problem zz_4863812233
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_9283730726
 start writing answer for problem {} zz_0538469761
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7feca04e2120>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7feca04e2120>
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_1697148923
finished samples sampling for zz_1697148923
 finished run 1 for problem zz_1697148923
 start run 2 for problem zz_1697148923
   start samplings 1000 for problem zz_1697148923
sampled for problem zz_1697148923
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_3591442681
finished samples sampling for zz_3591442681
 finished run 2 for problem zz_3591442681
 start run 3 for problem zz_3591442681
   start samplings 1000 for problem zz_3591442681
sampled for problem zz_3591442681
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_9774242506
finished samples sampling for zz_9774242506
 finished run 1 for problem zz_9774242506
 start run 2 for problem zz_9774242506
   start samplings 1000 for problem zz_9774242506
sampled for problem zz_9774242506
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_3354126626
finished samples sampling for zz_3354126626
 finished run 1 for problem zz_3354126626
 start run 2 for problem zz_3354126626
   start samplings 1000 for problem zz_3354126626
sampled for problem zz_3354126626
sampled for problem zz_1121819247
finished samples sampling for zz_1121819247
 finished run 1 for problem zz_1121819247
 start run 2 for problem zz_1121819247
   start samplings 1000 for problem zz_1121819247
sampled for problem zz_1121819247
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_6864603226
finished samples sampling for zz_6864603226
 finished run 1 for problem zz_6864603226
 start run 2 for problem zz_6864603226
   start samplings 1000 for problem zz_6864603226
sampled for problem zz_6864603226
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_7899741822
 start writing answer for problem {} zz_3358737269
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f957d60c080>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f957d60c080>
sampled for problem zz_8941210343
finished samples sampling for zz_8941210343
 finished run 1 for problem zz_8941210343
 start run 2 for problem zz_8941210343
   start samplings 1000 for problem zz_8941210343
sampled for problem zz_8941210343
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_8890212945
finished samples sampling for zz_8890212945
 finished run 1 for problem zz_8890212945
 start run 2 for problem zz_8890212945
   start samplings 1000 for problem zz_8890212945
sampled for problem zz_8890212945
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_1445418313
finished samples sampling for zz_1445418313
 finished run 1 for problem zz_1445418313
 start run 2 for problem zz_1445418313
   start samplings 1000 for problem zz_1445418313
sampled for problem zz_1445418313
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_9873706342
finished samples sampling for zz_9873706342
 finished run 1 for problem zz_9873706342
 start run 2 for problem zz_9873706342
   start samplings 1000 for problem zz_9873706342
sampled for problem zz_9873706342
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6577828538
 start writing answer for problem {} zz_4983060353
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f96cd24d100>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f96cd24d100>
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_8705539192
finished samples sampling for zz_8705539192
 finished run 2 for problem zz_8705539192
 start run 3 for problem zz_8705539192
   start samplings 1000 for problem zz_8705539192
sampled for problem zz_8705539192
sampled for problem zz_7988238591
finished samples sampling for zz_7988238591
 finished run 2 for problem zz_7988238591
 start run 3 for problem zz_7988238591
   start samplings 1000 for problem zz_7988238591
sampled for problem zz_7988238591
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_1871566606
finished samples sampling for zz_1871566606
 finished run 2 for problem zz_1871566606
 start run 3 for problem zz_1871566606
   start samplings 1000 for problem zz_1871566606
sampled for problem zz_1871566606
sampled for problem zz_9585089572
finished samples sampling for zz_9585089572
 finished run 3 for problem zz_9585089572
 start run 4 for problem zz_9585089572
   start samplings 1000 for problem zz_9585089572
sampled for problem zz_9585089572
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'>
 problem zz_6600341654 will take can be sampled with a single run
 problem zz_6600341654 will be solved 1 times per run
 start run 0 for problem zz_6600341654
   start samplings 1000 for problem zz_6600341654
sampled for problem zz_6600341654
 problem zz_8036213424 will take can be sampled with a single run
 problem zz_8036213424 will be solved 1 times per run
 Queue sizes: problems_to_submit = 3, answers_to_write = 3
 problem zz_4518778851 will take can be sampled with a single run
 problem zz_4518778851 will be solved 1 times per run
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2ce2e1340>
 start run 0 for problem zz_8036213424
   start samplings 1000 for problem zz_8036213424
sampled for problem zz_8036213424
 start run 0 for problem zz_4518778851
   start samplings 1000 for problem zz_4518778851
sampled for problem zz_4518778851
 Queue sizes: problems_to_submit = 3, answers_to_write = 3
sampled for problem zz_0534179516
finished samples sampling for zz_0534179516
 finished run 9 for problem zz_0534179516
sampled for problem zz_3231454862
finished samples sampling for zz_3231454862
 finished run 9 for problem zz_3231454862
 succesfully retrieved answer for problem {} zz_0534179516
 start working on problem zz_0816389504
 succesfully retrieved answer for problem {} zz_3231454862
 start working on problem zz_8472903645
 problem zz_0816389504 will take can be sampled with a single run
 problem zz_0816389504 will be solved 1 times per run
 start run 0 for problem zz_0816389504
   start samplings 1000 for problem zz_0816389504
sampled for problem zz_0816389504
 Queue sizes: problems_to_submit = 1, answers_to_write = 5
 problem zz_8472903645 will take can be sampled with a single run
 problem zz_8472903645 will be solved 1 times per run
sampled for problem zz_2676805068
finished samples sampling for zz_2676805068
 finished run 9 for problem zz_2676805068
 start run 0 for problem zz_8472903645
   start samplings 1000 for problem zz_8472903645
sampled for problem zz_8472903645
 succesfully retrieved answer for problem {} zz_2676805068
 start working on problem zz_2750285710
 problem zz_2750285710 will take can be sampled with a single run
 problem zz_2750285710 will be solved 1 times per run
 start run 0 for problem zz_2750285710
   start samplings 1000 for problem zz_2750285710
sampled for problem zz_2750285710
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
sampled for problem zz_8061135779
finished samples sampling for zz_8061135779
 finished run 0 for problem zz_8061135779
 start run 1 for problem zz_8061135779
   start samplings 1000 for problem zz_8061135779
sampled for problem zz_8061135779
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
sampled for problem zz_5874969018
finished samples sampling for zz_5874969018
 finished run 0 for problem zz_5874969018
 start run 1 for problem zz_5874969018
   start samplings 1000 for problem zz_5874969018
sampled for problem zz_5874969018
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
sampled for problem zz_6600341654
finished samples sampling for zz_6600341654
 finished run 0 for problem zz_6600341654
 start run 1 for problem zz_6600341654
   start samplings 1000 for problem zz_6600341654
sampled for problem zz_6600341654
sampled for problem zz_8036213424
finished samples sampling for zz_8036213424
 finished run 0 for problem zz_8036213424
 start run 1 for problem zz_8036213424
   start samplings 1000 for problem zz_8036213424
sampled for problem zz_8036213424
sampled for problem zz_4518778851
finished samples sampling for zz_4518778851
 finished run 0 for problem zz_4518778851
 start run 1 for problem zz_4518778851
   start samplings 1000 for problem zz_4518778851
sampled for problem zz_4518778851
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_3511504764
 start writing answer for problem {} zz_4167523720
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe3944eea50>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe3944eea50>
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
sampled for problem zz_0816389504
finished samples sampling for zz_0816389504
 finished run 0 for problem zz_0816389504
 start run 1 for problem zz_0816389504
   start samplings 1000 for problem zz_0816389504
sampled for problem zz_0816389504
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
sampled for problem zz_8472903645
finished samples sampling for zz_8472903645
 finished run 0 for problem zz_8472903645
 start run 1 for problem zz_8472903645
   start samplings 1000 for problem zz_8472903645
sampled for problem zz_8472903645
sampled for problem zz_2750285710
finished samples sampling for zz_2750285710
 finished run 0 for problem zz_2750285710
 start run 1 for problem zz_2750285710
   start samplings 1000 for problem zz_2750285710
sampled for problem zz_2750285710
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_2720660293
 start writing answer for problem {} zz_6774697119
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9cb43008f0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9cb43008f0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_0689312377
finished samples sampling for zz_0689312377
 finished run 1 for problem zz_0689312377
 start run 2 for problem zz_0689312377
   start samplings 1000 for problem zz_0689312377
sampled for problem zz_0689312377
sampled for problem zz_8074406757
finished samples sampling for zz_8074406757
 finished run 2 for problem zz_8074406757
 start run 3 for problem zz_8074406757
   start samplings 1000 for problem zz_8074406757
sampled for problem zz_8074406757
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_4090347922
finished samples sampling for zz_4090347922
 finished run 1 for problem zz_4090347922
 start run 2 for problem zz_4090347922
   start samplings 1000 for problem zz_4090347922
sampled for problem zz_4090347922
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_9812242872
finished samples sampling for zz_9812242872
 finished run 1 for problem zz_9812242872
 start run 2 for problem zz_9812242872
   start samplings 1000 for problem zz_9812242872
sampled for problem zz_9812242872
sampled for problem zz_2487327787
finished samples sampling for zz_2487327787
 finished run 1 for problem zz_2487327787
 start run 2 for problem zz_2487327787
   start samplings 1000 for problem zz_2487327787
sampled for problem zz_2487327787
sampled for problem zz_9504682920
finished samples sampling for zz_9504682920
 finished run 1 for problem zz_9504682920
 start run 2 for problem zz_9504682920
   start samplings 1000 for problem zz_9504682920
sampled for problem zz_9504682920
sampled for problem zz_9439897319
finished samples sampling for zz_9439897319
 finished run 1 for problem zz_9439897319
 start run 2 for problem zz_9439897319
   start samplings 1000 for problem zz_9439897319
sampled for problem zz_9439897319
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6774697119
 start writing answer for problem {} zz_9471019571
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9c547e3e30>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9c547e3e30>
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_1451684479
finished samples sampling for zz_1451684479
 finished run 2 for problem zz_1451684479
 start run 3 for problem zz_1451684479
   start samplings 1000 for problem zz_1451684479
sampled for problem zz_1451684479
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)]) Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_8941210343
finished samples sampling for zz_8941210343
 finished run 2 for problem zz_8941210343
 start run 3 for problem zz_8941210343
   start samplings 1000 for problem zz_8941210343
sampled for problem zz_8941210343
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_3358737269
 start writing answer for problem {} zz_6074050616
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f958b59f2f0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f958b59f2f0>
sampled for problem zz_8890212945
finished samples sampling for zz_8890212945
 finished run 2 for problem zz_8890212945
 start run 3 for problem zz_8890212945
   start samplings 1000 for problem zz_8890212945
sampled for problem zz_8890212945
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1445418313
finished samples sampling for zz_1445418313
 finished run 2 for problem zz_1445418313
 start run 3 for problem zz_1445418313
   start samplings 1000 for problem zz_1445418313
sampled for problem zz_1445418313
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_9873706342
finished samples sampling for zz_9873706342
 finished run 2 for problem zz_9873706342
 start run 3 for problem zz_9873706342
   start samplings 1000 for problem zz_9873706342
sampled for problem zz_9873706342
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8705539192
finished samples sampling for zz_8705539192
 finished run 3 for problem zz_8705539192
 start run 4 for problem zz_8705539192
   start samplings 1000 for problem zz_8705539192
sampled for problem zz_8705539192
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_7988238591
finished samples sampling for zz_7988238591
 finished run 3 for problem zz_7988238591
 start run 4 for problem zz_7988238591
   start samplings 1000 for problem zz_7988238591
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7988238591
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_1871566606
finished samples sampling for zz_1871566606
 finished run 3 for problem zz_1871566606
 start run 4 for problem zz_1871566606
   start samplings 1000 for problem zz_1871566606
sampled for problem zz_1871566606
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_4983060353
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_9585089572
finished samples sampling for zz_9585089572
 finished run 4 for problem zz_9585089572
 start run 5 for problem zz_9585089572
   start samplings 1000 for problem zz_9585089572
sampled for problem zz_9585089572
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'>
 finished run 0 for problem zz_7155401937
 start run 1 for problem zz_7155401937
   start samplings 1000 for problem zz_7155401937
sampled for problem zz_7155401937
 start run 0 for problem zz_8678592529
   start samplings 1000 for problem zz_8678592529
 problem zz_7901044990 will take can be sampled with a single run
 problem zz_7901044990 will be solved 1 times per run
sampled for problem zz_8678592529
 problem zz_2598524958 will take can be sampled with a single run
 problem zz_2598524958 will be solved 1 times per run
 start run 0 for problem zz_7901044990
   start samplings 1000 for problem zz_7901044990
sampled for problem zz_7901044990
 start run 0 for problem zz_2598524958
   start samplings 1000 for problem zz_2598524958
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
sampled for problem zz_2598524958
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f291cbe0ce0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
sampled for problem zz_1116142614
finished samples sampling for zz_1116142614
 finished run 0 for problem zz_1116142614
 start run 1 for problem zz_1116142614
   start samplings 1000 for problem zz_1116142614
sampled for problem zz_1116142614
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
sampled for problem zz_0742356033
finished samples sampling for zz_0742356033
 finished run 0 for problem zz_0742356033
 start run 1 for problem zz_0742356033
   start samplings 1000 for problem zz_0742356033
sampled for problem zz_0742356033
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_9806083889
 start writing answer for problem {} zz_8633696827
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f27e1f10c50>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f27e1f10c50>
sampled for problem zz_1686890781
finished samples sampling for zz_1686890781
 finished run 0 for problem zz_1686890781
 start run 1 for problem zz_1686890781
   start samplings 1000 for problem zz_1686890781
sampled for problem zz_1686890781
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_9425772738
finished samples sampling for zz_9425772738
 finished run 0 for problem zz_9425772738
 start run 1 for problem zz_9425772738
   start samplings 1000 for problem zz_9425772738
sampled for problem zz_9425772738
sampled for problem zz_7155401937
finished samples sampling for zz_7155401937
 finished run 1 for problem zz_7155401937
 start run 2 for problem zz_7155401937
   start samplings 1000 for problem zz_7155401937
sampled for problem zz_7155401937
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_8678592529
finished samples sampling for zz_8678592529
 finished run 0 for problem zz_8678592529
 start run 1 for problem zz_8678592529
   start samplings 1000 for problem zz_8678592529
sampled for problem zz_7901044990
finished samples sampling for zz_7901044990
 finished run 0 for problem zz_7901044990
 start run 1 for problem zz_7901044990
   start samplings 1000 for problem zz_7901044990
sampled for problem zz_7901044990
sampled for problem zz_8678592529
sampled for problem zz_2598524958
finished samples sampling for zz_2598524958
 finished run 0 for problem zz_2598524958
 start run 1 for problem zz_2598524958
   start samplings 1000 for problem zz_2598524958
sampled for problem zz_2598524958
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_1116142614
finished samples sampling for zz_1116142614
 finished run 1 for problem zz_1116142614
 start run 2 for problem zz_1116142614
   start samplings 1000 for problem zz_1116142614
sampled for problem zz_1116142614
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8884820367
 start writing answer for problem {} zz_7063111329
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fed403e9430>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fed403e9430>
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_5757275986
finished samples sampling for zz_5757275986
 finished run 1 for problem zz_5757275986
 start run 2 for problem zz_5757275986
   start samplings 1000 for problem zz_5757275986
sampled for problem zz_5757275986
sampled for problem zz_4863812233
finished samples sampling for zz_4863812233
 finished run 1 for problem zz_4863812233
 start run 2 for problem zz_4863812233
   start samplings 1000 for problem zz_4863812233
sampled for problem zz_4863812233
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_1697148923
finished samples sampling for zz_1697148923
 finished run 2 for problem zz_1697148923
 start run 3 for problem zz_1697148923
   start samplings 1000 for problem zz_1697148923
sampled for problem zz_1697148923
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_3591442681
finished samples sampling for zz_3591442681
 finished run 3 for problem zz_3591442681
 start run 4 for problem zz_3591442681
   start samplings 1000 for problem zz_3591442681
sampled for problem zz_3591442681
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0538469761
 start writing answer for problem {} zz_7350679553
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fed404516d0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fed404516d0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_9774242506
finished samples sampling for zz_9774242506
 finished run 2 for problem zz_9774242506
 start run 3 for problem zz_9774242506
   start samplings 1000 for problem zz_9774242506
sampled for problem zz_9774242506
sampled for problem zz_3354126626
finished samples sampling for zz_3354126626
 finished run 2 for problem zz_3354126626
 start run 3 for problem zz_3354126626
   start samplings 1000 for problem zz_3354126626
sampled for problem zz_3354126626
sampled for problem zz_1121819247
finished samples sampling for zz_1121819247
 finished run 2 for problem zz_1121819247
 start run 3 for problem zz_1121819247
   start samplings 1000 for problem zz_1121819247
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_1121819247
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_6864603226
finished samples sampling for zz_6864603226
 finished run 2 for problem zz_6864603226
 start run 3 for problem zz_6864603226
   start samplings 1000 for problem zz_6864603226
sampled for problem zz_6864603226
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_5757275986
finished samples sampling for zz_5757275986
 finished run 2 for problem zz_5757275986
 start run 3 for problem zz_5757275986
   start samplings 1000 for problem zz_5757275986
   start samplings 1000 for problem zz_5080149557
sampled for problem zz_5080149557
sampled for problem zz_1078675606
finished samples sampling for zz_1078675606
 finished run 3 for problem zz_1078675606
 start run 4 for problem zz_1078675606
   start samplings 1000 for problem zz_1078675606
sampled for problem zz_1078675606
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2344528541
finished samples sampling for zz_2344528541
 finished run 3 for problem zz_2344528541
 start run 4 for problem zz_2344528541
   start samplings 1000 for problem zz_2344528541
sampled for problem zz_2344528541
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_6878848354
finished samples sampling for zz_6878848354
 finished run 4 for problem zz_6878848354
 start run 5 for problem zz_6878848354
   start samplings 1000 for problem zz_6878848354
sampled for problem zz_6878848354
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7476695043
finished samples sampling for zz_7476695043
 finished run 3 for problem zz_7476695043
 start run 4 for problem zz_7476695043
   start samplings 1000 for problem zz_7476695043
sampled for problem zz_7476695043
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0850550946
finished samples sampling for zz_0850550946
 finished run 3 for problem zz_0850550946
 start run 4 for problem zz_0850550946
   start samplings 1000 for problem zz_0850550946
sampled for problem zz_0850550946
sampled for problem zz_7146200131
finished samples sampling for zz_7146200131
 finished run 5 for problem zz_7146200131
 start run 6 for problem zz_7146200131
   start samplings 1000 for problem zz_7146200131
sampled for problem zz_7146200131
sampled for problem zz_3413098363
finished samples sampling for zz_3413098363
 finished run 4 for problem zz_3413098363
 start run 5 for problem zz_3413098363
   start samplings 1000 for problem zz_3413098363
sampled for problem zz_3413098363
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_5080149557
finished samples sampling for zz_5080149557
 finished run 4 for problem zz_5080149557
 start run 5 for problem zz_5080149557
   start samplings 1000 for problem zz_5080149557
sampled for problem zz_5080149557
sampled for problem zz_1078675606
finished samples sampling for zz_1078675606
 finished run 4 for problem zz_1078675606
 start run 5 for problem zz_1078675606
   start samplings 1000 for problem zz_1078675606
sampled for problem zz_1078675606
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2344528541
finished samples sampling for zz_2344528541
 finished run 4 for problem zz_2344528541
 start run 5 for problem zz_2344528541
   start samplings 1000 for problem zz_2344528541
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2344528541
sampled for problem zz_6878848354
finished samples sampling for zz_6878848354
 finished run 5 for problem zz_6878848354
 start run 6 for problem zz_6878848354
   start samplings 1000 for problem zz_6878848354
sampled for problem zz_6878848354
sampled for problem zz_7476695043
finished samples sampling for zz_7476695043
 finished run 4 for problem zz_7476695043
 start run 5 for problem zz_7476695043
   start samplings 1000 for problem zz_7476695043
sampled for problem zz_7476695043
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0850550946
finished samples sampling for zz_0850550946
 finished run 4 for problem zz_0850550946
 start run 5 for problem zz_0850550946
   start samplings 1000 for problem zz_0850550946
sampled for problem zz_0850550946
sampled for problem zz_7146200131
finished samples sampling for zz_7146200131
 finished run 6 for problem zz_7146200131
 start run 7 for problem zz_7146200131
   start samplings 1000 for problem zz_7146200131
sampled for problem zz_7146200131
sampled for problem zz_3413098363
finished samples sampling for zz_3413098363
 finished run 5 for problem zz_3413098363
 start run 6 for problem zz_3413098363
   start samplings 1000 for problem zz_3413098363
sampled for problem zz_3413098363
sampled for problem zz_5080149557
finished samples sampling for zz_5080149557
 finished run 5 for problem zz_5080149557
 start run 6 for problem zz_5080149557
   start samplings 1000 for problem zz_5080149557
sampled for problem zz_5080149557
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1078675606
finished samples sampling for zz_1078675606
 finished run 5 for problem zz_1078675606
 start run 6 for problem zz_1078675606
   start samplings 1000 for problem zz_1078675606
sampled for problem zz_1078675606
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2344528541
finished samples sampling for zz_2344528541
 finished run 5 for problem zz_2344528541
 start run 6 for problem zz_2344528541
   start samplings 1000 for problem zz_2344528541
sampled for problem zz_2344528541
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_6878848354
finished samples sampling for zz_6878848354
 finished run 6 for problem zz_6878848354
 start run 7 for problem zz_6878848354
   start samplings 1000 for problem zz_6878848354
sampled for problem zz_6878848354
sampled for problem zz_7476695043
finished samples sampling for zz_7476695043
 finished run 5 for problem zz_7476695043
 start run 6 for problem zz_7476695043
   start samplings 1000 for problem zz_7476695043
sampled for problem zz_7476695043
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0850550946
finished samples sampling for zz_0850550946
 finished run 5 for problem zz_0850550946
 start run 6 for problem zz_0850550946
   start samplings 1000 for problem zz_0850550946
sampled for problem zz_0850550946
sampled for problem zz_7146200131
finished samples sampling for zz_7146200131
 finished run 7 for problem zz_7146200131
 start run 8 for problem zz_7146200131
   start samplings 1000 for problem zz_7146200131
sampled for problem zz_7146200131
sampled for problem zz_3413098363
finished samples sampling for zz_3413098363
 finished run 6 for problem zz_3413098363
 start run 7 for problem zz_3413098363
   start samplings 1000 for problem zz_3413098363
sampled for problem zz_3413098363
sampled for problem zz_5080149557
finished samples sampling for zz_5080149557
 finished run 6 for problem zz_5080149557
 start run 7 for problem zz_5080149557
   start samplings 1000 for problem zz_5080149557
sampled for problem zz_5080149557
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1078675606
finished samples sampling for zz_1078675606
 finished run 6 for problem zz_1078675606
 start run 7 for problem zz_1078675606
   start samplings 1000 for problem zz_1078675606
sampled for problem zz_1078675606
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2344528541
finished samples sampling for zz_2344528541
 finished run 6 for problem zz_2344528541
 start run 7 for problem zz_2344528541 Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_5971996237
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_6489818378
finished samples sampling for zz_6489818378
 finished run 9 for problem zz_6489818378
 succesfully retrieved answer for problem {} zz_6489818378
 start working on problem zz_8537666218
 start writing answer for problem {} zz_6489818378
 problem zz_8537666218 will take can be sampled with a single run
 problem zz_8537666218 will be solved 1 times per run
 start run 0 for problem zz_8537666218
   start samplings 1000 for problem zz_8537666218
sampled for problem zz_8537666218
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8a14bfb440>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8a14bfb440>
 Queue sizes: problems_to_submit = 6, answers_to_write = 0
sampled for problem zz_4815697258
finished samples sampling for zz_4815697258
 finished run 9 for problem zz_4815697258
 succesfully retrieved answer for problem {} zz_4815697258
 start working on problem zz_3150467143
 start writing answer for problem {} zz_4815697258
sampled for problem zz_8942337152
finished samples sampling for zz_8942337152
 finished run 9 for problem zz_8942337152
 succesfully retrieved answer for problem {} zz_8942337152
 start working on problem zz_0724324444
 Queue sizes: problems_to_submit = 4, answers_to_write = 1
 problem zz_3150467143 will take can be sampled with a single run
 problem zz_3150467143 will be solved 1 times per run
sampled for problem zz_8276325827
finished samples sampling for zz_8276325827
 finished run 9 for problem zz_8276325827
sampled for problem zz_0931578977
finished samples sampling for zz_0931578977
 finished run 9 for problem zz_0931578977
sampled for problem zz_4709661397
finished samples sampling for zz_4709661397
 finished run 9 for problem zz_4709661397
sampled for problem zz_3851427014
finished samples sampling for zz_3851427014
 finished run 9 for problem zz_3851427014
sampled for problem zz_6184411292
finished samples sampling for zz_6184411292
 finished run 0 for problem zz_6184411292
 start run 1 for problem zz_6184411292
   start samplings 1000 for problem zz_6184411292
sampled for problem zz_6184411292
 problem zz_0724324444 will take can be sampled with a single run
 problem zz_0724324444 will be solved 1 times per run
 Queue sizes: problems_to_submit = 4, answers_to_write = 1
 start run 0 for problem zz_3150467143
   start samplings 1000 for problem zz_3150467143
sampled for problem zz_3150467143
 succesfully retrieved answer for problem {} zz_8276325827
 start working on problem zz_7827271507
 succesfully retrieved answer for problem {} zz_0931578977
 start working on problem zz_7973082253
 succesfully retrieved answer for problem {} zz_4709661397
 start working on problem zz_8474831389
 succesfully retrieved answer for problem {} zz_3851427014
 start working on problem zz_5487697862
 problem zz_7827271507 will take can be sampled with a single run
 problem zz_7827271507 will be solved 1 times per run
 start run 0 for problem zz_0724324444
   start samplings 1000 for problem zz_0724324444
sampled for problem zz_0724324444
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8a0f6f7380>
 problem zz_7973082253 will take can be sampled with a single run
 problem zz_7973082253 will be solved 1 times per run
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 problem zz_8474831389 will take can be sampled with a single run
 problem zz_8474831389 will be solved 1 times per run
 start run 0 for problem zz_7827271507
   start samplings 1000 for problem zz_7827271507
 problem zz_5487697862 will take can be sampled with a single run
 problem zz_5487697862 will be solved 1 times per run
sampled for problem zz_7827271507
 start run 0 for problem zz_7973082253
   start samplings 1000 for problem zz_7973082253
sampled for problem zz_7973082253
 start run 0 for problem zz_8474831389
   start samplings 1000 for problem zz_8474831389
sampled for problem zz_8474831389
 start run 0 for problem zz_5487697862
   start samplings 1000 for problem zz_5487697862
sampled for problem zz_5487697862
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8a0f6f7380>
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
sampled for problem zz_8537666218
finished samples sampling for zz_8537666218
 finished run 0 for problem zz_8537666218
 start run 1 for problem zz_8537666218
   start samplings 1000 for problem zz_8537666218
sampled for problem zz_8537666218
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
sampled for problem zz_6184411292
finished samples sampling for zz_6184411292
 finished run 1 for problem zz_6184411292
 start run 2 for problem zz_6184411292
   start samplings 1000 for problem zz_6184411292
sampled for problem zz_6184411292
sampled for problem zz_3150467143
finished samples sampling for zz_3150467143
 finished run 0 for problem zz_3150467143
 start run 1 for problem zz_3150467143
   start samplings 1000 for problem zz_3150467143
sampled for problem zz_3150467143
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
sampled for problem zz_0724324444
finished samples sampling for zz_0724324444
 finished run 0 for problem zz_0724324444
 start run 1 for problem zz_0724324444
   start samplings 1000 for problem zz_0724324444
sampled for problem zz_0724324444
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0893645049
 start writing answer for problem {} zz_4971361908
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2ced0a780>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2ced0a780>
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
sampled for problem zz_8061135779
finished samples sampling for zz_8061135779
 finished run 1 for problem zz_8061135779
 start run 2 for problem zz_8061135779
   start samplings 1000 for problem zz_8061135779
sampled for problem zz_8061135779
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
sampled for problem zz_5874969018
finished samples sampling for zz_5874969018
 finished run 1 for problem zz_5874969018
 start run 2 for problem zz_5874969018
   start samplings 1000 for problem zz_5874969018
sampled for problem zz_5874969018
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
sampled for problem zz_6600341654
finished samples sampling for zz_6600341654
 finished run 1 for problem zz_6600341654
 start run 2 for problem zz_6600341654
   start samplings 1000 for problem zz_6600341654
sampled for problem zz_6600341654
sampled for problem zz_8036213424
finished samples sampling for zz_8036213424
 finished run 1 for problem zz_8036213424
 start run 2 for problem zz_8036213424
   start samplings 1000 for problem zz_8036213424
sampled for problem zz_8036213424
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
sampled for problem zz_4518778851
finished samples sampling for zz_4518778851
 finished run 1 for problem zz_4518778851
 start run 2 for problem zz_4518778851
   start samplings 1000 for problem zz_4518778851
sampled for problem zz_4518778851
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 finished writing answer for problem {} zz_4167523720
 start writing answer for problem {} zz_3527907281
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe41438d310>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe41438d310>
sampled for problem zz_0816389504
finished samples sampling for zz_0816389504
 finished run 1 for problem zz_0816389504
 start run 2 for problem zz_0816389504
   start samplings 1000 for problem zz_0816389504
sampled for problem zz_0816389504
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_8472903645
finished samples sampling for zz_8472903645
 finished run 1 for problem zz_8472903645
 start run 2 for problem zz_8472903645
   start samplings 1000 for problem zz_8472903645
sampled for problem zz_8472903645
sampled for problem zz_2750285710
finished samples sampling for zz_2750285710
sampled for problem zz_5757275986
sampled for problem zz_4863812233
finished samples sampling for zz_4863812233
 finished run 2 for problem zz_4863812233
 start run 3 for problem zz_4863812233
   start samplings 1000 for problem zz_4863812233
sampled for problem zz_4863812233
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_7063111329
 start writing answer for problem {} zz_0163190663
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fed409f1d00>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fed409f1d00>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1697148923
finished samples sampling for zz_1697148923
 finished run 3 for problem zz_1697148923
 start run 4 for problem zz_1697148923
   start samplings 1000 for problem zz_1697148923
sampled for problem zz_1697148923
sampled for problem zz_3591442681
finished samples sampling for zz_3591442681
 finished run 4 for problem zz_3591442681
 start run 5 for problem zz_3591442681
   start samplings 1000 for problem zz_3591442681
sampled for problem zz_3591442681
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_7350679553
sampled for problem zz_9774242506
finished samples sampling for zz_9774242506
 finished run 3 for problem zz_9774242506
 start run 4 for problem zz_9774242506
   start samplings 1000 for problem zz_9774242506
sampled for problem zz_9774242506
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_3354126626
finished samples sampling for zz_3354126626
 finished run 3 for problem zz_3354126626
 start run 4 for problem zz_3354126626
   start samplings 1000 for problem zz_3354126626
sampled for problem zz_3354126626
sampled for problem zz_1121819247
finished samples sampling for zz_1121819247
 finished run 3 for problem zz_1121819247
 start run 4 for problem zz_1121819247
   start samplings 1000 for problem zz_1121819247
sampled for problem zz_1121819247
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 finished writing answer for problem {} zz_5452407354
 start writing answer for problem {} zz_0317017085
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9b0b0bb9e0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9b0b0bb9e0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0689312377
finished samples sampling for zz_0689312377
 finished run 2 for problem zz_0689312377
 start run 3 for problem zz_0689312377
   start samplings 1000 for problem zz_0689312377
sampled for problem zz_0689312377
sampled for problem zz_8074406757
finished samples sampling for zz_8074406757
 finished run 3 for problem zz_8074406757
 start run 4 for problem zz_8074406757
   start samplings 1000 for problem zz_8074406757
sampled for problem zz_8074406757
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_4090347922
finished samples sampling for zz_4090347922
 finished run 2 for problem zz_4090347922
 start run 3 for problem zz_4090347922
   start samplings 1000 for problem zz_4090347922
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_4090347922
sampled for problem zz_9812242872
finished samples sampling for zz_9812242872
 finished run 2 for problem zz_9812242872
 start run 3 for problem zz_9812242872
   start samplings 1000 for problem zz_9812242872
sampled for problem zz_9812242872
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2487327787
finished samples sampling for zz_2487327787
 finished run 2 for problem zz_2487327787
 start run 3 for problem zz_2487327787
   start samplings 1000 for problem zz_2487327787
sampled for problem zz_2487327787
sampled for problem zz_9504682920
finished samples sampling for zz_9504682920
 finished run 2 for problem zz_9504682920
 start run 3 for problem zz_9504682920
   start samplings 1000 for problem zz_9504682920
sampled for problem zz_9504682920
sampled for problem zz_9439897319
finished samples sampling for zz_9439897319
 finished run 2 for problem zz_9439897319
 start run 3 for problem zz_9439897319
   start samplings 1000 for problem zz_9439897319
sampled for problem zz_9439897319
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_1451684479
finished samples sampling for zz_1451684479
 finished run 3 for problem zz_1451684479
 start run 4 for problem zz_1451684479
   start samplings 1000 for problem zz_1451684479
sampled for problem zz_1451684479
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_9471019571
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0291999630
 start writing answer for problem {} zz_1860673799
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f290eb6a7e0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f290eb6a7e0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_0742356033
finished samples sampling for zz_0742356033
 finished run 1 for problem zz_0742356033
 start run 2 for problem zz_0742356033
   start samplings 1000 for problem zz_0742356033
sampled for problem zz_0742356033
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_1686890781
finished samples sampling for zz_1686890781
 finished run 1 for problem zz_1686890781
 start run 2 for problem zz_1686890781
   start samplings 1000 for problem zz_1686890781
sampled for problem zz_1686890781
sampled for problem zz_9425772738
finished samples sampling for zz_9425772738
 finished run 1 for problem zz_9425772738
 start run 2 for problem zz_9425772738
   start samplings 1000 for problem zz_9425772738
sampled for problem zz_9425772738
sampled for problem zz_7155401937
finished samples sampling for zz_7155401937
 finished run 2 for problem zz_7155401937
 start run 3 for problem zz_7155401937
   start samplings 1000 for problem zz_7155401937
sampled for problem zz_7155401937
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_7901044990
finished samples sampling for zz_7901044990
 finished run 1 for problem zz_7901044990
 start run 2 for problem zz_7901044990
   start samplings 1000 for problem zz_7901044990
sampled for problem zz_7901044990
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_8678592529
finished samples sampling for zz_8678592529
 finished run 1 for problem zz_8678592529
 start run 2 for problem zz_8678592529
   start samplings 1000 for problem zz_8678592529
sampled for problem zz_8678592529
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_2598524958
finished samples sampling for zz_2598524958
 finished run 1 for problem zz_2598524958
 start run 2 for problem zz_2598524958
   start samplings 1000 for problem zz_2598524958
sampled for problem zz_2598524958
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8633696827
 start writing answer for problem {} zz_4496173481
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f290da39880>
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f290da39880>
sampled for problem zz_1116142614
finished samples sampling for zz_1116142614
 finished run 2 for problem zz_1116142614
 start run 3 for problem zz_1116142614
   start samplings 1000 for problem zz_1116142614
sampled for problem zz_1116142614
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6489818378
 start writing answer for problem {} zz_8942337152
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8a0e2bd490>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8a0e2bd490>
sampled for problem zz_7827271507
finished samples sampling for zz_7827271507
 finished run 0 for problem zz_7827271507
 start run 1 for problem zz_7827271507
   start samplings 1000 for problem zz_7827271507
sampled for problem zz_7827271507
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
sampled for problem zz_7973082253
finished samples sampling for zz_7973082253
 finished run 0 for problem zz_7973082253
 start run 1 for problem zz_7973082253
   start samplings 1000 for problem zz_7973082253
sampled for problem zz_7973082253
sampled for problem zz_5487697862
finished samples sampling for zz_5487697862
 finished run 0 for problem zz_5487697862
 start run 1 for problem zz_5487697862
   start samplings 1000 for problem zz_5487697862
sampled for problem zz_8474831389
finished samples sampling for zz_8474831389
 finished run 0 for problem zz_8474831389
 start run 1 for problem zz_8474831389
   start samplings 1000 for problem zz_8474831389
sampled for problem zz_5487697862
sampled for problem zz_8474831389
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_4815697258
 start writing answer for problem {} zz_8276325827
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8a0e48d9d0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8a0e48d9d0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_8537666218
finished samples sampling for zz_8537666218
 finished run 1 for problem zz_8537666218
 start run 2 for problem zz_8537666218
   start samplings 1000 for problem zz_8537666218
sampled for problem zz_8537666218
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_6184411292
finished samples sampling for zz_6184411292
 finished run 2 for problem zz_6184411292
 start run 3 for problem zz_6184411292
   start samplings 1000 for problem zz_6184411292
sampled for problem zz_6184411292
sampled for problem zz_3150467143
finished samples sampling for zz_3150467143
 finished run 1 for problem zz_3150467143
 start run 2 for problem zz_3150467143
   start samplings 1000 for problem zz_3150467143
sampled for problem zz_3150467143
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'>
 finished run 1 for problem zz_2750285710
 start run 2 for problem zz_2750285710
   start samplings 1000 for problem zz_2750285710
sampled for problem zz_2750285710
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_4971361908
 start writing answer for problem {} zz_0534179516
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2d4f02000>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2d4f02000>
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_8061135779
finished samples sampling for zz_8061135779
 finished run 2 for problem zz_8061135779
 start run 3 for problem zz_8061135779
   start samplings 1000 for problem zz_8061135779
sampled for problem zz_8061135779
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_5874969018
finished samples sampling for zz_5874969018
 finished run 2 for problem zz_5874969018
 start run 3 for problem zz_5874969018
   start samplings 1000 for problem zz_5874969018
sampled for problem zz_5874969018
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_6600341654
finished samples sampling for zz_6600341654
 finished run 2 for problem zz_6600341654
 start run 3 for problem zz_6600341654
   start samplings 1000 for problem zz_6600341654
sampled for problem zz_6600341654
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_8036213424
finished samples sampling for zz_8036213424
 finished run 2 for problem zz_8036213424
 start run 3 for problem zz_8036213424
   start samplings 1000 for problem zz_8036213424
sampled for problem zz_8036213424
sampled for problem zz_4518778851
finished samples sampling for zz_4518778851
 finished run 2 for problem zz_4518778851
 start run 3 for problem zz_4518778851
   start samplings 1000 for problem zz_4518778851
sampled for problem zz_4518778851
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_0816389504
finished samples sampling for zz_0816389504
 finished run 2 for problem zz_0816389504
 start run 3 for problem zz_0816389504
   start samplings 1000 for problem zz_0816389504
sampled for problem zz_0816389504
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_8472903645
finished samples sampling for zz_8472903645
 finished run 2 for problem zz_8472903645
 start run 3 for problem zz_8472903645
   start samplings 1000 for problem zz_8472903645
sampled for problem zz_8472903645
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_2750285710
finished samples sampling for zz_2750285710
 finished run 2 for problem zz_2750285710
 start run 3 for problem zz_2750285710
   start samplings 1000 for problem zz_2750285710
sampled for problem zz_2750285710
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_8746424212
sampled for problem zz_3918938749
finished samples sampling for zz_3918938749
 finished run 3 for problem zz_3918938749
 start run 4 for problem zz_3918938749
   start samplings 1000 for problem zz_3918938749
sampled for problem zz_3918938749
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2654810283
finished samples sampling for zz_2654810283
 finished run 3 for problem zz_2654810283
 start run 4 for problem zz_2654810283
   start samplings 1000 for problem zz_2654810283
sampled for problem zz_2654810283
sampled for problem zz_9489144589
finished samples sampling for zz_9489144589
 finished run 4 for problem zz_9489144589
 start run 5 for problem zz_9489144589
   start samplings 1000 for problem zz_9489144589
sampled for problem zz_9489144589
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2068306658
finished samples sampling for zz_2068306658
 finished run 3 for problem zz_2068306658
 start run 4 for problem zz_2068306658
   start samplings 1000 for problem zz_2068306658
sampled for problem zz_2068306658
sampled for problem zz_4526454422
finished samples sampling for zz_4526454422
 finished run 3 for problem zz_4526454422
 start run 4 for problem zz_4526454422
   start samplings 1000 for problem zz_4526454422
sampled for problem zz_4526454422
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_5004330110
finished samples sampling for zz_5004330110
 finished run 3 for problem zz_5004330110
 start run 4 for problem zz_5004330110
   start samplings 1000 for problem zz_5004330110
sampled for problem zz_5004330110
sampled for problem zz_0802311939
finished samples sampling for zz_0802311939
 finished run 3 for problem zz_0802311939
 start run 4 for problem zz_0802311939
   start samplings 1000 for problem zz_0802311939
sampled for problem zz_0802311939
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8746424212
finished samples sampling for zz_8746424212
 finished run 3 for problem zz_8746424212
 start run 4 for problem zz_8746424212
   start samplings 1000 for problem zz_8746424212
sampled for problem zz_8746424212
sampled for problem zz_3918938749
finished samples sampling for zz_3918938749
 finished run 4 for problem zz_3918938749
 start run 5 for problem zz_3918938749
   start samplings 1000 for problem zz_3918938749
sampled for problem zz_3918938749
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2654810283
finished samples sampling for zz_2654810283
 finished run 4 for problem zz_2654810283
 start run 5 for problem zz_2654810283
   start samplings 1000 for problem zz_2654810283
sampled for problem zz_2654810283
sampled for problem zz_9489144589
finished samples sampling for zz_9489144589
 finished run 5 for problem zz_9489144589
 start run 6 for problem zz_9489144589
   start samplings 1000 for problem zz_9489144589
sampled for problem zz_9489144589
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2068306658
finished samples sampling for zz_2068306658
 finished run 4 for problem zz_2068306658
 start run 5 for problem zz_2068306658
   start samplings 1000 for problem zz_2068306658
sampled for problem zz_2068306658
sampled for problem zz_4526454422
finished samples sampling for zz_4526454422
 finished run 4 for problem zz_4526454422
 start run 5 for problem zz_4526454422
   start samplings 1000 for problem zz_4526454422
sampled for problem zz_4526454422
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_5004330110
finished samples sampling for zz_5004330110
 finished run 4 for problem zz_5004330110
 start run 5 for problem zz_5004330110
   start samplings 1000 for problem zz_5004330110
sampled for problem zz_5004330110
sampled for problem zz_0802311939
finished samples sampling for zz_0802311939
 finished run 4 for problem zz_0802311939
 start run 5 for problem zz_0802311939
   start samplings 1000 for problem zz_0802311939
sampled for problem zz_0802311939
sampled for problem zz_8746424212
finished samples sampling for zz_8746424212
 finished run 4 for problem zz_8746424212
 start run 5 for problem zz_8746424212
   start samplings 1000 for problem zz_8746424212
sampled for problem zz_8746424212
sampled for problem zz_3918938749
finished samples sampling for zz_3918938749
 finished run 5 for problem zz_3918938749
 start run 6 for problem zz_3918938749
   start samplings 1000 for problem zz_3918938749
sampled for problem zz_3918938749
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2654810283
finished samples sampling for zz_2654810283
 finished run 5 for problem zz_2654810283
 start run 6 for problem zz_2654810283
   start samplings 1000 for problem zz_2654810283
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2654810283
sampled for problem zz_9489144589
finished samples sampling for zz_9489144589
 finished run 6 for problem zz_9489144589
 start run 7 for problem zz_9489144589
   start samplings 1000 for problem zz_9489144589
sampled for problem zz_9489144589
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2068306658
finished samples sampling for zz_2068306658
 finished run 5 for problem zz_2068306658
 start run 6 for problem zz_2068306658
   start samplings 1000 for problem zz_2068306658
sampled for problem zz_2068306658
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_4526454422
finished samples sampling for zz_4526454422
 finished run 5 for problem zz_4526454422
 start run 6 for problem zz_4526454422
   start samplings 1000 for problem zz_4526454422
sampled for problem zz_4526454422
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_5004330110
finished samples sampling for zz_5004330110
 finished run 5 for problem zz_5004330110
 start run 6 for problem zz_5004330110
   start samplings 1000 for problem zz_5004330110
sampled for problem zz_5004330110
sampled for problem zz_0802311939
finished samples sampling for zz_0802311939
 finished run 5 for problem zz_0802311939
 start run 6 for problem zz_0802311939
   start samplings 1000 for problem zz_0802311939
sampled for problem zz_0802311939
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8746424212
finished samples sampling for zz_8746424212
 finished run 5 for problem zz_8746424212
 start run 6 for problem zz_8746424212
   start samplings 1000 for problem zz_8746424212
sampled for problem zz_8746424212
sampled for problem zz_3918938749
finished samples sampling for zz_3918938749
 finished run 6 for problem zz_3918938749
 start run 7 for problem zz_3918938749
   start samplings 1000 for problem zz_3918938749
sampled for problem zz_3918938749
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2654810283
finished samples sampling for zz_2654810283
 finished run 6 for problem zz_2654810283
 start run 7 for problem zz_2654810283
   start samplings 1000 for problem zz_2654810283
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_1860673799
 start writing answer for problem {} zz_3984838668
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f290da1c290>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f290da1c290>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0742356033
finished samples sampling for zz_0742356033
 finished run 2 for problem zz_0742356033
 start run 3 for problem zz_0742356033
   start samplings 1000 for problem zz_0742356033
sampled for problem zz_0742356033
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1686890781
finished samples sampling for zz_1686890781
 finished run 2 for problem zz_1686890781
 start run 3 for problem zz_1686890781
   start samplings 1000 for problem zz_1686890781
sampled for problem zz_1686890781
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_9425772738
finished samples sampling for zz_9425772738
 finished run 2 for problem zz_9425772738
 start run 3 for problem zz_9425772738
   start samplings 1000 for problem zz_9425772738
sampled for problem zz_9425772738
sampled for problem zz_7155401937
finished samples sampling for zz_7155401937
 finished run 3 for problem zz_7155401937
 start run 4 for problem zz_7155401937
   start samplings 1000 for problem zz_7155401937
sampled for problem zz_7155401937
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7901044990
finished samples sampling for zz_7901044990
 finished run 2 for problem zz_7901044990
 start run 3 for problem zz_7901044990
   start samplings 1000 for problem zz_7901044990
sampled for problem zz_7901044990
sampled for problem zz_8678592529
finished samples sampling for zz_8678592529
 finished run 2 for problem zz_8678592529
 start run 3 for problem zz_8678592529
   start samplings 1000 for problem zz_8678592529
sampled for problem zz_8678592529
sampled for problem zz_2598524958
finished samples sampling for zz_2598524958
 finished run 2 for problem zz_2598524958
 start run 3 for problem zz_2598524958
   start samplings 1000 for problem zz_2598524958
sampled for problem zz_2598524958
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_3984838668
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_0724324444
finished samples sampling for zz_0724324444
 finished run 1 for problem zz_0724324444
 start run 2 for problem zz_0724324444
   start samplings 1000 for problem zz_0724324444
sampled for problem zz_0724324444
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8942337152
 start writing answer for problem {} zz_0931578977
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8c97216de0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8c97216de0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_7827271507
finished samples sampling for zz_7827271507
 finished run 1 for problem zz_7827271507
 start run 2 for problem zz_7827271507
   start samplings 1000 for problem zz_7827271507
sampled for problem zz_7827271507
sampled for problem zz_7973082253
finished samples sampling for zz_7973082253
 finished run 1 for problem zz_7973082253
 start run 2 for problem zz_7973082253
   start samplings 1000 for problem zz_7973082253
sampled for problem zz_7973082253
sampled for problem zz_8474831389
finished samples sampling for zz_8474831389
 finished run 1 for problem zz_8474831389
 start run 2 for problem zz_8474831389
   start samplings 1000 for problem zz_8474831389
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_8474831389
sampled for problem zz_5487697862
finished samples sampling for zz_5487697862
 finished run 1 for problem zz_5487697862
 start run 2 for problem zz_5487697862
   start samplings 1000 for problem zz_5487697862
sampled for problem zz_5487697862
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 finished writing answer for problem {} zz_8276325827
 start writing answer for problem {} zz_4709661397
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8a0f8111c0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8a0f8111c0>
sampled for problem zz_8537666218
finished samples sampling for zz_8537666218
 finished run 2 for problem zz_8537666218
 start run 3 for problem zz_8537666218
   start samplings 1000 for problem zz_8537666218
sampled for problem zz_8537666218
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
   start samplings 1000 for problem zz_2344528541
sampled for problem zz_2344528541
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_6878848354
finished samples sampling for zz_6878848354
 finished run 7 for problem zz_6878848354
 start run 8 for problem zz_6878848354
   start samplings 1000 for problem zz_6878848354
sampled for problem zz_6878848354
sampled for problem zz_7476695043
finished samples sampling for zz_7476695043
 finished run 6 for problem zz_7476695043
 start run 7 for problem zz_7476695043
   start samplings 1000 for problem zz_7476695043
sampled for problem zz_7476695043
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0850550946
finished samples sampling for zz_0850550946
 finished run 6 for problem zz_0850550946
 start run 7 for problem zz_0850550946
   start samplings 1000 for problem zz_0850550946
sampled for problem zz_0850550946
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7146200131
finished samples sampling for zz_7146200131
 finished run 8 for problem zz_7146200131
 start run 9 for problem zz_7146200131
   start samplings 1000 for problem zz_7146200131
sampled for problem zz_7146200131
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_3413098363
finished samples sampling for zz_3413098363
 finished run 7 for problem zz_3413098363
 start run 8 for problem zz_3413098363
   start samplings 1000 for problem zz_3413098363
sampled for problem zz_3413098363
sampled for problem zz_5080149557
finished samples sampling for zz_5080149557
 finished run 7 for problem zz_5080149557
 start run 8 for problem zz_5080149557
   start samplings 1000 for problem zz_5080149557
sampled for problem zz_5080149557
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1078675606
finished samples sampling for zz_1078675606
 finished run 7 for problem zz_1078675606
 start run 8 for problem zz_1078675606
   start samplings 1000 for problem zz_1078675606
sampled for problem zz_1078675606
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2344528541
finished samples sampling for zz_2344528541
 finished run 7 for problem zz_2344528541
 start run 8 for problem zz_2344528541
   start samplings 1000 for problem zz_2344528541
sampled for problem zz_2344528541
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_6878848354
finished samples sampling for zz_6878848354
 finished run 8 for problem zz_6878848354
 start run 9 for problem zz_6878848354
   start samplings 1000 for problem zz_6878848354
sampled for problem zz_6878848354
sampled for problem zz_7476695043
finished samples sampling for zz_7476695043
 finished run 7 for problem zz_7476695043
 start run 8 for problem zz_7476695043
   start samplings 1000 for problem zz_7476695043
sampled for problem zz_7476695043
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7146200131
finished samples sampling for zz_7146200131
 finished run 9 for problem zz_7146200131
 succesfully retrieved answer for problem {} zz_7146200131
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_7146200131
sampled for problem zz_0850550946
finished samples sampling for zz_0850550946
 finished run 7 for problem zz_0850550946
 start run 8 for problem zz_0850550946
   start samplings 1000 for problem zz_0850550946
sampled for problem zz_0850550946
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f60921c1520>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f60921c1520>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_3413098363
finished samples sampling for zz_3413098363
 finished run 8 for problem zz_3413098363
 start run 9 for problem zz_3413098363
   start samplings 1000 for problem zz_3413098363
sampled for problem zz_3413098363
sampled for problem zz_5080149557
finished samples sampling for zz_5080149557
 finished run 8 for problem zz_5080149557
 start run 9 for problem zz_5080149557
   start samplings 1000 for problem zz_5080149557
sampled for problem zz_5080149557
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1078675606
finished samples sampling for zz_1078675606
 finished run 8 for problem zz_1078675606
 start run 9 for problem zz_1078675606
   start samplings 1000 for problem zz_1078675606
sampled for problem zz_1078675606
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_7146200131
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2344528541
finished samples sampling for zz_2344528541
 finished run 8 for problem zz_2344528541
 start run 9 for problem zz_2344528541
   start samplings 1000 for problem zz_2344528541
sampled for problem zz_2344528541
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0534179516
 start writing answer for problem {} zz_3231454862
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2ce1c1670>
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2ce1c1670>
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 finished writing answer for problem {} zz_3527907281
 start writing answer for problem {} zz_2676805068
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2d44f2a50>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2d44f2a50>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8061135779
finished samples sampling for zz_8061135779
 finished run 3 for problem zz_8061135779
 start run 4 for problem zz_8061135779
   start samplings 1000 for problem zz_8061135779
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8061135779
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_5874969018
finished samples sampling for zz_5874969018
 finished run 3 for problem zz_5874969018
 start run 4 for problem zz_5874969018
   start samplings 1000 for problem zz_5874969018
sampled for problem zz_5874969018
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_6600341654
finished samples sampling for zz_6600341654
 finished run 3 for problem zz_6600341654
 start run 4 for problem zz_6600341654
   start samplings 1000 for problem zz_6600341654
sampled for problem zz_6600341654
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8036213424
finished samples sampling for zz_8036213424
 finished run 3 for problem zz_8036213424
 start run 4 for problem zz_8036213424
   start samplings 1000 for problem zz_8036213424
sampled for problem zz_8036213424
sampled for problem zz_4518778851
finished samples sampling for zz_4518778851
 finished run 3 for problem zz_4518778851
 start run 4 for problem zz_4518778851
   start samplings 1000 for problem zz_4518778851
sampled for problem zz_4518778851
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_2676805068
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)]) Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_8941210343
finished samples sampling for zz_8941210343
 finished run 3 for problem zz_8941210343
 start run 4 for problem zz_8941210343
   start samplings 1000 for problem zz_8941210343
sampled for problem zz_8941210343
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6074050616
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8890212945
finished samples sampling for zz_8890212945
 finished run 3 for problem zz_8890212945
 start run 4 for problem zz_8890212945
   start samplings 1000 for problem zz_8890212945
sampled for problem zz_8890212945
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1445418313
finished samples sampling for zz_1445418313
 finished run 3 for problem zz_1445418313
 start run 4 for problem zz_1445418313
   start samplings 1000 for problem zz_1445418313
sampled for problem zz_1445418313
sampled for problem zz_9873706342
finished samples sampling for zz_9873706342
 finished run 3 for problem zz_9873706342
 start run 4 for problem zz_9873706342
   start samplings 1000 for problem zz_9873706342
sampled for problem zz_9873706342
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8705539192
finished samples sampling for zz_8705539192
 finished run 4 for problem zz_8705539192
 start run 5 for problem zz_8705539192
   start samplings 1000 for problem zz_8705539192
sampled for problem zz_8705539192
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7988238591
finished samples sampling for zz_7988238591
 finished run 4 for problem zz_7988238591
 start run 5 for problem zz_7988238591
   start samplings 1000 for problem zz_7988238591
sampled for problem zz_7988238591
sampled for problem zz_1871566606
finished samples sampling for zz_1871566606
 finished run 4 for problem zz_1871566606
 start run 5 for problem zz_1871566606
   start samplings 1000 for problem zz_1871566606
sampled for problem zz_1871566606
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_9585089572
finished samples sampling for zz_9585089572
 finished run 5 for problem zz_9585089572
 start run 6 for problem zz_9585089572
   start samplings 1000 for problem zz_9585089572
sampled for problem zz_9585089572
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8941210343
finished samples sampling for zz_8941210343
 finished run 4 for problem zz_8941210343
 start run 5 for problem zz_8941210343
   start samplings 1000 for problem zz_8941210343
sampled for problem zz_8941210343
sampled for problem zz_8890212945
finished samples sampling for zz_8890212945
 finished run 4 for problem zz_8890212945
 start run 5 for problem zz_8890212945
   start samplings 1000 for problem zz_8890212945
sampled for problem zz_8890212945
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1445418313
finished samples sampling for zz_1445418313
 finished run 4 for problem zz_1445418313
 start run 5 for problem zz_1445418313
   start samplings 1000 for problem zz_1445418313
sampled for problem zz_1445418313
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_9873706342
finished samples sampling for zz_9873706342
 finished run 4 for problem zz_9873706342
 start run 5 for problem zz_9873706342
   start samplings 1000 for problem zz_9873706342
sampled for problem zz_9873706342
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8705539192
finished samples sampling for zz_8705539192
 finished run 5 for problem zz_8705539192
 start run 6 for problem zz_8705539192
   start samplings 1000 for problem zz_8705539192
sampled for problem zz_8705539192
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7988238591
finished samples sampling for zz_7988238591
 finished run 5 for problem zz_7988238591
 start run 6 for problem zz_7988238591
   start samplings 1000 for problem zz_7988238591
sampled for problem zz_7988238591
sampled for problem zz_1871566606
finished samples sampling for zz_1871566606
 finished run 5 for problem zz_1871566606
 start run 6 for problem zz_1871566606
   start samplings 1000 for problem zz_1871566606
sampled for problem zz_1871566606
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_9585089572
finished samples sampling for zz_9585089572
 finished run 6 for problem zz_9585089572
 start run 7 for problem zz_9585089572
   start samplings 1000 for problem zz_9585089572
sampled for problem zz_9585089572
sampled for problem zz_8941210343
finished samples sampling for zz_8941210343
 finished run 5 for problem zz_8941210343
 start run 6 for problem zz_8941210343
   start samplings 1000 for problem zz_8941210343
sampled for problem zz_8941210343
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8890212945
finished samples sampling for zz_8890212945
 finished run 5 for problem zz_8890212945
 start run 6 for problem zz_8890212945
   start samplings 1000 for problem zz_8890212945
sampled for problem zz_8890212945
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1445418313
finished samples sampling for zz_1445418313
 finished run 5 for problem zz_1445418313
 start run 6 for problem zz_1445418313
   start samplings 1000 for problem zz_1445418313
sampled for problem zz_1445418313
sampled for problem zz_9873706342
finished samples sampling for zz_9873706342
 finished run 5 for problem zz_9873706342
 start run 6 for problem zz_9873706342
   start samplings 1000 for problem zz_9873706342
sampled for problem zz_9873706342
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_4709661397
 start writing answer for problem {} zz_3851427014
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8a1434c6e0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8a1434c6e0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_6184411292
finished samples sampling for zz_6184411292
 finished run 3 for problem zz_6184411292
 start run 4 for problem zz_6184411292
   start samplings 1000 for problem zz_6184411292
sampled for problem zz_6184411292
sampled for problem zz_3150467143
finished samples sampling for zz_3150467143
 finished run 2 for problem zz_3150467143
 start run 3 for problem zz_3150467143
   start samplings 1000 for problem zz_3150467143
sampled for problem zz_3150467143
sampled for problem zz_0724324444
finished samples sampling for zz_0724324444
 finished run 2 for problem zz_0724324444
 start run 3 for problem zz_0724324444
   start samplings 1000 for problem zz_0724324444
sampled for problem zz_0724324444
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7827271507
finished samples sampling for zz_7827271507
 finished run 2 for problem zz_7827271507
 start run 3 for problem zz_7827271507
   start samplings 1000 for problem zz_7827271507
sampled for problem zz_7827271507
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7973082253
finished samples sampling for zz_7973082253
 finished run 2 for problem zz_7973082253
 start run 3 for problem zz_7973082253
   start samplings 1000 for problem zz_7973082253
sampled for problem zz_7973082253
sampled for problem zz_8474831389
finished samples sampling for zz_8474831389
 finished run 2 for problem zz_8474831389
 start run 3 for problem zz_8474831389
   start samplings 1000 for problem zz_8474831389
sampled for problem zz_8474831389
sampled for problem zz_5487697862
finished samples sampling for zz_5487697862
 finished run 2 for problem zz_5487697862
 start run 3 for problem zz_5487697862
   start samplings 1000 for problem zz_5487697862
sampled for problem zz_5487697862
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0931578977
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_6878848354
finished samples sampling for zz_6878848354
 finished run 9 for problem zz_6878848354
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 succesfully retrieved answer for problem {} zz_6878848354
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_6878848354
sampled for problem zz_7476695043
finished samples sampling for zz_7476695043
 finished run 8 for problem zz_7476695043
 start run 9 for problem zz_7476695043
   start samplings 1000 for problem zz_7476695043
sampled for problem zz_7476695043
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f63ec7a6a20>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f63ec7a6a20>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0850550946
finished samples sampling for zz_0850550946
 finished run 8 for problem zz_0850550946
 start run 9 for problem zz_0850550946
   start samplings 1000 for problem zz_0850550946
sampled for problem zz_0850550946
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6878848354
sampled for problem zz_3413098363
finished samples sampling for zz_3413098363
 finished run 9 for problem zz_3413098363
 succesfully retrieved answer for problem {} zz_3413098363
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_3413098363
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f61d9fb72f0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f61d9fb72f0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_5080149557
finished samples sampling for zz_5080149557
 finished run 9 for problem zz_5080149557
 succesfully retrieved answer for problem {} zz_5080149557
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_5080149557
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f61d9b04590>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f61d9b04590>
sampled for problem zz_1078675606
finished samples sampling for zz_1078675606
 finished run 9 for problem zz_1078675606
 succesfully retrieved answer for problem {} zz_1078675606
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_2344528541
finished samples sampling for zz_2344528541
 finished run 9 for problem zz_2344528541
 succesfully retrieved answer for problem {} zz_2344528541
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_7476695043
finished samples sampling for zz_7476695043
 finished run 9 for problem zz_7476695043
 succesfully retrieved answer for problem {} zz_7476695043
 submitter queue is empty, will wait at barrier for all submitters to finish.
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0163190663
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_6864603226
finished samples sampling for zz_6864603226
 finished run 3 for problem zz_6864603226
 start run 4 for problem zz_6864603226
   start samplings 1000 for problem zz_6864603226
sampled for problem zz_6864603226
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_5757275986
finished samples sampling for zz_5757275986
 finished run 3 for problem zz_5757275986
 start run 4 for problem zz_5757275986
   start samplings 1000 for problem zz_5757275986
sampled for problem zz_5757275986
sampled for problem zz_4863812233
finished samples sampling for zz_4863812233
 finished run 3 for problem zz_4863812233
 start run 4 for problem zz_4863812233
   start samplings 1000 for problem zz_4863812233
sampled for problem zz_4863812233
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1697148923
finished samples sampling for zz_1697148923
 finished run 4 for problem zz_1697148923
 start run 5 for problem zz_1697148923
   start samplings 1000 for problem zz_1697148923
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1697148923
sampled for problem zz_3591442681
finished samples sampling for zz_3591442681
 finished run 5 for problem zz_3591442681
 start run 6 for problem zz_3591442681
   start samplings 1000 for problem zz_3591442681
sampled for problem zz_3591442681
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_9774242506
finished samples sampling for zz_9774242506
 finished run 4 for problem zz_9774242506
 start run 5 for problem zz_9774242506
   start samplings 1000 for problem zz_9774242506
sampled for problem zz_9774242506
sampled for problem zz_3354126626
finished samples sampling for zz_3354126626
 finished run 4 for problem zz_3354126626
 start run 5 for problem zz_3354126626
   start samplings 1000 for problem zz_3354126626
sampled for problem zz_3354126626
sampled for problem zz_1121819247
finished samples sampling for zz_1121819247
 finished run 4 for problem zz_1121819247
 start run 5 for problem zz_1121819247
   start samplings 1000 for problem zz_1121819247
sampled for problem zz_1121819247
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_6864603226
finished samples sampling for zz_6864603226
 finished run 4 for problem zz_6864603226
 start run 5 for problem zz_6864603226
   start samplings 1000 for problem zz_6864603226
sampled for problem zz_6864603226
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_5757275986
finished samples sampling for zz_5757275986
 finished run 4 for problem zz_5757275986
 start run 5 for problem zz_5757275986
   start samplings 1000 for problem zz_5757275986
sampled for problem zz_5757275986
sampled for problem zz_4863812233
finished samples sampling for zz_4863812233
 finished run 4 for problem zz_4863812233
 start run 5 for problem zz_4863812233
   start samplings 1000 for problem zz_4863812233
sampled for problem zz_4863812233
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_3591442681
finished samples sampling for zz_3591442681
 finished run 6 for problem zz_3591442681
 start run 7 for problem zz_3591442681
   start samplings 1000 for problem zz_3591442681
sampled for problem zz_3591442681
sampled for problem zz_1697148923
finished samples sampling for zz_1697148923
 finished run 5 for problem zz_1697148923
 start run 6 for problem zz_1697148923
   start samplings 1000 for problem zz_1697148923
sampled for problem zz_1697148923
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_9774242506
finished samples sampling for zz_9774242506
 finished run 5 for problem zz_9774242506
 start run 6 for problem zz_9774242506
   start samplings 1000 for problem zz_9774242506
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_9774242506
sampled for problem zz_3354126626
finished samples sampling for zz_3354126626
 finished run 5 for problem zz_3354126626
 start run 6 for problem zz_3354126626
   start samplings 1000 for problem zz_3354126626
sampled for problem zz_3354126626
sampled for problem zz_1121819247
finished samples sampling for zz_1121819247
 finished run 5 for problem zz_1121819247
 start run 6 for problem zz_1121819247
   start samplings 1000 for problem zz_1121819247
sampled for problem zz_1121819247
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_6864603226
finished samples sampling for zz_6864603226
 finished run 5 for problem zz_6864603226
 start run 6 for problem zz_6864603226
   start samplings 1000 for problem zz_6864603226
sampled for problem zz_6864603226
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_5757275986
finished samples sampling for zz_5757275986
 finished run 5 for problem zz_5757275986
 start run 6 for problem zz_5757275986
   start samplings 1000 for problem zz_5757275986
sampled for problem zz_5757275986
sampled for problem zz_4863812233
finished samples sampling for zz_4863812233
 finished run 5 for problem zz_4863812233
 start run 6 for problem zz_4863812233
   start samplings 1000 for problem zz_4863812233
sampled for problem zz_4863812233
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_3591442681
finished samples sampling for zz_3591442681
 finished run 7 for problem zz_3591442681
 start run 8 for problem zz_3591442681
   start samplings 1000 for problem zz_3591442681
sampled for problem zz_3591442681
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0317017085
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0689312377
finished samples sampling for zz_0689312377
 finished run 3 for problem zz_0689312377
 start run 4 for problem zz_0689312377
   start samplings 1000 for problem zz_0689312377
sampled for problem zz_0689312377
sampled for problem zz_8074406757
finished samples sampling for zz_8074406757
 finished run 4 for problem zz_8074406757
 start run 5 for problem zz_8074406757
   start samplings 1000 for problem zz_8074406757
sampled for problem zz_8074406757
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_4090347922
finished samples sampling for zz_4090347922
 finished run 3 for problem zz_4090347922
 start run 4 for problem zz_4090347922
   start samplings 1000 for problem zz_4090347922
sampled for problem zz_4090347922
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_9812242872
finished samples sampling for zz_9812242872
 finished run 3 for problem zz_9812242872
 start run 4 for problem zz_9812242872
   start samplings 1000 for problem zz_9812242872
sampled for problem zz_9812242872
sampled for problem zz_2487327787
finished samples sampling for zz_2487327787
 finished run 3 for problem zz_2487327787
 start run 4 for problem zz_2487327787
   start samplings 1000 for problem zz_2487327787
sampled for problem zz_2487327787
sampled for problem zz_9504682920
finished samples sampling for zz_9504682920
 finished run 3 for problem zz_9504682920
 start run 4 for problem zz_9504682920
   start samplings 1000 for problem zz_9504682920
sampled for problem zz_9504682920
sampled for problem zz_9439897319
finished samples sampling for zz_9439897319
 finished run 3 for problem zz_9439897319
 start run 4 for problem zz_9439897319
   start samplings 1000 for problem zz_9439897319
sampled for problem zz_9439897319
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1451684479
finished samples sampling for zz_1451684479
 finished run 4 for problem zz_1451684479
 start run 5 for problem zz_1451684479
   start samplings 1000 for problem zz_1451684479
sampled for problem zz_1451684479
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0689312377
finished samples sampling for zz_0689312377
 finished run 4 for problem zz_0689312377
 start run 5 for problem zz_0689312377
   start samplings 1000 for problem zz_0689312377
sampled for problem zz_0689312377
sampled for problem zz_8074406757
finished samples sampling for zz_8074406757
 finished run 5 for problem zz_8074406757
 start run 6 for problem zz_8074406757
   start samplings 1000 for problem zz_8074406757
sampled for problem zz_8074406757
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_4090347922
finished samples sampling for zz_4090347922
 finished run 4 for problem zz_4090347922
 start run 5 for problem zz_4090347922
   start samplings 1000 for problem zz_4090347922
sampled for problem zz_4090347922
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_9812242872
finished samples sampling for zz_9812242872
 finished run 4 for problem zz_9812242872
 start run 5 for problem zz_9812242872
   start samplings 1000 for problem zz_9812242872
sampled for problem zz_9812242872
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2487327787
finished samples sampling for zz_2487327787
 finished run 4 for problem zz_2487327787
 start run 5 for problem zz_2487327787
   start samplings 1000 for problem zz_2487327787
sampled for problem zz_2487327787
sampled for problem zz_9504682920
finished samples sampling for zz_9504682920
 finished run 4 for problem zz_9504682920
 start run 5 for problem zz_9504682920
   start samplings 1000 for problem zz_9504682920
sampled for problem zz_9504682920
sampled for problem zz_9439897319
finished samples sampling for zz_9439897319
 finished run 4 for problem zz_9439897319
 start run 5 for problem zz_9439897319
   start samplings 1000 for problem zz_9439897319
sampled for problem zz_9439897319
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1451684479
finished samples sampling for zz_1451684479
 finished run 5 for problem zz_1451684479
 start run 6 for problem zz_1451684479
   start samplings 1000 for problem zz_1451684479
sampled for problem zz_1451684479
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0689312377
finished samples sampling for zz_0689312377
 finished run 5 for problem zz_0689312377
 start run 6 for problem zz_0689312377
   start samplings 1000 for problem zz_0689312377
sampled for problem zz_0689312377
sampled for problem zz_8074406757
finished samples sampling for zz_8074406757
 finished run 6 for problem zz_8074406757
 start run 7 for problem zz_8074406757
   start samplings 1000 for problem zz_8074406757
sampled for problem zz_8074406757
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_4090347922
finished samples sampling for zz_4090347922
 finished run 5 for problem zz_4090347922
 start run 6 for problem zz_4090347922
   start samplings 1000 for problem zz_4090347922
sampled for problem zz_4090347922
sampled for problem zz_9812242872
finished samples sampling for zz_9812242872
 finished run 5 for problem zz_9812242872
 start run 6 for problem zz_9812242872
   start samplings 1000 for problem zz_9812242872
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_9812242872
sampled for problem zz_2487327787
finished samples sampling for zz_2487327787
 finished run 5 for problem zz_2487327787
 start run 6 for problem zz_2487327787
   start samplings 1000 for problem zz_2487327787
sampled for problem zz_2487327787
sampled for problem zz_9504682920
finished samples sampling for zz_9504682920
 finished run 5 for problem zz_9504682920
 start run 6 for problem zz_9504682920
   start samplings 1000 for problem zz_9504682920
sampled for problem zz_9504682920
sampled for problem zz_9439897319
finished samples sampling for zz_9439897319
 finished run 5 for problem zz_9439897319
 start run 6 for problem zz_9439897319
   start samplings 1000 for problem zz_9439897319
sampled for problem zz_9439897319
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1451684479
finished samples sampling for zz_1451684479
 finished run 6 for problem zz_1451684479
 start run 7 for problem zz_1451684479
   start samplings 1000 for problem zz_1451684479
sampled for problem zz_2654810283
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_9489144589
finished samples sampling for zz_9489144589
 finished run 7 for problem zz_9489144589
 start run 8 for problem zz_9489144589
   start samplings 1000 for problem zz_9489144589
sampled for problem zz_9489144589
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2068306658
finished samples sampling for zz_2068306658
 finished run 6 for problem zz_2068306658
 start run 7 for problem zz_2068306658
   start samplings 1000 for problem zz_2068306658
sampled for problem zz_2068306658
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_4526454422
finished samples sampling for zz_4526454422
 finished run 6 for problem zz_4526454422
 start run 7 for problem zz_4526454422
   start samplings 1000 for problem zz_4526454422
sampled for problem zz_4526454422
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_5004330110
finished samples sampling for zz_5004330110
 finished run 6 for problem zz_5004330110
 start run 7 for problem zz_5004330110
   start samplings 1000 for problem zz_5004330110
sampled for problem zz_5004330110
sampled for problem zz_0802311939
finished samples sampling for zz_0802311939
 finished run 6 for problem zz_0802311939
 start run 7 for problem zz_0802311939
   start samplings 1000 for problem zz_0802311939
sampled for problem zz_0802311939
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_3918938749
finished samples sampling for zz_3918938749
 finished run 7 for problem zz_3918938749
 start run 8 for problem zz_3918938749
   start samplings 1000 for problem zz_3918938749
sampled for problem zz_3918938749
sampled for problem zz_8746424212
finished samples sampling for zz_8746424212
 finished run 6 for problem zz_8746424212
 start run 7 for problem zz_8746424212
   start samplings 1000 for problem zz_8746424212
sampled for problem zz_8746424212
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2654810283
finished samples sampling for zz_2654810283
 finished run 7 for problem zz_2654810283
 start run 8 for problem zz_2654810283
   start samplings 1000 for problem zz_2654810283
sampled for problem zz_2654810283
sampled for problem zz_9489144589
finished samples sampling for zz_9489144589
 finished run 8 for problem zz_9489144589
 start run 9 for problem zz_9489144589
   start samplings 1000 for problem zz_9489144589
sampled for problem zz_9489144589
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2068306658
finished samples sampling for zz_2068306658
 finished run 7 for problem zz_2068306658
 start run 8 for problem zz_2068306658
   start samplings 1000 for problem zz_2068306658
sampled for problem zz_2068306658
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_4526454422
finished samples sampling for zz_4526454422
 finished run 7 for problem zz_4526454422
 start run 8 for problem zz_4526454422
   start samplings 1000 for problem zz_4526454422
sampled for problem zz_4526454422
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_5004330110
finished samples sampling for zz_5004330110
 finished run 7 for problem zz_5004330110
 start run 8 for problem zz_5004330110
   start samplings 1000 for problem zz_5004330110
sampled for problem zz_5004330110
sampled for problem zz_0802311939
finished samples sampling for zz_0802311939
 finished run 7 for problem zz_0802311939
 start run 8 for problem zz_0802311939
   start samplings 1000 for problem zz_0802311939
sampled for problem zz_0802311939
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_3918938749
finished samples sampling for zz_3918938749
 finished run 8 for problem zz_3918938749
 start run 9 for problem zz_3918938749
   start samplings 1000 for problem zz_3918938749
sampled for problem zz_3918938749
sampled for problem zz_8746424212
finished samples sampling for zz_8746424212
 finished run 7 for problem zz_8746424212
 start run 8 for problem zz_8746424212
   start samplings 1000 for problem zz_8746424212
sampled for problem zz_8746424212
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2654810283
finished samples sampling for zz_2654810283
 finished run 8 for problem zz_2654810283
 start run 9 for problem zz_2654810283
   start samplings 1000 for problem zz_2654810283
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2654810283
sampled for problem zz_9489144589
finished samples sampling for zz_9489144589
 finished run 9 for problem zz_9489144589
 succesfully retrieved answer for problem {} zz_9489144589
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_9489144589
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f65e8627020>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f65e8627020>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2068306658
finished samples sampling for zz_2068306658
 finished run 8 for problem zz_2068306658
 start run 9 for problem zz_2068306658
   start samplings 1000 for problem zz_2068306658
sampled for problem zz_2068306658
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_4526454422
finished samples sampling for zz_4526454422
 finished run 8 for problem zz_4526454422
 start run 9 for problem zz_4526454422
   start samplings 1000 for problem zz_4526454422
sampled for problem zz_4526454422
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'>
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_5080149557
 start writing answer for problem {} zz_1078675606
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f61d9d9a960>
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f61d9d9a960>
sampled for problem zz_0850550946
finished samples sampling for zz_0850550946
 finished run 9 for problem zz_0850550946
 succesfully retrieved answer for problem {} zz_0850550946
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Joined all submitter threads.
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_3413098363
 start writing answer for problem {} zz_2344528541
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f61d964e6c0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f61d964e6c0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_2344528541
 start writing answer for problem {} zz_7476695043
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f61d964c770>
elif concurrent.futures.thread.ThreadPoolExecutor
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_3231454862
sampled for problem zz_0816389504
finished samples sampling for zz_0816389504
 finished run 3 for problem zz_0816389504
 start run 4 for problem zz_0816389504
   start samplings 1000 for problem zz_0816389504
sampled for problem zz_0816389504
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8472903645
finished samples sampling for zz_8472903645
 finished run 3 for problem zz_8472903645
 start run 4 for problem zz_8472903645
   start samplings 1000 for problem zz_8472903645
sampled for problem zz_8472903645
sampled for problem zz_2750285710
finished samples sampling for zz_2750285710
 finished run 3 for problem zz_2750285710
 start run 4 for problem zz_2750285710
   start samplings 1000 for problem zz_2750285710
sampled for problem zz_2750285710
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8061135779
finished samples sampling for zz_8061135779
 finished run 4 for problem zz_8061135779
 start run 5 for problem zz_8061135779
   start samplings 1000 for problem zz_8061135779
sampled for problem zz_8061135779
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_5874969018
finished samples sampling for zz_5874969018
 finished run 4 for problem zz_5874969018
 start run 5 for problem zz_5874969018
   start samplings 1000 for problem zz_5874969018
sampled for problem zz_5874969018
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_6600341654
finished samples sampling for zz_6600341654
 finished run 4 for problem zz_6600341654
 start run 5 for problem zz_6600341654
   start samplings 1000 for problem zz_6600341654
sampled for problem zz_6600341654
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8036213424
finished samples sampling for zz_8036213424
 finished run 4 for problem zz_8036213424
 start run 5 for problem zz_8036213424
   start samplings 1000 for problem zz_8036213424
sampled for problem zz_8036213424
sampled for problem zz_4518778851
finished samples sampling for zz_4518778851
 finished run 4 for problem zz_4518778851
 start run 5 for problem zz_4518778851
   start samplings 1000 for problem zz_4518778851
sampled for problem zz_4518778851
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0816389504
finished samples sampling for zz_0816389504
 finished run 4 for problem zz_0816389504
 start run 5 for problem zz_0816389504
   start samplings 1000 for problem zz_0816389504
sampled for problem zz_0816389504
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8472903645
finished samples sampling for zz_8472903645
 finished run 4 for problem zz_8472903645
 start run 5 for problem zz_8472903645
   start samplings 1000 for problem zz_8472903645
sampled for problem zz_8472903645
sampled for problem zz_2750285710
finished samples sampling for zz_2750285710
 finished run 4 for problem zz_2750285710
 start run 5 for problem zz_2750285710
   start samplings 1000 for problem zz_2750285710
sampled for problem zz_2750285710
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8061135779
finished samples sampling for zz_8061135779
 finished run 5 for problem zz_8061135779
 start run 6 for problem zz_8061135779
   start samplings 1000 for problem zz_8061135779
sampled for problem zz_8061135779
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_5874969018
finished samples sampling for zz_5874969018
 finished run 5 for problem zz_5874969018
 start run 6 for problem zz_5874969018
   start samplings 1000 for problem zz_5874969018
sampled for problem zz_5874969018
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_6600341654
finished samples sampling for zz_6600341654
 finished run 5 for problem zz_6600341654
 start run 6 for problem zz_6600341654
   start samplings 1000 for problem zz_6600341654
sampled for problem zz_6600341654
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8036213424
finished samples sampling for zz_8036213424
 finished run 5 for problem zz_8036213424
 start run 6 for problem zz_8036213424
   start samplings 1000 for problem zz_8036213424
sampled for problem zz_8036213424
sampled for problem zz_4518778851
finished samples sampling for zz_4518778851
 finished run 5 for problem zz_4518778851
 start run 6 for problem zz_4518778851
   start samplings 1000 for problem zz_4518778851
sampled for problem zz_4518778851
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0816389504
finished samples sampling for zz_0816389504
 finished run 5 for problem zz_0816389504
 start run 6 for problem zz_0816389504
   start samplings 1000 for problem zz_0816389504
sampled for problem zz_0816389504
sampled for problem zz_8472903645
finished samples sampling for zz_8472903645
 finished run 5 for problem zz_8472903645
 start run 6 for problem zz_8472903645
   start samplings 1000 for problem zz_8472903645
sampled for problem zz_8472903645
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2750285710
finished samples sampling for zz_2750285710
 finished run 5 for problem zz_2750285710
 start run 6 for problem zz_2750285710
   start samplings 1000 for problem zz_2750285710
sampled for problem zz_2750285710
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f61d964c770>
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_1078675606
 start writing answer for problem {} zz_0850550946
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f61d977c4a0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f61d977c4a0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_7476695043
 writer queue is empty and event_flag_submitters_should_work is not set (all submitters should have finished by now), so writer will also finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)]) Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_4496173481
sampled for problem zz_1116142614
finished samples sampling for zz_1116142614
 finished run 3 for problem zz_1116142614
 start run 4 for problem zz_1116142614
   start samplings 1000 for problem zz_1116142614
sampled for problem zz_1116142614
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0742356033
finished samples sampling for zz_0742356033
 finished run 3 for problem zz_0742356033
 start run 4 for problem zz_0742356033
   start samplings 1000 for problem zz_0742356033
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0742356033
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1686890781
finished samples sampling for zz_1686890781
 finished run 3 for problem zz_1686890781
 start run 4 for problem zz_1686890781
   start samplings 1000 for problem zz_1686890781
sampled for problem zz_1686890781
sampled for problem zz_9425772738
finished samples sampling for zz_9425772738
 finished run 3 for problem zz_9425772738
 start run 4 for problem zz_9425772738
   start samplings 1000 for problem zz_9425772738
sampled for problem zz_9425772738
sampled for problem zz_7155401937
finished samples sampling for zz_7155401937
 finished run 4 for problem zz_7155401937
 start run 5 for problem zz_7155401937
   start samplings 1000 for problem zz_7155401937
sampled for problem zz_7155401937
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7901044990
finished samples sampling for zz_7901044990
 finished run 3 for problem zz_7901044990
 start run 4 for problem zz_7901044990
   start samplings 1000 for problem zz_7901044990
sampled for problem zz_7901044990
sampled for problem zz_8678592529
finished samples sampling for zz_8678592529
 finished run 3 for problem zz_8678592529
 start run 4 for problem zz_8678592529
   start samplings 1000 for problem zz_8678592529
sampled for problem zz_8678592529
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2598524958
finished samples sampling for zz_2598524958
 finished run 3 for problem zz_2598524958
 start run 4 for problem zz_2598524958
   start samplings 1000 for problem zz_2598524958
sampled for problem zz_2598524958
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1116142614
finished samples sampling for zz_1116142614
 finished run 4 for problem zz_1116142614
 start run 5 for problem zz_1116142614
   start samplings 1000 for problem zz_1116142614
sampled for problem zz_1116142614
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0742356033
finished samples sampling for zz_0742356033
 finished run 4 for problem zz_0742356033
 start run 5 for problem zz_0742356033
   start samplings 1000 for problem zz_0742356033
sampled for problem zz_0742356033
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1686890781
finished samples sampling for zz_1686890781
 finished run 4 for problem zz_1686890781
 start run 5 for problem zz_1686890781
   start samplings 1000 for problem zz_1686890781
sampled for problem zz_1686890781
sampled for problem zz_9425772738
finished samples sampling for zz_9425772738
 finished run 4 for problem zz_9425772738
 start run 5 for problem zz_9425772738
   start samplings 1000 for problem zz_9425772738
sampled for problem zz_9425772738
sampled for problem zz_7155401937
finished samples sampling for zz_7155401937
 finished run 5 for problem zz_7155401937
 start run 6 for problem zz_7155401937
   start samplings 1000 for problem zz_7155401937
sampled for problem zz_7155401937
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7901044990
finished samples sampling for zz_7901044990
 finished run 4 for problem zz_7901044990
 start run 5 for problem zz_7901044990
   start samplings 1000 for problem zz_7901044990
sampled for problem zz_7901044990
sampled for problem zz_8678592529
finished samples sampling for zz_8678592529
 finished run 4 for problem zz_8678592529
 start run 5 for problem zz_8678592529
   start samplings 1000 for problem zz_8678592529
sampled for problem zz_8678592529
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2598524958
finished samples sampling for zz_2598524958
 finished run 4 for problem zz_2598524958
 start run 5 for problem zz_2598524958
   start samplings 1000 for problem zz_2598524958
sampled for problem zz_2598524958
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1116142614
finished samples sampling for zz_1116142614
 finished run 5 for problem zz_1116142614
 start run 6 for problem zz_1116142614
   start samplings 1000 for problem zz_1116142614
sampled for problem zz_1116142614
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0742356033
finished samples sampling for zz_0742356033
 finished run 5 for problem zz_0742356033
 start run 6 for problem zz_0742356033
   start samplings 1000 for problem zz_0742356033
sampled for problem zz_0742356033
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1686890781
finished samples sampling for zz_1686890781
 finished run 5 for problem zz_1686890781
 start run 6 for problem zz_1686890781
   start samplings 1000 for problem zz_1686890781
sampled for problem zz_1686890781
sampled for problem zz_9425772738
finished samples sampling for zz_9425772738
 finished run 5 for problem zz_9425772738
 start run 6 for problem zz_9425772738
   start samplings 1000 for problem zz_9425772738
sampled for problem zz_9425772738
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7155401937
finished samples sampling for zz_7155401937
 finished run 6 for problem zz_7155401937
 start run 7 for problem zz_7155401937
   start samplings 1000 for problem zz_7155401937
sampled for problem zz_7155401937
sampled for problem zz_7901044990
finished samples sampling for zz_7901044990
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0850550946
 writer queue is empty and event_flag_submitters_should_work is not set (all submitters should have finished by now), so writer will also finish.
 Joined all writer threads.
 Is queue_problems_to_submit empty: True
 Is queue_answers_to_write empty: True
Execution finished.

sampled for problem zz_8705539192
finished samples sampling for zz_8705539192
 finished run 6 for problem zz_8705539192
 start run 7 for problem zz_8705539192
   start samplings 1000 for problem zz_8705539192
sampled for problem zz_8705539192
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7988238591
finished samples sampling for zz_7988238591
 finished run 6 for problem zz_7988238591
 start run 7 for problem zz_7988238591
   start samplings 1000 for problem zz_7988238591
sampled for problem zz_7988238591
sampled for problem zz_1871566606
finished samples sampling for zz_1871566606
 finished run 6 for problem zz_1871566606
 start run 7 for problem zz_1871566606
   start samplings 1000 for problem zz_1871566606
sampled for problem zz_1871566606
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_9585089572
finished samples sampling for zz_9585089572
 finished run 7 for problem zz_9585089572
 start run 8 for problem zz_9585089572
   start samplings 1000 for problem zz_9585089572
sampled for problem zz_9585089572
sampled for problem zz_8941210343
finished samples sampling for zz_8941210343
 finished run 6 for problem zz_8941210343
 start run 7 for problem zz_8941210343
   start samplings 1000 for problem zz_8941210343
sampled for problem zz_8941210343
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8890212945
finished samples sampling for zz_8890212945
 finished run 6 for problem zz_8890212945
 start run 7 for problem zz_8890212945
   start samplings 1000 for problem zz_8890212945
sampled for problem zz_8890212945
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1445418313
finished samples sampling for zz_1445418313
 finished run 6 for problem zz_1445418313
 start run 7 for problem zz_1445418313
   start samplings 1000 for problem zz_1445418313
sampled for problem zz_1445418313
sampled for problem zz_9873706342
finished samples sampling for zz_9873706342
 finished run 6 for problem zz_9873706342
 start run 7 for problem zz_9873706342
   start samplings 1000 for problem zz_9873706342
sampled for problem zz_9873706342
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8705539192
finished samples sampling for zz_8705539192
 finished run 7 for problem zz_8705539192
 start run 8 for problem zz_8705539192
   start samplings 1000 for problem zz_8705539192
sampled for problem zz_8705539192
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7988238591
finished samples sampling for zz_7988238591
 finished run 7 for problem zz_7988238591
 start run 8 for problem zz_7988238591
   start samplings 1000 for problem zz_7988238591
sampled for problem zz_7988238591
sampled for problem zz_1871566606
finished samples sampling for zz_1871566606
 finished run 7 for problem zz_1871566606
 start run 8 for problem zz_1871566606
   start samplings 1000 for problem zz_1871566606
sampled for problem zz_1871566606
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_9585089572
finished samples sampling for zz_9585089572
 finished run 8 for problem zz_9585089572
 start run 9 for problem zz_9585089572
   start samplings 1000 for problem zz_9585089572
sampled for problem zz_9585089572
sampled for problem zz_8941210343
finished samples sampling for zz_8941210343
 finished run 7 for problem zz_8941210343
 start run 8 for problem zz_8941210343
   start samplings 1000 for problem zz_8941210343
sampled for problem zz_8941210343
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8890212945
finished samples sampling for zz_8890212945
 finished run 7 for problem zz_8890212945
 start run 8 for problem zz_8890212945
   start samplings 1000 for problem zz_8890212945
sampled for problem zz_8890212945
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1445418313
finished samples sampling for zz_1445418313
 finished run 7 for problem zz_1445418313
 start run 8 for problem zz_1445418313
   start samplings 1000 for problem zz_1445418313
sampled for problem zz_1445418313
sampled for problem zz_9873706342
finished samples sampling for zz_9873706342
 finished run 7 for problem zz_9873706342
 start run 8 for problem zz_9873706342
   start samplings 1000 for problem zz_9873706342
sampled for problem zz_9873706342
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8705539192
finished samples sampling for zz_8705539192
 finished run 8 for problem zz_8705539192
 start run 9 for problem zz_8705539192
   start samplings 1000 for problem zz_8705539192
sampled for problem zz_8705539192
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7988238591
finished samples sampling for zz_7988238591
 finished run 8 for problem zz_7988238591
 start run 9 for problem zz_7988238591
   start samplings 1000 for problem zz_7988238591
sampled for problem zz_7988238591
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1871566606
finished samples sampling for zz_1871566606
 finished run 8 for problem zz_1871566606
 start run 9 for problem zz_1871566606
   start samplings 1000 for problem zz_1871566606
sampled for problem zz_1871566606
sampled for problem zz_9585089572
finished samples sampling for zz_9585089572
 finished run 9 for problem zz_9585089572
 succesfully retrieved answer for problem {} zz_9585089572
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 start writing answer for problem {} zz_9585089572
sampled for problem zz_8941210343
finished samples sampling for zz_8941210343
 finished run 8 for problem zz_8941210343
 start run 9 for problem zz_8941210343
   start samplings 1000 for problem zz_8941210343
sampled for problem zz_8941210343
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f98ac7ee570>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f98ac7ee570>
sampled for problem zz_8890212945
finished samples sampling for zz_8890212945
 finished run 8 for problem zz_8890212945
 start run 9 for problem zz_8890212945
   start samplings 1000 for problem zz_8890212945
sampled for problem zz_8890212945
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1445418313
finished samples sampling for zz_1445418313
 finished run 8 for problem zz_1445418313
 start run 9 for problem zz_1445418313
   start samplings 1000 for problem zz_1445418313
sampled for problem zz_1445418313
sampled for problem zz_9873706342
finished samples sampling for zz_9873706342
 finished run 8 for problem zz_9873706342
 start run 9 for problem zz_9873706342
   start samplings 1000 for problem zz_9873706342
sampled for problem zz_9873706342
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)]) Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_9489144589
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_5004330110
finished samples sampling for zz_5004330110
 finished run 8 for problem zz_5004330110
 start run 9 for problem zz_5004330110
   start samplings 1000 for problem zz_5004330110
sampled for problem zz_5004330110
sampled for problem zz_0802311939
finished samples sampling for zz_0802311939
 finished run 8 for problem zz_0802311939
 start run 9 for problem zz_0802311939
   start samplings 1000 for problem zz_0802311939
sampled for problem zz_0802311939
sampled for problem zz_3918938749
finished samples sampling for zz_3918938749
 finished run 9 for problem zz_3918938749
 succesfully retrieved answer for problem {} zz_3918938749
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_3918938749
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f64a8481b20>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f64a8481b20>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8746424212
finished samples sampling for zz_8746424212
 finished run 8 for problem zz_8746424212
 start run 9 for problem zz_8746424212
   start samplings 1000 for problem zz_8746424212
sampled for problem zz_8746424212
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_3918938749
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2654810283
finished samples sampling for zz_2654810283
 finished run 9 for problem zz_2654810283
 succesfully retrieved answer for problem {} zz_2654810283
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_2654810283
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f64035e1b80>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f64035e1b80>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2068306658
finished samples sampling for zz_2068306658
 finished run 9 for problem zz_2068306658
 succesfully retrieved answer for problem {} zz_2068306658
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_2068306658
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f6403120d40>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f6403120d40>
sampled for problem zz_4526454422
finished samples sampling for zz_4526454422
 finished run 9 for problem zz_4526454422
 succesfully retrieved answer for problem {} zz_4526454422
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_5004330110
finished samples sampling for zz_5004330110
 finished run 9 for problem zz_5004330110
 succesfully retrieved answer for problem {} zz_5004330110
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_0802311939
finished samples sampling for zz_0802311939
 finished run 9 for problem zz_0802311939
sampled for problem zz_8746424212
finished samples sampling for zz_8746424212
 finished run 9 for problem zz_8746424212
 succesfully retrieved answer for problem {} zz_0802311939
 submitter queue is empty, will wait at barrier for all submitters to finish.
 succesfully retrieved answer for problem {} zz_8746424212
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Joined all submitter threads.
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_3851427014
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8537666218
finished samples sampling for zz_8537666218
 finished run 3 for problem zz_8537666218
 start run 4 for problem zz_8537666218
   start samplings 1000 for problem zz_8537666218
sampled for problem zz_8537666218
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_6184411292
finished samples sampling for zz_6184411292
 finished run 4 for problem zz_6184411292
 start run 5 for problem zz_6184411292
   start samplings 1000 for problem zz_6184411292
sampled for problem zz_6184411292
sampled for problem zz_3150467143
finished samples sampling for zz_3150467143
 finished run 3 for problem zz_3150467143
 start run 4 for problem zz_3150467143
   start samplings 1000 for problem zz_3150467143
sampled for problem zz_3150467143
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0724324444
finished samples sampling for zz_0724324444
 finished run 3 for problem zz_0724324444
 start run 4 for problem zz_0724324444
   start samplings 1000 for problem zz_0724324444
sampled for problem zz_0724324444
sampled for problem zz_7827271507
finished samples sampling for zz_7827271507
 finished run 3 for problem zz_7827271507
 start run 4 for problem zz_7827271507
   start samplings 1000 for problem zz_7827271507
sampled for problem zz_7827271507
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7973082253
finished samples sampling for zz_7973082253
 finished run 3 for problem zz_7973082253
 start run 4 for problem zz_7973082253
   start samplings 1000 for problem zz_7973082253
sampled for problem zz_7973082253
sampled for problem zz_8474831389
finished samples sampling for zz_8474831389
 finished run 3 for problem zz_8474831389
 start run 4 for problem zz_8474831389
   start samplings 1000 for problem zz_8474831389
sampled for problem zz_8474831389
sampled for problem zz_5487697862
finished samples sampling for zz_5487697862
 finished run 3 for problem zz_5487697862
 start run 4 for problem zz_5487697862
   start samplings 1000 for problem zz_5487697862
sampled for problem zz_5487697862
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8537666218
finished samples sampling for zz_8537666218
 finished run 4 for problem zz_8537666218
 start run 5 for problem zz_8537666218
   start samplings 1000 for problem zz_8537666218
sampled for problem zz_8537666218
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_6184411292
finished samples sampling for zz_6184411292
 finished run 5 for problem zz_6184411292
 start run 6 for problem zz_6184411292
   start samplings 1000 for problem zz_6184411292
sampled for problem zz_6184411292
sampled for problem zz_3150467143
finished samples sampling for zz_3150467143
 finished run 4 for problem zz_3150467143
 start run 5 for problem zz_3150467143
   start samplings 1000 for problem zz_3150467143
sampled for problem zz_3150467143
sampled for problem zz_0724324444
finished samples sampling for zz_0724324444
 finished run 4 for problem zz_0724324444
 start run 5 for problem zz_0724324444
   start samplings 1000 for problem zz_0724324444
sampled for problem zz_0724324444
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7827271507
finished samples sampling for zz_7827271507
 finished run 4 for problem zz_7827271507
 start run 5 for problem zz_7827271507
   start samplings 1000 for problem zz_7827271507
sampled for problem zz_7827271507
sampled for problem zz_7973082253
finished samples sampling for zz_7973082253
 finished run 4 for problem zz_7973082253
 start run 5 for problem zz_7973082253
   start samplings 1000 for problem zz_7973082253
sampled for problem zz_7973082253
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8474831389
finished samples sampling for zz_8474831389
 finished run 4 for problem zz_8474831389
 start run 5 for problem zz_8474831389
   start samplings 1000 for problem zz_8474831389
sampled for problem zz_8474831389
sampled for problem zz_5487697862
finished samples sampling for zz_5487697862
 finished run 4 for problem zz_5487697862
 start run 5 for problem zz_5487697862
   start samplings 1000 for problem zz_5487697862
sampled for problem zz_5487697862
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8537666218
finished samples sampling for zz_8537666218
 finished run 5 for problem zz_8537666218
 start run 6 for problem zz_8537666218
   start samplings 1000 for problem zz_8537666218
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8537666218
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_6184411292
finished samples sampling for zz_6184411292
 finished run 6 for problem zz_6184411292
 start run 7 for problem zz_6184411292
   start samplings 1000 for problem zz_6184411292
sampled for problem zz_6184411292
sampled for problem zz_3150467143
finished samples sampling for zz_3150467143
 finished run 5 for problem zz_3150467143
 start run 6 for problem zz_3150467143
   start samplings 1000 for problem zz_3150467143
sampled for problem zz_3150467143
sampled for problem zz_0724324444
finished samples sampling for zz_0724324444
 finished run 5 for problem zz_0724324444
 start run 6 for problem zz_0724324444
   start samplings 1000 for problem zz_0724324444
sampled for problem zz_0724324444
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7827271507
finished samples sampling for zz_7827271507
 finished run 5 for problem zz_7827271507
 start run 6 for problem zz_7827271507
   start samplings 1000 for problem zz_7827271507
sampled for problem zz_7827271507
sampled for problem zz_7973082253
finished samples sampling for zz_7973082253
 finished run 5 for problem zz_7973082253
 start run 6 for problem zz_7973082253
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1697148923
finished samples sampling for zz_1697148923
 finished run 6 for problem zz_1697148923
 start run 7 for problem zz_1697148923
   start samplings 1000 for problem zz_1697148923
sampled for problem zz_1697148923
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_9774242506
finished samples sampling for zz_9774242506
 finished run 6 for problem zz_9774242506
 start run 7 for problem zz_9774242506
   start samplings 1000 for problem zz_9774242506
sampled for problem zz_9774242506
sampled for problem zz_3354126626
finished samples sampling for zz_3354126626
 finished run 6 for problem zz_3354126626
 start run 7 for problem zz_3354126626
   start samplings 1000 for problem zz_3354126626
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_3354126626
sampled for problem zz_1121819247
finished samples sampling for zz_1121819247
 finished run 6 for problem zz_1121819247
 start run 7 for problem zz_1121819247
   start samplings 1000 for problem zz_1121819247
sampled for problem zz_1121819247
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_6864603226
finished samples sampling for zz_6864603226
 finished run 6 for problem zz_6864603226
 start run 7 for problem zz_6864603226
   start samplings 1000 for problem zz_6864603226
sampled for problem zz_6864603226
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_5757275986
finished samples sampling for zz_5757275986
 finished run 6 for problem zz_5757275986
 start run 7 for problem zz_5757275986
   start samplings 1000 for problem zz_5757275986
sampled for problem zz_5757275986
sampled for problem zz_4863812233
finished samples sampling for zz_4863812233
 finished run 6 for problem zz_4863812233
 start run 7 for problem zz_4863812233
   start samplings 1000 for problem zz_4863812233
sampled for problem zz_4863812233
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_3591442681
finished samples sampling for zz_3591442681
 finished run 8 for problem zz_3591442681
 start run 9 for problem zz_3591442681
   start samplings 1000 for problem zz_3591442681
sampled for problem zz_3591442681
sampled for problem zz_1697148923
finished samples sampling for zz_1697148923
 finished run 7 for problem zz_1697148923
 start run 8 for problem zz_1697148923
   start samplings 1000 for problem zz_1697148923
sampled for problem zz_1697148923
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_9774242506
finished samples sampling for zz_9774242506
 finished run 7 for problem zz_9774242506
 start run 8 for problem zz_9774242506
   start samplings 1000 for problem zz_9774242506
sampled for problem zz_9774242506
sampled for problem zz_3354126626
finished samples sampling for zz_3354126626
 finished run 7 for problem zz_3354126626
 start run 8 for problem zz_3354126626
   start samplings 1000 for problem zz_3354126626
sampled for problem zz_3354126626
sampled for problem zz_1121819247
finished samples sampling for zz_1121819247
 finished run 7 for problem zz_1121819247
 start run 8 for problem zz_1121819247
   start samplings 1000 for problem zz_1121819247
sampled for problem zz_1121819247
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_6864603226
finished samples sampling for zz_6864603226
 finished run 7 for problem zz_6864603226
 start run 8 for problem zz_6864603226
   start samplings 1000 for problem zz_6864603226
sampled for problem zz_6864603226
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_5757275986
finished samples sampling for zz_5757275986
 finished run 7 for problem zz_5757275986
 start run 8 for problem zz_5757275986
   start samplings 1000 for problem zz_5757275986
sampled for problem zz_5757275986
sampled for problem zz_4863812233
finished samples sampling for zz_4863812233
 finished run 7 for problem zz_4863812233
 start run 8 for problem zz_4863812233
   start samplings 1000 for problem zz_4863812233
sampled for problem zz_4863812233
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_3591442681
finished samples sampling for zz_3591442681
 finished run 9 for problem zz_3591442681
 succesfully retrieved answer for problem {} zz_3591442681
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_3591442681
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7febf9281100>
sampled for problem zz_1697148923
finished samples sampling for zz_1697148923
 finished run 8 for problem zz_1697148923
 start run 9 for problem zz_1697148923
   start samplings 1000 for problem zz_1697148923
sampled for problem zz_1697148923
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7febf9281100>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_9774242506
finished samples sampling for zz_9774242506
 finished run 8 for problem zz_9774242506
 start run 9 for problem zz_9774242506
   start samplings 1000 for problem zz_9774242506
sampled for problem zz_9774242506
sampled for problem zz_3354126626
finished samples sampling for zz_3354126626
 finished run 8 for problem zz_3354126626
 start run 9 for problem zz_3354126626
   start samplings 1000 for problem zz_3354126626
sampled for problem zz_3354126626
sampled for problem zz_1121819247
finished samples sampling for zz_1121819247
 finished run 8 for problem zz_1121819247
 start run 9 for problem zz_1121819247
   start samplings 1000 for problem zz_1121819247
sampled for problem zz_1121819247
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_6864603226
finished samples sampling for zz_6864603226
 finished run 8 for problem zz_6864603226
 start run 9 for problem zz_6864603226
   start samplings 1000 for problem zz_6864603226
sampled for problem zz_6864603226
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_2068306658
 start writing answer for problem {} zz_4526454422
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f6448762f30>
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f6448762f30>
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_2654810283
 start writing answer for problem {} zz_5004330110
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f6241277ce0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f6241277ce0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'>
sampled for problem zz_1451684479
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0689312377
finished samples sampling for zz_0689312377
 finished run 6 for problem zz_0689312377
 start run 7 for problem zz_0689312377
   start samplings 1000 for problem zz_0689312377
sampled for problem zz_0689312377
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8074406757
finished samples sampling for zz_8074406757
 finished run 7 for problem zz_8074406757
 start run 8 for problem zz_8074406757
   start samplings 1000 for problem zz_8074406757
sampled for problem zz_8074406757
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_4090347922
finished samples sampling for zz_4090347922
 finished run 6 for problem zz_4090347922
 start run 7 for problem zz_4090347922
   start samplings 1000 for problem zz_4090347922
sampled for problem zz_4090347922
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_9812242872
finished samples sampling for zz_9812242872
 finished run 6 for problem zz_9812242872
 start run 7 for problem zz_9812242872
   start samplings 1000 for problem zz_9812242872
sampled for problem zz_9812242872
sampled for problem zz_2487327787
finished samples sampling for zz_2487327787
 finished run 6 for problem zz_2487327787
 start run 7 for problem zz_2487327787
   start samplings 1000 for problem zz_2487327787
sampled for problem zz_2487327787
sampled for problem zz_9504682920
finished samples sampling for zz_9504682920
 finished run 6 for problem zz_9504682920
 start run 7 for problem zz_9504682920
   start samplings 1000 for problem zz_9504682920
sampled for problem zz_9504682920
sampled for problem zz_9439897319
finished samples sampling for zz_9439897319
 finished run 6 for problem zz_9439897319
 start run 7 for problem zz_9439897319
   start samplings 1000 for problem zz_9439897319
sampled for problem zz_9439897319
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1451684479
finished samples sampling for zz_1451684479
 finished run 7 for problem zz_1451684479
 start run 8 for problem zz_1451684479
   start samplings 1000 for problem zz_1451684479
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1451684479
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0689312377
finished samples sampling for zz_0689312377
 finished run 7 for problem zz_0689312377
 start run 8 for problem zz_0689312377
   start samplings 1000 for problem zz_0689312377
sampled for problem zz_0689312377
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8074406757
finished samples sampling for zz_8074406757
 finished run 8 for problem zz_8074406757
 start run 9 for problem zz_8074406757
   start samplings 1000 for problem zz_8074406757
sampled for problem zz_8074406757
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_4090347922
finished samples sampling for zz_4090347922
 finished run 7 for problem zz_4090347922
 start run 8 for problem zz_4090347922
   start samplings 1000 for problem zz_4090347922
sampled for problem zz_4090347922
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_9812242872
finished samples sampling for zz_9812242872
 finished run 7 for problem zz_9812242872
 start run 8 for problem zz_9812242872
   start samplings 1000 for problem zz_9812242872
sampled for problem zz_9812242872
sampled for problem zz_2487327787
finished samples sampling for zz_2487327787
 finished run 7 for problem zz_2487327787
 start run 8 for problem zz_2487327787
   start samplings 1000 for problem zz_2487327787
sampled for problem zz_2487327787
sampled for problem zz_9504682920
finished samples sampling for zz_9504682920
 finished run 7 for problem zz_9504682920
 start run 8 for problem zz_9504682920
   start samplings 1000 for problem zz_9504682920
sampled for problem zz_9504682920
sampled for problem zz_9439897319
finished samples sampling for zz_9439897319
 finished run 7 for problem zz_9439897319
 start run 8 for problem zz_9439897319
   start samplings 1000 for problem zz_9439897319
sampled for problem zz_9439897319
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1451684479
finished samples sampling for zz_1451684479
 finished run 8 for problem zz_1451684479
 start run 9 for problem zz_1451684479
   start samplings 1000 for problem zz_1451684479
sampled for problem zz_1451684479
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0689312377
finished samples sampling for zz_0689312377
 finished run 8 for problem zz_0689312377
 start run 9 for problem zz_0689312377
   start samplings 1000 for problem zz_0689312377
sampled for problem zz_0689312377
sampled for problem zz_8074406757
finished samples sampling for zz_8074406757
 finished run 9 for problem zz_8074406757
 succesfully retrieved answer for problem {} zz_8074406757
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_8074406757
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9afe0a75f0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9afe0a75f0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_4090347922
finished samples sampling for zz_4090347922
 finished run 8 for problem zz_4090347922
 start run 9 for problem zz_4090347922
   start samplings 1000 for problem zz_4090347922
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_4090347922
sampled for problem zz_9812242872
finished samples sampling for zz_9812242872
 finished run 8 for problem zz_9812242872
 start run 9 for problem zz_9812242872
   start samplings 1000 for problem zz_9812242872
sampled for problem zz_9812242872
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_9585089572
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8705539192
finished samples sampling for zz_8705539192
 finished run 9 for problem zz_8705539192
 succesfully retrieved answer for problem {} zz_8705539192
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_8705539192
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f97541089b0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f97541089b0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7988238591
finished samples sampling for zz_7988238591
 finished run 9 for problem zz_7988238591
 succesfully retrieved answer for problem {} zz_7988238591
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_7988238591
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f970c7065d0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f970c7065d0>
sampled for problem zz_1871566606
finished samples sampling for zz_1871566606
 finished run 9 for problem zz_1871566606
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 succesfully retrieved answer for problem {} zz_1871566606
 submitter queue is empty, will wait at barrier for all submitters to finish.
sampled for problem zz_8941210343
finished samples sampling for zz_8941210343
 finished run 9 for problem zz_8941210343
 succesfully retrieved answer for problem {} zz_8941210343
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_8890212945
finished samples sampling for zz_8890212945
 finished run 9 for problem zz_8890212945
 succesfully retrieved answer for problem {} zz_8890212945
 submitter queue is empty, will wait at barrier for all submitters to finish.
sampled for problem zz_1445418313
finished samples sampling for zz_1445418313
 finished run 9 for problem zz_1445418313
 succesfully retrieved answer for problem {} zz_1445418313
 submitter queue is empty, will wait at barrier for all submitters to finish.
sampled for problem zz_9873706342
finished samples sampling for zz_9873706342
 finished run 9 for problem zz_9873706342
 succesfully retrieved answer for problem {} zz_9873706342
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Joined all submitter threads.
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8705539192
 start writing answer for problem {} zz_1871566606
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f96c754a2d0>
elif concurrent.futures.thread.ThreadPoolExecutor Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_4526454422
 start writing answer for problem {} zz_0802311939
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f62398dd850>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f62398dd850>
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_5004330110
 start writing answer for problem {} zz_8746424212
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f6402279e80>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f6402279e80>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0802311939
 writer queue is empty and event_flag_submitters_should_work is not set (all submitters should have finished by now), so writer will also finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8061135779
finished samples sampling for zz_8061135779
 finished run 6 for problem zz_8061135779
 start run 7 for problem zz_8061135779
   start samplings 1000 for problem zz_8061135779
sampled for problem zz_8061135779
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_5874969018
finished samples sampling for zz_5874969018
 finished run 6 for problem zz_5874969018
 start run 7 for problem zz_5874969018
   start samplings 1000 for problem zz_5874969018
sampled for problem zz_5874969018
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_6600341654
finished samples sampling for zz_6600341654
 finished run 6 for problem zz_6600341654
 start run 7 for problem zz_6600341654
   start samplings 1000 for problem zz_6600341654
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_6600341654
sampled for problem zz_8036213424
finished samples sampling for zz_8036213424
 finished run 6 for problem zz_8036213424
 start run 7 for problem zz_8036213424
   start samplings 1000 for problem zz_8036213424
sampled for problem zz_8036213424
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_4518778851
finished samples sampling for zz_4518778851
 finished run 6 for problem zz_4518778851
 start run 7 for problem zz_4518778851
   start samplings 1000 for problem zz_4518778851
sampled for problem zz_4518778851
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0816389504
finished samples sampling for zz_0816389504
 finished run 6 for problem zz_0816389504
 start run 7 for problem zz_0816389504
   start samplings 1000 for problem zz_0816389504
sampled for problem zz_0816389504
sampled for problem zz_8472903645
finished samples sampling for zz_8472903645
 finished run 6 for problem zz_8472903645
 start run 7 for problem zz_8472903645
   start samplings 1000 for problem zz_8472903645
sampled for problem zz_8472903645
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2750285710
finished samples sampling for zz_2750285710
 finished run 6 for problem zz_2750285710
 start run 7 for problem zz_2750285710
   start samplings 1000 for problem zz_2750285710
sampled for problem zz_2750285710
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8061135779
finished samples sampling for zz_8061135779
 finished run 7 for problem zz_8061135779
 start run 8 for problem zz_8061135779
   start samplings 1000 for problem zz_8061135779
sampled for problem zz_8061135779
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_5874969018
finished samples sampling for zz_5874969018
 finished run 7 for problem zz_5874969018
 start run 8 for problem zz_5874969018
   start samplings 1000 for problem zz_5874969018
sampled for problem zz_5874969018
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_6600341654
finished samples sampling for zz_6600341654
 finished run 7 for problem zz_6600341654
 start run 8 for problem zz_6600341654
   start samplings 1000 for problem zz_6600341654
sampled for problem zz_6600341654
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8036213424
finished samples sampling for zz_8036213424
 finished run 7 for problem zz_8036213424
 start run 8 for problem zz_8036213424
   start samplings 1000 for problem zz_8036213424
sampled for problem zz_8036213424
sampled for problem zz_4518778851
finished samples sampling for zz_4518778851
 finished run 7 for problem zz_4518778851
 start run 8 for problem zz_4518778851
   start samplings 1000 for problem zz_4518778851
sampled for problem zz_4518778851
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0816389504
finished samples sampling for zz_0816389504
 finished run 7 for problem zz_0816389504
 start run 8 for problem zz_0816389504
   start samplings 1000 for problem zz_0816389504
sampled for problem zz_0816389504
sampled for problem zz_8472903645
finished samples sampling for zz_8472903645
 finished run 7 for problem zz_8472903645
 start run 8 for problem zz_8472903645
   start samplings 1000 for problem zz_8472903645
sampled for problem zz_8472903645
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2750285710
finished samples sampling for zz_2750285710
 finished run 7 for problem zz_2750285710
 start run 8 for problem zz_2750285710
   start samplings 1000 for problem zz_2750285710
sampled for problem zz_2750285710
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8061135779
finished samples sampling for zz_8061135779
 finished run 8 for problem zz_8061135779
 start run 9 for problem zz_8061135779
   start samplings 1000 for problem zz_8061135779
sampled for problem zz_8061135779
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_5874969018
finished samples sampling for zz_5874969018
 finished run 8 for problem zz_5874969018
 start run 9 for problem zz_5874969018
   start samplings 1000 for problem zz_5874969018
sampled for problem zz_5874969018
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_6600341654
finished samples sampling for zz_6600341654
 finished run 8 for problem zz_6600341654
 start run 9 for problem zz_6600341654
   start samplings 1000 for problem zz_6600341654
sampled for problem zz_6600341654
sampled for problem zz_8036213424
finished samples sampling for zz_8036213424
 finished run 8 for problem zz_8036213424
 start run 9 for problem zz_8036213424
   start samplings 1000 for problem zz_8036213424
sampled for problem zz_8036213424
sampled for problem zz_4518778851
finished samples sampling for zz_4518778851
 finished run 8 for problem zz_4518778851
 start run 9 for problem zz_4518778851
   start samplings 1000 for problem zz_4518778851
sampled for problem zz_4518778851
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8472903645
finished samples sampling for zz_8472903645
 finished run 8 for problem zz_8472903645
 start run 9 for problem zz_8472903645
   start samplings 1000 for problem zz_8472903645
sampled for problem zz_8472903645
sampled for problem zz_0816389504
finished samples sampling for zz_0816389504
 finished run 8 for problem zz_0816389504
 start run 9 for problem zz_0816389504
   start samplings 1000 for problem zz_0816389504
sampled for problem zz_0816389504
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2750285710
finished samples sampling for zz_2750285710
 finished run 8 for problem zz_2750285710
 start run 9 for problem zz_2750285710
   start samplings 1000 for problem zz_2750285710
sampled for problem zz_2750285710
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8061135779
finished samples sampling for zz_8061135779
 finished run 9 for problem zz_8061135779
 succesfully retrieved answer for problem {} zz_8061135779
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_8061135779
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe182f6f500>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe182f6f500>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_5874969018
finished samples sampling for zz_5874969018
 finished run 9 for problem zz_5874969018
 succesfully retrieved answer for problem {} zz_5874969018
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_5874969018
elif concurrent.futures.thread.ThreadPoolExecutor
 finished run 5 for problem zz_7901044990
 start run 6 for problem zz_7901044990
   start samplings 1000 for problem zz_7901044990
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7901044990
sampled for problem zz_8678592529
finished samples sampling for zz_8678592529
 finished run 5 for problem zz_8678592529
 start run 6 for problem zz_8678592529
   start samplings 1000 for problem zz_8678592529
sampled for problem zz_8678592529
sampled for problem zz_2598524958
finished samples sampling for zz_2598524958
 finished run 5 for problem zz_2598524958
 start run 6 for problem zz_2598524958
   start samplings 1000 for problem zz_2598524958
sampled for problem zz_2598524958
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1116142614
finished samples sampling for zz_1116142614
 finished run 6 for problem zz_1116142614
 start run 7 for problem zz_1116142614
   start samplings 1000 for problem zz_1116142614
sampled for problem zz_1116142614
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0742356033
finished samples sampling for zz_0742356033
 finished run 6 for problem zz_0742356033
 start run 7 for problem zz_0742356033
   start samplings 1000 for problem zz_0742356033
sampled for problem zz_0742356033
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1686890781
finished samples sampling for zz_1686890781
 finished run 6 for problem zz_1686890781
 start run 7 for problem zz_1686890781
   start samplings 1000 for problem zz_1686890781
sampled for problem zz_1686890781
sampled for problem zz_9425772738
finished samples sampling for zz_9425772738
 finished run 6 for problem zz_9425772738
 start run 7 for problem zz_9425772738
   start samplings 1000 for problem zz_9425772738
sampled for problem zz_9425772738
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7155401937
finished samples sampling for zz_7155401937
 finished run 7 for problem zz_7155401937
 start run 8 for problem zz_7155401937
   start samplings 1000 for problem zz_7155401937
sampled for problem zz_7155401937
sampled for problem zz_7901044990
finished samples sampling for zz_7901044990
 finished run 6 for problem zz_7901044990
 start run 7 for problem zz_7901044990
   start samplings 1000 for problem zz_7901044990
sampled for problem zz_7901044990
sampled for problem zz_8678592529
finished samples sampling for zz_8678592529
 finished run 6 for problem zz_8678592529
 start run 7 for problem zz_8678592529
   start samplings 1000 for problem zz_8678592529
sampled for problem zz_8678592529
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2598524958
finished samples sampling for zz_2598524958
 finished run 6 for problem zz_2598524958
 start run 7 for problem zz_2598524958
   start samplings 1000 for problem zz_2598524958
sampled for problem zz_2598524958
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1116142614
finished samples sampling for zz_1116142614
 finished run 7 for problem zz_1116142614
 start run 8 for problem zz_1116142614
   start samplings 1000 for problem zz_1116142614
sampled for problem zz_1116142614
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0742356033
finished samples sampling for zz_0742356033
 finished run 7 for problem zz_0742356033
 start run 8 for problem zz_0742356033
   start samplings 1000 for problem zz_0742356033
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0742356033
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1686890781
finished samples sampling for zz_1686890781
 finished run 7 for problem zz_1686890781
 start run 8 for problem zz_1686890781
   start samplings 1000 for problem zz_1686890781
sampled for problem zz_1686890781
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_9425772738
finished samples sampling for zz_9425772738
 finished run 7 for problem zz_9425772738
 start run 8 for problem zz_9425772738
   start samplings 1000 for problem zz_9425772738
sampled for problem zz_9425772738
sampled for problem zz_7155401937
finished samples sampling for zz_7155401937
 finished run 8 for problem zz_7155401937
 start run 9 for problem zz_7155401937
   start samplings 1000 for problem zz_7155401937
sampled for problem zz_7155401937
sampled for problem zz_7901044990
finished samples sampling for zz_7901044990
 finished run 7 for problem zz_7901044990
 start run 8 for problem zz_7901044990
   start samplings 1000 for problem zz_7901044990
sampled for problem zz_7901044990
sampled for problem zz_8678592529
finished samples sampling for zz_8678592529
 finished run 7 for problem zz_8678592529
 start run 8 for problem zz_8678592529
   start samplings 1000 for problem zz_8678592529
sampled for problem zz_8678592529
sampled for problem zz_2598524958
finished samples sampling for zz_2598524958
 finished run 7 for problem zz_2598524958
 start run 8 for problem zz_2598524958
   start samplings 1000 for problem zz_2598524958
sampled for problem zz_2598524958
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1116142614
finished samples sampling for zz_1116142614
 finished run 8 for problem zz_1116142614
 start run 9 for problem zz_1116142614
   start samplings 1000 for problem zz_1116142614
sampled for problem zz_1116142614
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0742356033
finished samples sampling for zz_0742356033
 finished run 8 for problem zz_0742356033
 start run 9 for problem zz_0742356033
   start samplings 1000 for problem zz_0742356033
sampled for problem zz_0742356033
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1686890781
finished samples sampling for zz_1686890781
 finished run 8 for problem zz_1686890781
 start run 9 for problem zz_1686890781
   start samplings 1000 for problem zz_1686890781
sampled for problem zz_1686890781
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_9425772738
finished samples sampling for zz_9425772738
 finished run 8 for problem zz_9425772738
 start run 9 for problem zz_9425772738
   start samplings 1000 for problem zz_9425772738
sampled for problem zz_9425772738
sampled for problem zz_7155401937
finished samples sampling for zz_7155401937
 finished run 9 for problem zz_7155401937
 succesfully retrieved answer for problem {} zz_7155401937
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_7155401937
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f2afc32f320>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f2afc32f320>
sampled for problem zz_7901044990
finished samples sampling for zz_7901044990
 finished run 8 for problem zz_7901044990
 start run 9 for problem zz_7901044990
   start samplings 1000 for problem zz_7901044990
sampled for problem zz_7901044990
sampled for problem zz_8678592529
finished samples sampling for zz_8678592529
 finished run 8 for problem zz_8678592529
 start run 9 for problem zz_8678592529
   start samplings 1000 for problem zz_8678592529
sampled for problem zz_8678592529
sampled for problem zz_2598524958
finished samples sampling for zz_2598524958
 finished run 8 for problem zz_2598524958
 start run 9 for problem zz_2598524958
   start samplings 1000 for problem zz_2598524958
sampled for problem zz_2598524958
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8746424212
 writer queue is empty and event_flag_submitters_should_work is not set (all submitters should have finished by now), so writer will also finish.
 Joined all writer threads.
 Is queue_problems_to_submit empty: True
 Is queue_answers_to_write empty: True
Execution finished.

_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_3591442681
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_5757275986
finished samples sampling for zz_5757275986
 finished run 8 for problem zz_5757275986
 start run 9 for problem zz_5757275986
   start samplings 1000 for problem zz_5757275986
sampled for problem zz_5757275986
sampled for problem zz_4863812233
finished samples sampling for zz_4863812233
 finished run 8 for problem zz_4863812233
 start run 9 for problem zz_4863812233
   start samplings 1000 for problem zz_4863812233
sampled for problem zz_4863812233
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1697148923
finished samples sampling for zz_1697148923
 finished run 9 for problem zz_1697148923
 succesfully retrieved answer for problem {} zz_1697148923
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_1697148923
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7feef84df770>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7feef84df770>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_9774242506
finished samples sampling for zz_9774242506
 finished run 9 for problem zz_9774242506
 succesfully retrieved answer for problem {} zz_9774242506
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_9774242506
sampled for problem zz_3354126626
finished samples sampling for zz_3354126626
 finished run 9 for problem zz_3354126626
 succesfully retrieved answer for problem {} zz_3354126626
 submitter queue is empty, will wait at barrier for all submitters to finish.
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7feba1feea20>
sampled for problem zz_1121819247
finished samples sampling for zz_1121819247
 finished run 9 for problem zz_1121819247
 succesfully retrieved answer for problem {} zz_1121819247
 submitter queue is empty, will wait at barrier for all submitters to finish.
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7feba1feea20>
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_6864603226
finished samples sampling for zz_6864603226
 finished run 9 for problem zz_6864603226
 succesfully retrieved answer for problem {} zz_6864603226
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_5757275986
finished samples sampling for zz_5757275986
 finished run 9 for problem zz_5757275986
 succesfully retrieved answer for problem {} zz_5757275986
 submitter queue is empty, will wait at barrier for all submitters to finish.
sampled for problem zz_4863812233
finished samples sampling for zz_4863812233
 finished run 9 for problem zz_4863812233
 succesfully retrieved answer for problem {} zz_4863812233
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Joined all submitter threads.
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 finished writing answer for problem {} zz_1697148923
 start writing answer for problem {} zz_3354126626
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fed40ca4dd0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fed40ca4dd0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
   start samplings 1000 for problem zz_7973082253
sampled for problem zz_7973082253
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8474831389
finished samples sampling for zz_8474831389
 finished run 5 for problem zz_8474831389
 start run 6 for problem zz_8474831389
   start samplings 1000 for problem zz_8474831389
sampled for problem zz_8474831389
sampled for problem zz_5487697862
finished samples sampling for zz_5487697862
 finished run 5 for problem zz_5487697862
 start run 6 for problem zz_5487697862
   start samplings 1000 for problem zz_5487697862
sampled for problem zz_5487697862
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8537666218
finished samples sampling for zz_8537666218
 finished run 6 for problem zz_8537666218
 start run 7 for problem zz_8537666218
   start samplings 1000 for problem zz_8537666218
sampled for problem zz_8537666218
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_6184411292
finished samples sampling for zz_6184411292
 finished run 7 for problem zz_6184411292
 start run 8 for problem zz_6184411292
   start samplings 1000 for problem zz_6184411292
sampled for problem zz_6184411292
sampled for problem zz_0724324444
finished samples sampling for zz_0724324444
 finished run 6 for problem zz_0724324444
 start run 7 for problem zz_0724324444
   start samplings 1000 for problem zz_0724324444
sampled for problem zz_0724324444
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_3150467143
finished samples sampling for zz_3150467143
 finished run 6 for problem zz_3150467143
 start run 7 for problem zz_3150467143
   start samplings 1000 for problem zz_3150467143
sampled for problem zz_3150467143
sampled for problem zz_7827271507
finished samples sampling for zz_7827271507
 finished run 6 for problem zz_7827271507
 start run 7 for problem zz_7827271507
   start samplings 1000 for problem zz_7827271507
sampled for problem zz_7827271507
sampled for problem zz_7973082253
finished samples sampling for zz_7973082253
 finished run 6 for problem zz_7973082253
 start run 7 for problem zz_7973082253
   start samplings 1000 for problem zz_7973082253
sampled for problem zz_7973082253
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8474831389
finished samples sampling for zz_8474831389
 finished run 6 for problem zz_8474831389
 start run 7 for problem zz_8474831389
   start samplings 1000 for problem zz_8474831389
sampled for problem zz_8474831389
sampled for problem zz_5487697862
finished samples sampling for zz_5487697862
 finished run 6 for problem zz_5487697862
 start run 7 for problem zz_5487697862
   start samplings 1000 for problem zz_5487697862
sampled for problem zz_5487697862
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8537666218
finished samples sampling for zz_8537666218
 finished run 7 for problem zz_8537666218
 start run 8 for problem zz_8537666218
   start samplings 1000 for problem zz_8537666218
sampled for problem zz_8537666218
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_6184411292
finished samples sampling for zz_6184411292
 finished run 8 for problem zz_6184411292
 start run 9 for problem zz_6184411292
   start samplings 1000 for problem zz_6184411292
sampled for problem zz_6184411292
sampled for problem zz_0724324444
finished samples sampling for zz_0724324444
 finished run 7 for problem zz_0724324444
 start run 8 for problem zz_0724324444
   start samplings 1000 for problem zz_0724324444
sampled for problem zz_0724324444
sampled for problem zz_3150467143
finished samples sampling for zz_3150467143
 finished run 7 for problem zz_3150467143
 start run 8 for problem zz_3150467143
   start samplings 1000 for problem zz_3150467143
sampled for problem zz_3150467143
sampled for problem zz_7827271507
finished samples sampling for zz_7827271507
 finished run 7 for problem zz_7827271507
 start run 8 for problem zz_7827271507
   start samplings 1000 for problem zz_7827271507
sampled for problem zz_7827271507
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7973082253
finished samples sampling for zz_7973082253
 finished run 7 for problem zz_7973082253
 start run 8 for problem zz_7973082253
   start samplings 1000 for problem zz_7973082253
sampled for problem zz_7973082253
sampled for problem zz_8474831389
finished samples sampling for zz_8474831389
 finished run 7 for problem zz_8474831389
 start run 8 for problem zz_8474831389
   start samplings 1000 for problem zz_8474831389
sampled for problem zz_8474831389
sampled for problem zz_5487697862
finished samples sampling for zz_5487697862
 finished run 7 for problem zz_5487697862
 start run 8 for problem zz_5487697862
   start samplings 1000 for problem zz_5487697862
sampled for problem zz_5487697862
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8537666218
finished samples sampling for zz_8537666218
 finished run 8 for problem zz_8537666218
 start run 9 for problem zz_8537666218
   start samplings 1000 for problem zz_8537666218
sampled for problem zz_8537666218
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_6184411292
finished samples sampling for zz_6184411292
 finished run 9 for problem zz_6184411292
 succesfully retrieved answer for problem {} zz_6184411292
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_6184411292
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f88c331bb60>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f88c331bb60>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0724324444
finished samples sampling for zz_0724324444
 finished run 8 for problem zz_0724324444
 start run 9 for problem zz_0724324444
   start samplings 1000 for problem zz_0724324444
sampled for problem zz_0724324444
sampled for problem zz_3150467143
finished samples sampling for zz_3150467143
 finished run 8 for problem zz_3150467143
 start run 9 for problem zz_3150467143
   start samplings 1000 for problem zz_3150467143
sampled for problem zz_3150467143
sampled for problem zz_7827271507
finished samples sampling for zz_7827271507
 finished run 8 for problem zz_7827271507
 start run 9 for problem zz_7827271507
   start samplings 1000 for problem zz_7827271507
sampled for problem zz_7827271507
sampled for problem zz_7973082253
finished samples sampling for zz_7973082253
 finished run 8 for problem zz_7973082253
 start run 9 for problem zz_7973082253
   start samplings 1000 for problem zz_7973082253
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8474831389
finished samples sampling for zz_8474831389
 finished run 8 for problem zz_8474831389
 start run 9 for problem zz_8474831389
   start samplings 1000 for problem zz_8474831389
sampled for problem zz_7973082253
sampled for problem zz_8474831389
sampled for problem zz_5487697862
finished samples sampling for zz_5487697862
 finished run 8 for problem zz_5487697862
 start run 9 for problem zz_5487697862
   start samplings 1000 for problem zz_5487697862
sampled for problem zz_5487697862
sampled for problem zz_8537666218
finished samples sampling for zz_8537666218
 finished run 9 for problem zz_8537666218
 succesfully retrieved answer for problem {} zz_8537666218
 submitter queue is empty, will wait at barrier for all submitters to finish.
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8074406757
sampled for problem zz_2487327787
finished samples sampling for zz_2487327787
 finished run 8 for problem zz_2487327787
 start run 9 for problem zz_2487327787
   start samplings 1000 for problem zz_2487327787
sampled for problem zz_2487327787
sampled for problem zz_9504682920
finished samples sampling for zz_9504682920
 finished run 8 for problem zz_9504682920
 start run 9 for problem zz_9504682920
   start samplings 1000 for problem zz_9504682920
sampled for problem zz_9504682920
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_9439897319
finished samples sampling for zz_9439897319
 finished run 8 for problem zz_9439897319
 start run 9 for problem zz_9439897319
   start samplings 1000 for problem zz_9439897319
sampled for problem zz_9439897319
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1451684479
finished samples sampling for zz_1451684479
 finished run 9 for problem zz_1451684479
 succesfully retrieved answer for problem {} zz_1451684479
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_1451684479
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9c942105c0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9c942105c0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0689312377
finished samples sampling for zz_0689312377
 finished run 9 for problem zz_0689312377
 succesfully retrieved answer for problem {} zz_0689312377
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_0689312377
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9c74727620>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9c74727620>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_4090347922
finished samples sampling for zz_4090347922
 finished run 9 for problem zz_4090347922
 succesfully retrieved answer for problem {} zz_4090347922
 submitter queue is empty, will wait at barrier for all submitters to finish.
sampled for problem zz_9812242872
finished samples sampling for zz_9812242872
 finished run 9 for problem zz_9812242872
 succesfully retrieved answer for problem {} zz_9812242872
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_2487327787
finished samples sampling for zz_2487327787
 finished run 9 for problem zz_2487327787
 succesfully retrieved answer for problem {} zz_2487327787
 submitter queue is empty, will wait at barrier for all submitters to finish.
sampled for problem zz_9504682920
finished samples sampling for zz_9504682920
 finished run 9 for problem zz_9504682920
 succesfully retrieved answer for problem {} zz_9504682920
 submitter queue is empty, will wait at barrier for all submitters to finish.
sampled for problem zz_9439897319
finished samples sampling for zz_9439897319
 finished run 9 for problem zz_9439897319
 succesfully retrieved answer for problem {} zz_9439897319
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Joined all submitter threads.
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_1451684479
 start writing answer for problem {} zz_4090347922
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9c45446090>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9c45446090>
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f96c754a2d0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_7988238591
 start writing answer for problem {} zz_8941210343
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f96c6890710>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f96c6890710>
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_1871566606
 start writing answer for problem {} zz_8890212945
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f96c657bb00>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f96c657bb00>
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2d66be660>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2d66be660>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_6600341654
finished samples sampling for zz_6600341654
 finished run 9 for problem zz_6600341654
 succesfully retrieved answer for problem {} zz_6600341654
 submitter queue is empty, will wait at barrier for all submitters to finish.
sampled for problem zz_8036213424
finished samples sampling for zz_8036213424
 finished run 9 for problem zz_8036213424
 succesfully retrieved answer for problem {} zz_8036213424
 submitter queue is empty, will wait at barrier for all submitters to finish.
sampled for problem zz_4518778851
finished samples sampling for zz_4518778851
 finished run 9 for problem zz_4518778851
sampled for problem zz_8472903645
finished samples sampling for zz_8472903645
 finished run 9 for problem zz_8472903645
 succesfully retrieved answer for problem {} zz_4518778851
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_0816389504
finished samples sampling for zz_0816389504
 finished run 9 for problem zz_0816389504
 succesfully retrieved answer for problem {} zz_8472903645
 submitter queue is empty, will wait at barrier for all submitters to finish.
 succesfully retrieved answer for problem {} zz_0816389504
 submitter queue is empty, will wait at barrier for all submitters to finish.
sampled for problem zz_2750285710
finished samples sampling for zz_2750285710
 finished run 9 for problem zz_2750285710
 succesfully retrieved answer for problem {} zz_2750285710
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Joined all submitter threads.
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8061135779
 start writing answer for problem {} zz_6600341654
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe127b99f40>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe127b99f40>
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8890212945
 start writing answer for problem {} zz_1445418313
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f96c6d9aea0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f96c6d9aea0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8941210343
 start writing answer for problem {} zz_9873706342
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f96c6053e30>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f96c6053e30>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_1445418313
 writer queue is empty and event_flag_submitters_should_work is not set (all submitters should have finished by now), so writer will also finish.
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_9873706342
 writer queue is empty and event_flag_submitters_should_work is not set (all submitters should have finished by now), so writer will also finish.
 Joined all writer threads.
 Is queue_problems_to_submit empty: True
 Is queue_answers_to_write empty: True
Execution finished.

sampled for problem zz_1116142614
finished samples sampling for zz_1116142614
 finished run 9 for problem zz_1116142614
 succesfully retrieved answer for problem {} zz_1116142614
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_1116142614
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f290fb38bf0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f290fb38bf0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0742356033
finished samples sampling for zz_0742356033
 finished run 9 for problem zz_0742356033
 succesfully retrieved answer for problem {} zz_0742356033
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_1686890781
finished samples sampling for zz_1686890781
 finished run 9 for problem zz_1686890781
 succesfully retrieved answer for problem {} zz_1686890781
 submitter queue is empty, will wait at barrier for all submitters to finish.
sampled for problem zz_9425772738
finished samples sampling for zz_9425772738
 finished run 9 for problem zz_9425772738
 succesfully retrieved answer for problem {} zz_9425772738
 submitter queue is empty, will wait at barrier for all submitters to finish.
sampled for problem zz_7901044990
finished samples sampling for zz_7901044990
 finished run 9 for problem zz_7901044990
 succesfully retrieved answer for problem {} zz_7901044990
 submitter queue is empty, will wait at barrier for all submitters to finish.
sampled for problem zz_8678592529
finished samples sampling for zz_8678592529
 finished run 9 for problem zz_8678592529
 succesfully retrieved answer for problem {} zz_8678592529
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
sampled for problem zz_2598524958
finished samples sampling for zz_2598524958
 finished run 9 for problem zz_2598524958
 succesfully retrieved answer for problem {} zz_2598524958
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Joined all submitter threads.
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_1116142614
 start writing answer for problem {} zz_0742356033
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f291c221d90>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f291c221d90>
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_9774242506
 start writing answer for problem {} zz_1121819247
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fed429adf70>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fed429adf70>
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_3354126626
 start writing answer for problem {} zz_6864603226
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fed40b1c0b0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fed40b1c0b0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'>
 start writing answer for problem {} zz_8537666218
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8a0f6066c0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8a0f6066c0>
sampled for problem zz_0724324444
finished samples sampling for zz_0724324444
 finished run 9 for problem zz_0724324444
 succesfully retrieved answer for problem {} zz_0724324444
 submitter queue is empty, will wait at barrier for all submitters to finish.
sampled for problem zz_3150467143
finished samples sampling for zz_3150467143
 finished run 9 for problem zz_3150467143
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 succesfully retrieved answer for problem {} zz_3150467143
 submitter queue is empty, will wait at barrier for all submitters to finish.
sampled for problem zz_7973082253
finished samples sampling for zz_7973082253
 finished run 9 for problem zz_7973082253
sampled for problem zz_7827271507
finished samples sampling for zz_7827271507
 finished run 9 for problem zz_7827271507
sampled for problem zz_5487697862
finished samples sampling for zz_5487697862
 finished run 9 for problem zz_5487697862
sampled for problem zz_8474831389
finished samples sampling for zz_8474831389
 finished run 9 for problem zz_8474831389
 succesfully retrieved answer for problem {} zz_7973082253
 submitter queue is empty, will wait at barrier for all submitters to finish.
 succesfully retrieved answer for problem {} zz_7827271507
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 succesfully retrieved answer for problem {} zz_5487697862
 submitter queue is empty, will wait at barrier for all submitters to finish.
 succesfully retrieved answer for problem {} zz_8474831389
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Joined all submitter threads.
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8537666218
 start writing answer for problem {} zz_0724324444
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8a0ee6b0e0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8a0ee6b0e0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0689312377
 start writing answer for problem {} zz_9812242872
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9c450aec90>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9c450aec90>
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_4090347922
 start writing answer for problem {} zz_2487327787
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9afe36ef90>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9afe36ef90>
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_1121819247
 start writing answer for problem {} zz_5757275986
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fed40a1c7a0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fed40a1c7a0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6864603226
 start writing answer for problem {} zz_4863812233
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fed405afef0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fed405afef0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_5757275986
 writer queue is empty and event_flag_submitters_should_work is not set (all submitters should have finished by now), so writer will also finish.
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_4863812233
 writer queue is empty and event_flag_submitters_should_work is not set (all submitters should have finished by now), so writer will also finish.
 Joined all writer threads.
 Is queue_problems_to_submit empty: True
 Is queue_answers_to_write empty: True
Execution finished.

 finished writing answer for problem {} zz_5874969018
 start writing answer for problem {} zz_8036213424
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe3b4794e00>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe3b4794e00>
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6600341654
 start writing answer for problem {} zz_4518778851
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe3d41471a0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe3d41471a0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8036213424
 start writing answer for problem {} zz_8472903645
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2ce54e090>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2ce54e090>
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)]) Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 finished writing answer for problem {} zz_9812242872
 start writing answer for problem {} zz_9504682920
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9c45967b00>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9c45967b00>
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_2487327787
 start writing answer for problem {} zz_9439897319
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9c467bd3d0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f9c467bd3d0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_9504682920
 writer queue is empty and event_flag_submitters_should_work is not set (all submitters should have finished by now), so writer will also finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0742356033
 start writing answer for problem {} zz_1686890781
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f291c220170>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f291c220170>
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 finished writing answer for problem {} zz_7155401937
 start writing answer for problem {} zz_9425772738
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f290db14590>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f290db14590>
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_1686890781
 start writing answer for problem {} zz_7901044990
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f290dadc2c0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f290dadc2c0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6184411292
 start writing answer for problem {} zz_3150467143
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8a0f0c8200>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8a0f0c8200>
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0724324444
 start writing answer for problem {} zz_7973082253
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8a0ef1c320>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8a0ef1c320>
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_3150467143
 start writing answer for problem {} zz_7827271507
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8a0e32bbf0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8a0e32bbf0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)]) <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_9439897319
 writer queue is empty and event_flag_submitters_should_work is not set (all submitters should have finished by now), so writer will also finish.
 Joined all writer threads.
 Is queue_problems_to_submit empty: True
 Is queue_answers_to_write empty: True
Execution finished.

_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_9425772738
 start writing answer for problem {} zz_8678592529
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f273cf83920>
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f273cf83920>
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 finished writing answer for problem {} zz_7901044990
 start writing answer for problem {} zz_2598524958
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f290d3cff80>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f290d3cff80>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_4518778851
 start writing answer for problem {} zz_0816389504
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2cdf02fc0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2cdf02fc0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0816389504
 start writing answer for problem {} zz_2750285710
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2ce27fb30>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2ce27fb30>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {}
 finished writing answer for problem {} zz_2598524958
 writer queue is empty and event_flag_submitters_should_work is not set (all submitters should have finished by now), so writer will also finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8678592529
 writer queue is empty and event_flag_submitters_should_work is not set (all submitters should have finished by now), so writer will also finish.
 Joined all writer threads.
 Is queue_problems_to_submit empty: True
 Is queue_answers_to_write empty: True
Execution finished.
 zz_8472903645
 writer queue is empty and event_flag_submitters_should_work is not set (all submitters should have finished by now), so writer will also finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_2750285710
 writer queue is empty and event_flag_submitters_should_work is not set (all submitters should have finished by now), so writer will also finish.
 Joined all writer threads.
 Is queue_problems_to_submit empty: True
 Is queue_answers_to_write empty: True
Execution finished.

_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_7827271507
 start writing answer for problem {} zz_5487697862
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8a0e6c5eb0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8a0e6c5eb0>
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_7973082253
 start writing answer for problem {} zz_8474831389
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8bd44d9ca0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f8bd44d9ca0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8474831389
 writer queue is empty and event_flag_submitters_should_work is not set (all submitters should have finished by now), so writer will also finish.
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_5487697862
 writer queue is empty and event_flag_submitters_should_work is not set (all submitters should have finished by now), so writer will also finish.
 Joined all writer threads.
 Is queue_problems_to_submit empty: True
 Is queue_answers_to_write empty: True
Execution finished.
chunk 9 of 15
chunk 10 of 15
chunk 11 of 15
chunk 12 of 15
chunk 13 of 15
chunk 14 of 15
chunk 15 of 15
no cupy available, imported numpy as usual
Custom getstate functions for dwave.cloud.config.models.ClientConfig, dwave.cloud.client.qpu.Client, dwave.cloud.solver.StructuredSolver, dwave.system.samplers.dwave_sampler.DWaveSampler, dwave.system.composites.embedding.FixedEmbeddingComposite have been initialized.
 Process-9 started with inputs {'print_prefix': ' ', 'kwargs_dwavesampler': {'token': 'JG5Y-1f0a1b755b7b93b5466f23e3abf1c3a1920c15fb', 'region': 'eu-central-1', 'architecture': 'pegasus', 'name': 'Advantage_system5.4'}, 'folder_path_main': '/mnt/RAID/home/adam-1aeqn8vhvpjnv4u/mast_sub5/Quantum_Annealing_for_Particle_Matching/00_tests/01_out/sub_5_3_2', 'info_file_name': 'study_params_sub5_3_2.h5'}
Available solvers based on specifications (client):  [StructuredSolver(id='Advantage_system5.4')]
Chosen solver based on specifications (solver):  StructuredSolver(id='Advantage_system5.4') , status is online:  True
    Solver properties keys:  dict_keys(['num_qubits', 'qubits', 'couplers', 'h_range', 'j_range', 'supported_problem_types', 'parameters', 'vfyc', 'anneal_offset_ranges', 'anneal_offset_step', 'anneal_offset_step_phi0', 'annealing_time_range', 'chip_id', 'default_annealing_time', 'default_programming_thermalization', 'default_readout_thermalization', 'extended_j_range', 'fast_anneal_time_range', 'h_gain_schedule_range', 'max_anneal_schedule_points', 'max_h_gain_schedule_points', 'num_reads_range', 'per_qubit_coupling_range', 'problem_run_duration_range', 'problem_timing_data', 'programming_thermalization_range', 'readout_thermalization_range', 'tags', 'topology', 'category', 'quota_conversion_rate'])
        problem_run_duration_range:  [0.0, 1000000.0]
    Solver parameters keys:  dict_keys(['anneal_offsets', 'anneal_schedule', 'annealing_time', 'answer_mode', 'auto_scale', 'flux_biases', 'flux_drift_compensation', 'h_gain_schedule', 'initial_state', 'max_answers', 'num_reads', 'programming_thermalization', 'readout_thermalization', 'reduce_intersample_correlation', 'reinitialize_state', 'fast_anneal'])
    Solver properties parameters keys:  dict_keys(['anneal_offsets', 'anneal_schedule', 'annealing_time', 'answer_mode', 'auto_scale', 'flux_biases', 'flux_drift_compensation', 'h_gain_schedule', 'initial_state', 'max_answers', 'num_reads', 'programming_thermalization', 'readout_thermalization', 'reduce_intersample_correlation', 'reinitialize_state', 'fast_anneal'])
Execution started.
 starting thread Thread_submittter_000
 start working on problem zz_3404157325
 starting thread Thread_submittter_001
 start working on problem zz_3818605985
 starting thread Thread_submittter_002
 start working on problem zz_5818637686
 starting thread Thread_submittter_003
 start working on problem zz_8525724730
 starting thread Thread_submittter_004
 start working on problem zz_0848920188
 starting thread Thread_submittter_005
 start working on problem zz_2593283829
 starting thread Thread_submittter_006
 start working on problem zz_3079327571
 starting thread Thread_submittter_007
 start working on problem zz_5377045315
 starting thread Thread_writer_000
 starting thread Thread_writer_001
 starting thread Thread_reporter_000
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 problem zz_3404157325 will take can be sampled with a single run
 problem zz_3404157325 will be solved 1 times per run
 start run 0 for problem zz_3404157325
   start samplings 1000 for problem zz_3404157325
sampled for problem zz_3404157325
 problem zz_5818637686 will take can be sampled with a single run
 problem zz_5818637686 will be solved 1 times per run
 start run 0 for problem zz_5818637686
   start samplings 1000 for problem zz_5818637686
sampled for problem zz_5818637686
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 problem zz_3079327571 will take can be sampled with a single run
 problem zz_3079327571 will be solved 1 times per run
 problem zz_5377045315 will take can be sampled with a single run
 problem zz_5377045315 will be solved 1 times per run
 problem zz_8525724730 will take can be sampled with a single run
 problem zz_8525724730 will be solved 1 times per run
 start run 0 for problem zz_5377045315
   start samplings 1000 for problem zz_5377045315
 problem zz_3818605985 will take can be sampled with a single run
 problem zz_3818605985 will be solved 1 times per run
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 start run 0 for problem zz_3079327571
   start samplings 1000 for problem zz_3079327571
 problem zz_2593283829 will take can be sampled with a single run
 problem zz_2593283829 will be solved 1 times per run
sampled for problem zz_3404157325
finished samples sampling for zz_3404157325
 finished run 0 for problem zz_3404157325
 start run 1 for problem zz_3404157325
   start samplings 1000 for problem zz_3404157325
sampled for problem zz_5377045315
 problem zz_0848920188 will take can be sampled with a single run
 problem zz_0848920188 will be solved 1 times per run
sampled for problem zz_3079327571
sampled for problem zz_3404157325
sampled for problem zz_5818637686
finished samples sampling for zz_5818637686
 finished run 0 for problem zz_5818637686
 start run 1 for problem zz_5818637686
   start samplings 1000 for problem zz_5818637686
 start run 0 for problem zz_8525724730
   start samplings 1000 for problem zz_8525724730
sampled for problem zz_5818637686
 start run 0 for problem zz_3818605985
   start samplings 1000 for problem zz_3818605985
sampled for problem zz_3818605985
sampled for problem zz_8525724730
 start run 0 for problem zz_2593283829
   start samplings 1000 for problem zz_2593283829
 start run 0 for problem zz_0848920188
   start samplings 1000 for problem zz_0848920188
sampled for problem zz_2593283829
sampled for problem zz_0848920188
sampled for problem zz_5377045315
finished samples sampling for zz_5377045315
 finished run 0 for problem zz_5377045315
 start run 1 for problem zz_5377045315
   start samplings 1000 for problem zz_5377045315
sampled for problem zz_5377045315
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3079327571
finished samples sampling for zz_3079327571
 finished run 0 for problem zz_3079327571
 start run 1 for problem zz_3079327571
   start samplings 1000 for problem zz_3079327571
sampled for problem zz_3079327571
sampled for problem zz_3404157325
finished samples sampling for zz_3404157325
 finished run 1 for problem zz_3404157325
 start run 2 for problem zz_3404157325
   start samplings 1000 for problem zz_3404157325
sampled for problem zz_3404157325
sampled for problem zz_5818637686
finished samples sampling for zz_5818637686
 finished run 1 for problem zz_5818637686
 start run 2 for problem zz_5818637686
   start samplings 1000 for problem zz_5818637686
sampled for problem zz_5818637686
sampled for problem zz_8525724730
finished samples sampling for zz_8525724730
 finished run 0 for problem zz_8525724730
 start run 1 for problem zz_8525724730
   start samplings 1000 for problem zz_8525724730
sampled for problem zz_8525724730
sampled for problem zz_3818605985
finished samples sampling for zz_3818605985
 finished run 0 for problem zz_3818605985
 start run 1 for problem zz_3818605985
   start samplings 1000 for problem zz_3818605985
sampled for problem zz_3818605985
sampled for problem zz_2593283829
finished samples sampling for zz_2593283829
 finished run 0 for problem zz_2593283829
 start run 1 for problem zz_2593283829
   start samplings 1000 for problem zz_2593283829
sampled for problem zz_2593283829
sampled for problem zz_0848920188
finished samples sampling for zz_0848920188
 finished run 0 for problem zz_0848920188
 start run 1 for problem zz_0848920188
   start samplings 1000 for problem zz_0848920188
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0848920188
sampled for problem zz_5377045315
finished samples sampling for zz_5377045315
 finished run 1 for problem zz_5377045315
 start run 2 for problem zz_5377045315
   start samplings 1000 for problem zz_5377045315
sampled for problem zz_5377045315
sampled for problem zz_3079327571
finished samples sampling for zz_3079327571no cupy available, imported numpy as usual
Custom getstate functions for dwave.cloud.config.models.ClientConfig, dwave.cloud.client.qpu.Client, dwave.cloud.solver.StructuredSolver, dwave.system.samplers.dwave_sampler.DWaveSampler, dwave.system.composites.embedding.FixedEmbeddingComposite have been initialized.
 Process-10 started with inputs {'print_prefix': ' ', 'kwargs_dwavesampler': {'token': 'JG5Y-1f0a1b755b7b93b5466f23e3abf1c3a1920c15fb', 'region': 'eu-central-1', 'architecture': 'pegasus', 'name': 'Advantage_system5.4'}, 'folder_path_main': '/mnt/RAID/home/adam-1aeqn8vhvpjnv4u/mast_sub5/Quantum_Annealing_for_Particle_Matching/00_tests/01_out/sub_5_3_2', 'info_file_name': 'study_params_sub5_3_2.h5'}
Available solvers based on specifications (client):  [StructuredSolver(id='Advantage_system5.4')]
Chosen solver based on specifications (solver):  StructuredSolver(id='Advantage_system5.4') , status is online:  True
    Solver properties keys:  dict_keys(['num_qubits', 'qubits', 'couplers', 'h_range', 'j_range', 'supported_problem_types', 'parameters', 'vfyc', 'anneal_offset_ranges', 'anneal_offset_step', 'anneal_offset_step_phi0', 'annealing_time_range', 'chip_id', 'default_annealing_time', 'default_programming_thermalization', 'default_readout_thermalization', 'extended_j_range', 'fast_anneal_time_range', 'h_gain_schedule_range', 'max_anneal_schedule_points', 'max_h_gain_schedule_points', 'num_reads_range', 'per_qubit_coupling_range', 'problem_run_duration_range', 'problem_timing_data', 'programming_thermalization_range', 'readout_thermalization_range', 'tags', 'topology', 'category', 'quota_conversion_rate'])
        problem_run_duration_range:  [0.0, 1000000.0]
    Solver parameters keys:  dict_keys(['anneal_offsets', 'anneal_schedule', 'annealing_time', 'answer_mode', 'auto_scale', 'flux_biases', 'flux_drift_compensation', 'h_gain_schedule', 'initial_state', 'max_answers', 'num_reads', 'programming_thermalization', 'readout_thermalization', 'reduce_intersample_correlation', 'reinitialize_state', 'fast_anneal'])
    Solver properties parameters keys:  dict_keys(['anneal_offsets', 'anneal_schedule', 'annealing_time', 'answer_mode', 'auto_scale', 'flux_biases', 'flux_drift_compensation', 'h_gain_schedule', 'initial_state', 'max_answers', 'num_reads', 'programming_thermalization', 'readout_thermalization', 'reduce_intersample_correlation', 'reinitialize_state', 'fast_anneal'])
Execution started.
 starting thread Thread_submittter_000
 start working on problem zz_5061896232
 starting thread Thread_submittter_001
 start working on problem zz_4833824559
 starting thread Thread_submittter_002
 start working on problem zz_9040679618
 starting thread Thread_submittter_003
 start working on problem zz_6887129085
 starting thread Thread_submittter_004
 start working on problem zz_6417317480
 starting thread Thread_submittter_005
 start working on problem zz_0155935328
 starting thread Thread_submittter_006
 start working on problem zz_4355150326
 starting thread Thread_submittter_007
 start working on problem zz_3319605940
 starting thread Thread_writer_000
 starting thread Thread_writer_001
 starting thread Thread_reporter_000
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 problem zz_5061896232 will take can be sampled with a single run
 problem zz_5061896232 will be solved 1 times per run
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 start run 0 for problem zz_5061896232
   start samplings 1000 for problem zz_5061896232
 problem zz_6417317480 will take can be sampled with a single run
 problem zz_6417317480 will be solved 1 times per run
sampled for problem zz_5061896232
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 start run 0 for problem zz_6417317480
   start samplings 1000 for problem zz_6417317480
 problem zz_3319605940 will take can be sampled with a single run
 problem zz_3319605940 will be solved 1 times per run
 problem zz_6887129085 will take can be sampled with a single run
 problem zz_6887129085 will be solved 1 times per run
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 start run 0 for problem zz_6887129085
   start samplings 1000 for problem zz_6887129085
 problem zz_0155935328 will take can be sampled with a single run
 problem zz_0155935328 will be solved 1 times per run
sampled for problem zz_6417317480
 problem zz_9040679618 will take can be sampled with a single run
 problem zz_9040679618 will be solved 1 times per run
 problem zz_4355150326 will take can be sampled with a single run
 problem zz_4355150326 will be solved 1 times per run
 start run 0 for problem zz_3319605940
   start samplings 1000 for problem zz_3319605940
sampled for problem zz_3319605940
sampled for problem zz_6887129085
 start run 0 for problem zz_0155935328
   start samplings 1000 for problem zz_0155935328
 start run 0 for problem zz_9040679618
   start samplings 1000 for problem zz_9040679618
sampled for problem zz_5061896232
finished samples sampling for zz_5061896232
 finished run 0 for problem zz_5061896232
 start run 1 for problem zz_5061896232
   start samplings 1000 for problem zz_5061896232
sampled for problem zz_0155935328
sampled for problem zz_5061896232
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 problem zz_4833824559 will take can be sampled with a single run
 problem zz_4833824559 will be solved 1 times per run
sampled for problem zz_9040679618
sampled for problem zz_6417317480
finished samples sampling for zz_6417317480
 finished run 0 for problem zz_6417317480
 start run 1 for problem zz_6417317480
   start samplings 1000 for problem zz_6417317480
sampled for problem zz_6417317480
sampled for problem zz_3319605940
finished samples sampling for zz_3319605940
 finished run 0 for problem zz_3319605940
 start run 1 for problem zz_3319605940
   start samplings 1000 for problem zz_3319605940
sampled for problem zz_3319605940
 start run 0 for problem zz_4355150326
   start samplings 1000 for problem zz_4355150326
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_4355150326
 start run 0 for problem zz_4833824559
   start samplings 1000 for problem zz_4833824559
sampled for problem zz_4833824559
sampled for problem zz_6887129085
finished samples sampling for zz_6887129085
 finished run 0 for problem zz_6887129085
 start run 1 for problem zz_6887129085
   start samplings 1000 for problem zz_6887129085
sampled for problem zz_6887129085
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0155935328
finished samples sampling for zz_0155935328
 finished run 0 for problem zz_0155935328
 start run 1 for problem zz_0155935328
   start samplings 1000 for problem zz_0155935328
sampled for problem zz_0155935328
sampled for problem zz_5061896232
finished samples sampling for zz_5061896232
 finished run 1 for problem zz_5061896232
 start run 2 for problem zz_5061896232
   start samplings 1000 for problem zz_5061896232
sampled for problem zz_5061896232
sampled for problem zz_9040679618
finished samples sampling for zz_9040679618
 finished run 0 for problem zz_9040679618
 start run 1 for problem zz_9040679618
   start samplings 1000 for problem zz_9040679618
sampled for problem zz_9040679618
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6417317480
finished samples sampling for zz_6417317480
 finished run 1 for problem zz_6417317480
 start run 2 for problem zz_6417317480
   start samplings 1000 for problem zz_6417317480
sampled for problem zz_6417317480
sampled for problem zz_3319605940
finished samples sampling for zz_3319605940
 finished run 1 for problem zz_3319605940
 start run 2 for problem zz_3319605940
   start samplings 1000 for problem zz_3319605940
sampled for problem zz_3319605940
sampled for problem zz_4355150326
finished samples sampling for zz_4355150326
 finished run 0 for problem zz_4355150326
 start run 1 for problem zz_4355150326
   start samplings 1000 for problem zz_4355150326
sampled for problem zz_4355150326
sampled for problem zz_4833824559
finished samples sampling for zz_4833824559
 finished run 0 for problem zz_4833824559
 start run 1 for problem zz_4833824559
no cupy available, imported numpy as usual
Custom getstate functions for dwave.cloud.config.models.ClientConfig, dwave.cloud.client.qpu.Client, dwave.cloud.solver.StructuredSolver, dwave.system.samplers.dwave_sampler.DWaveSampler, dwave.system.composites.embedding.FixedEmbeddingComposite have been initialized.
 Process-11 started with inputs {'print_prefix': ' ', 'kwargs_dwavesampler': {'token': 'JG5Y-1f0a1b755b7b93b5466f23e3abf1c3a1920c15fb', 'region': 'eu-central-1', 'architecture': 'pegasus', 'name': 'Advantage_system5.4'}, 'folder_path_main': '/mnt/RAID/home/adam-1aeqn8vhvpjnv4u/mast_sub5/Quantum_Annealing_for_Particle_Matching/00_tests/01_out/sub_5_3_2', 'info_file_name': 'study_params_sub5_3_2.h5'}
Available solvers based on specifications (client):  [StructuredSolver(id='Advantage_system5.4')]
Chosen solver based on specifications (solver):  StructuredSolver(id='Advantage_system5.4') , status is online:  True
    Solver properties keys:  dict_keys(['num_qubits', 'qubits', 'couplers', 'h_range', 'j_range', 'supported_problem_types', 'parameters', 'vfyc', 'anneal_offset_ranges', 'anneal_offset_step', 'anneal_offset_step_phi0', 'annealing_time_range', 'chip_id', 'default_annealing_time', 'default_programming_thermalization', 'default_readout_thermalization', 'extended_j_range', 'fast_anneal_time_range', 'h_gain_schedule_range', 'max_anneal_schedule_points', 'max_h_gain_schedule_points', 'num_reads_range', 'per_qubit_coupling_range', 'problem_run_duration_range', 'problem_timing_data', 'programming_thermalization_range', 'readout_thermalization_range', 'tags', 'topology', 'category', 'quota_conversion_rate'])
        problem_run_duration_range:  [0.0, 1000000.0]
    Solver parameters keys:  dict_keys(['anneal_offsets', 'anneal_schedule', 'annealing_time', 'answer_mode', 'auto_scale', 'flux_biases', 'flux_drift_compensation', 'h_gain_schedule', 'initial_state', 'max_answers', 'num_reads', 'programming_thermalization', 'readout_thermalization', 'reduce_intersample_correlation', 'reinitialize_state', 'fast_anneal'])
    Solver properties parameters keys:  dict_keys(['anneal_offsets', 'anneal_schedule', 'annealing_time', 'answer_mode', 'auto_scale', 'flux_biases', 'flux_drift_compensation', 'h_gain_schedule', 'initial_state', 'max_answers', 'num_reads', 'programming_thermalization', 'readout_thermalization', 'reduce_intersample_correlation', 'reinitialize_state', 'fast_anneal'])
Execution started.
 starting thread Thread_submittter_000
 start working on problem zz_5853151821
 starting thread Thread_submittter_001
 start working on problem zz_9480036090
 starting thread Thread_submittter_002
 start working on problem zz_6710953139
 starting thread Thread_submittter_003
 start working on problem zz_6118499488
 starting thread Thread_submittter_004
 start working on problem zz_6870904713
 starting thread Thread_submittter_005
 start working on problem zz_6827423238
 starting thread Thread_submittter_006
 start working on problem zz_9832808442
 starting thread Thread_submittter_007
 start working on problem zz_0698736184
 starting thread Thread_writer_000
 starting thread Thread_writer_001
 starting thread Thread_reporter_000
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 problem zz_9832808442 will take can be sampled with a single run
 problem zz_9832808442 will be solved 1 times per run
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 problem zz_6710953139 will take can be sampled with a single run
 problem zz_6710953139 will be solved 1 times per run
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 start run 0 for problem zz_9832808442
   start samplings 1000 for problem zz_9832808442
sampled for problem zz_9832808442
 problem zz_6118499488 will take can be sampled with a single run
 problem zz_6118499488 will be solved 1 times per run
 problem zz_6870904713 will take can be sampled with a single run
 problem zz_6870904713 will be solved 1 times per run
 start run 0 for problem zz_6710953139
   start samplings 1000 for problem zz_6710953139
 start run 0 for problem zz_6118499488
   start samplings 1000 for problem zz_6118499488
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 problem zz_0698736184 will take can be sampled with a single run
 problem zz_0698736184 will be solved 1 times per run
sampled for problem zz_6118499488
 problem zz_5853151821 will take can be sampled with a single run
 problem zz_5853151821 will be solved 1 times per run
 problem zz_9480036090 will take can be sampled with a single run
 problem zz_9480036090 will be solved 1 times per run
 start run 0 for problem zz_6870904713
   start samplings 1000 for problem zz_6870904713
 problem zz_6827423238 will take can be sampled with a single run
 problem zz_6827423238 will be solved 1 times per run
 start run 0 for problem zz_0698736184
   start samplings 1000 for problem zz_0698736184
sampled for problem zz_6710953139
sampled for problem zz_6870904713
sampled for problem zz_0698736184
 start run 0 for problem zz_5853151821
   start samplings 1000 for problem zz_5853151821
sampled for problem zz_5853151821
 start run 0 for problem zz_9480036090
   start samplings 1000 for problem zz_9480036090
sampled for problem zz_9480036090
 start run 0 for problem zz_6827423238
   start samplings 1000 for problem zz_6827423238
sampled for problem zz_6827423238
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9832808442
finished samples sampling for zz_9832808442
 finished run 0 for problem zz_9832808442
 start run 1 for problem zz_9832808442
   start samplings 1000 for problem zz_9832808442
sampled for problem zz_9832808442
sampled for problem zz_6118499488
finished samples sampling for zz_6118499488
 finished run 0 for problem zz_6118499488
 start run 1 for problem zz_6118499488
   start samplings 1000 for problem zz_6118499488
sampled for problem zz_6118499488
sampled for problem zz_6710953139
finished samples sampling for zz_6710953139
 finished run 0 for problem zz_6710953139
 start run 1 for problem zz_6710953139
   start samplings 1000 for problem zz_6710953139
sampled for problem zz_6710953139
sampled for problem zz_6870904713
finished samples sampling for zz_6870904713
 finished run 0 for problem zz_6870904713
 start run 1 for problem zz_6870904713
   start samplings 1000 for problem zz_6870904713
sampled for problem zz_6870904713
sampled for problem zz_0698736184
finished samples sampling for zz_0698736184
 finished run 0 for problem zz_0698736184
 start run 1 for problem zz_0698736184
   start samplings 1000 for problem zz_0698736184
sampled for problem zz_0698736184
sampled for problem zz_5853151821
finished samples sampling for zz_5853151821
 finished run 0 for problem zz_5853151821
 start run 1 for problem zz_5853151821
   start samplings 1000 for problem zz_5853151821
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5853151821
sampled for problem zz_9480036090
finished samples sampling for zz_9480036090
 finished run 0 for problem zz_9480036090
 start run 1 for problem zz_9480036090
   start samplings 1000 for problem zz_9480036090
sampled for problem zz_9480036090
sampled for problem zz_6827423238
finished samples sampling for zz_6827423238
 finished run 0 for problem zz_6827423238
 start run 1 for problem zz_6827423238
   start samplings 1000 for problem zz_6827423238
sampled for problem zz_6827423238
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9832808442
finished samples sampling for zz_9832808442
 finished run 1 for problem zz_9832808442
 start run 2 for problem zz_9832808442
   start samplings 1000 for problem zz_9832808442
sampled for problem zz_9832808442
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6118499488
finished samples sampling for zz_6118499488
 finished run 1 for problem zz_6118499488
 start run 2 for problem zz_6118499488
   start samplings 1000 for problem zz_6118499488
 finished run 1 for problem zz_3079327571
 start run 2 for problem zz_3079327571
   start samplings 1000 for problem zz_3079327571
sampled for problem zz_3079327571
sampled for problem zz_3404157325
finished samples sampling for zz_3404157325
 finished run 2 for problem zz_3404157325
 start run 3 for problem zz_3404157325
   start samplings 1000 for problem zz_3404157325
sampled for problem zz_3404157325
sampled for problem zz_5818637686
finished samples sampling for zz_5818637686
 finished run 2 for problem zz_5818637686
 start run 3 for problem zz_5818637686
   start samplings 1000 for problem zz_5818637686
sampled for problem zz_5818637686
sampled for problem zz_8525724730
finished samples sampling for zz_8525724730
 finished run 1 for problem zz_8525724730
 start run 2 for problem zz_8525724730
   start samplings 1000 for problem zz_8525724730
sampled for problem zz_8525724730
sampled for problem zz_3818605985
finished samples sampling for zz_3818605985
 finished run 1 for problem zz_3818605985
 start run 2 for problem zz_3818605985
   start samplings 1000 for problem zz_3818605985
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3818605985
sampled for problem zz_2593283829
finished samples sampling for zz_2593283829
 finished run 1 for problem zz_2593283829
 start run 2 for problem zz_2593283829
   start samplings 1000 for problem zz_2593283829
sampled for problem zz_2593283829
sampled for problem zz_0848920188
finished samples sampling for zz_0848920188
 finished run 1 for problem zz_0848920188
 start run 2 for problem zz_0848920188
   start samplings 1000 for problem zz_0848920188
sampled for problem zz_0848920188
sampled for problem zz_5377045315
finished samples sampling for zz_5377045315
 finished run 2 for problem zz_5377045315
 start run 3 for problem zz_5377045315
   start samplings 1000 for problem zz_5377045315
sampled for problem zz_5377045315
sampled for problem zz_3079327571
finished samples sampling for zz_3079327571
 finished run 2 for problem zz_3079327571
 start run 3 for problem zz_3079327571
   start samplings 1000 for problem zz_3079327571
sampled for problem zz_3079327571
sampled for problem zz_3404157325
finished samples sampling for zz_3404157325
 finished run 3 for problem zz_3404157325
 start run 4 for problem zz_3404157325
   start samplings 1000 for problem zz_3404157325
sampled for problem zz_3404157325
sampled for problem zz_5818637686
finished samples sampling for zz_5818637686
 finished run 3 for problem zz_5818637686
 start run 4 for problem zz_5818637686
   start samplings 1000 for problem zz_5818637686
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5818637686
sampled for problem zz_8525724730
finished samples sampling for zz_8525724730
 finished run 2 for problem zz_8525724730
 start run 3 for problem zz_8525724730
   start samplings 1000 for problem zz_8525724730
sampled for problem zz_8525724730
sampled for problem zz_3818605985
finished samples sampling for zz_3818605985
 finished run 2 for problem zz_3818605985
 start run 3 for problem zz_3818605985
   start samplings 1000 for problem zz_3818605985
sampled for problem zz_3818605985
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2593283829
finished samples sampling for zz_2593283829
 finished run 2 for problem zz_2593283829
 start run 3 for problem zz_2593283829
   start samplings 1000 for problem zz_2593283829
sampled for problem zz_2593283829
sampled for problem zz_0848920188
finished samples sampling for zz_0848920188
 finished run 2 for problem zz_0848920188
 start run 3 for problem zz_0848920188
   start samplings 1000 for problem zz_0848920188
sampled for problem zz_0848920188
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5377045315
finished samples sampling for zz_5377045315
 finished run 3 for problem zz_5377045315
 start run 4 for problem zz_5377045315
   start samplings 1000 for problem zz_5377045315
sampled for problem zz_5377045315
sampled for problem zz_3079327571
finished samples sampling for zz_3079327571
 finished run 3 for problem zz_3079327571
 start run 4 for problem zz_3079327571
   start samplings 1000 for problem zz_3079327571
sampled for problem zz_3079327571
sampled for problem zz_3404157325
finished samples sampling for zz_3404157325
 finished run 4 for problem zz_3404157325
 start run 5 for problem zz_3404157325
   start samplings 1000 for problem zz_3404157325
sampled for problem zz_3404157325
sampled for problem zz_5818637686
finished samples sampling for zz_5818637686
 finished run 4 for problem zz_5818637686
 start run 5 for problem zz_5818637686
   start samplings 1000 for problem zz_5818637686
sampled for problem zz_5818637686
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_8525724730
finished samples sampling for zz_8525724730
 finished run 3 for problem zz_8525724730
 start run 4 for problem zz_8525724730
   start samplings 1000 for problem zz_8525724730
sampled for problem zz_8525724730
sampled for problem zz_3818605985
finished samples sampling for zz_3818605985
 finished run 3 for problem zz_3818605985
 start run 4 for problem zz_3818605985
   start samplings 1000 for problem zz_3818605985
sampled for problem zz_3818605985
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2593283829
finished samples sampling for zz_2593283829
 finished run 3 for problem zz_2593283829
 start run 4 for problem zz_2593283829
   start samplings 1000 for problem zz_2593283829
sampled for problem zz_2593283829
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0848920188
finished samples sampling for zz_0848920188
 finished run 3 for problem zz_0848920188
 start run 4 for problem zz_0848920188
   start samplings 1000 for problem zz_0848920188
sampled for problem zz_0848920188
sampled for problem zz_5377045315
finished samples sampling for zz_5377045315
 finished run 4 for problem zz_5377045315
 start run 5 for problem zz_5377045315
   start samplings 1000 for problem zz_5377045315
sampled for problem zz_5377045315
sampled for problem zz_3079327571
finished samples sampling for zz_3079327571
 finished run 4 for problem zz_3079327571
 start run 5 for problem zz_3079327571
   start samplings 1000 for problem zz_3079327571
sampled for problem zz_3079327571
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3404157325
finished samples sampling for zz_3404157325
 finished run 5 for problem zz_3404157325
 start run 6 for problem zz_3404157325
   start samplings 1000 for problem zz_3404157325
sampled for problem zz_3404157325
sampled for problem zz_5818637686
finished samples sampling for zz_5818637686
 finished run 5 for problem zz_5818637686
 start run 6 for problem zz_5818637686
   start samplings 1000 for problem zz_5818637686
sampled for problem zz_5818637686
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_8525724730
finished samples sampling for zz_8525724730
 finished run 4 for problem zz_8525724730
 start run 5 for problem zz_8525724730
   start samplings 1000 for problem zz_8525724730
sampled for problem zz_8525724730
sampled for problem zz_3818605985
finished samples sampling for zz_3818605985
 finished run 4 for problem zz_3818605985
 start run 5 for problem zz_3818605985
   start samplings 1000 for problem zz_3818605985
sampled for problem zz_3818605985
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2593283829
finished samples sampling for zz_2593283829
 finished run 4 for problem zz_2593283829
 start run 5 for problem zz_2593283829
   start samplings 1000 for problem zz_2593283829
sampled for problem zz_2593283829
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0848920188
finished samples sampling for zz_0848920188
 finished run 4 for problem zz_0848920188
 start run 5 for problem zz_0848920188
   start samplings 1000 for problem zz_0848920188
sampled for problem zz_0848920188
sampled for problem zz_5377045315no cupy available, imported numpy as usual
Custom getstate functions for dwave.cloud.config.models.ClientConfig, dwave.cloud.client.qpu.Client, dwave.cloud.solver.StructuredSolver, dwave.system.samplers.dwave_sampler.DWaveSampler, dwave.system.composites.embedding.FixedEmbeddingComposite have been initialized.
 Process-12 started with inputs {'print_prefix': ' ', 'kwargs_dwavesampler': {'token': 'JG5Y-1f0a1b755b7b93b5466f23e3abf1c3a1920c15fb', 'region': 'eu-central-1', 'architecture': 'pegasus', 'name': 'Advantage_system5.4'}, 'folder_path_main': '/mnt/RAID/home/adam-1aeqn8vhvpjnv4u/mast_sub5/Quantum_Annealing_for_Particle_Matching/00_tests/01_out/sub_5_3_2', 'info_file_name': 'study_params_sub5_3_2.h5'}
Available solvers based on specifications (client):  [StructuredSolver(id='Advantage_system5.4')]
Chosen solver based on specifications (solver):  StructuredSolver(id='Advantage_system5.4') , status is online:  True
    Solver properties keys:  dict_keys(['num_qubits', 'qubits', 'couplers', 'h_range', 'j_range', 'supported_problem_types', 'parameters', 'vfyc', 'anneal_offset_ranges', 'anneal_offset_step', 'anneal_offset_step_phi0', 'annealing_time_range', 'chip_id', 'default_annealing_time', 'default_programming_thermalization', 'default_readout_thermalization', 'extended_j_range', 'fast_anneal_time_range', 'h_gain_schedule_range', 'max_anneal_schedule_points', 'max_h_gain_schedule_points', 'num_reads_range', 'per_qubit_coupling_range', 'problem_run_duration_range', 'problem_timing_data', 'programming_thermalization_range', 'readout_thermalization_range', 'tags', 'topology', 'category', 'quota_conversion_rate'])
        problem_run_duration_range:  [0.0, 1000000.0]
    Solver parameters keys:  dict_keys(['anneal_offsets', 'anneal_schedule', 'annealing_time', 'answer_mode', 'auto_scale', 'flux_biases', 'flux_drift_compensation', 'h_gain_schedule', 'initial_state', 'max_answers', 'num_reads', 'programming_thermalization', 'readout_thermalization', 'reduce_intersample_correlation', 'reinitialize_state', 'fast_anneal'])
    Solver properties parameters keys:  dict_keys(['anneal_offsets', 'anneal_schedule', 'annealing_time', 'answer_mode', 'auto_scale', 'flux_biases', 'flux_drift_compensation', 'h_gain_schedule', 'initial_state', 'max_answers', 'num_reads', 'programming_thermalization', 'readout_thermalization', 'reduce_intersample_correlation', 'reinitialize_state', 'fast_anneal'])
Execution started.
 starting thread Thread_submittter_000
 start working on problem zz_0602320444
 starting thread Thread_submittter_001
 start working on problem zz_8821900078
 starting thread Thread_submittter_002
 start working on problem zz_2362810253
 starting thread Thread_submittter_003
 start working on problem zz_4944517933
 starting thread Thread_submittter_004
 start working on problem zz_1007359256
 starting thread Thread_submittter_005
 start working on problem zz_9073880962
 starting thread Thread_submittter_006
 start working on problem zz_2040850932
 starting thread Thread_submittter_007
 start working on problem zz_5578972868
 starting thread Thread_writer_000
 starting thread Thread_writer_001
 starting thread Thread_reporter_000
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 problem zz_2362810253 will take can be sampled with a single run
 problem zz_2362810253 will be solved 1 times per run
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 start run 0 for problem zz_2362810253
   start samplings 1000 for problem zz_2362810253
 problem zz_0602320444 will take can be sampled with a single run
 problem zz_0602320444 will be solved 1 times per run
 start run 0 for problem zz_0602320444
   start samplings 1000 for problem zz_0602320444
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2362810253
 problem zz_5578972868 will take can be sampled with a single run
 problem zz_5578972868 will be solved 1 times per run
 problem zz_2040850932 will take can be sampled with a single run
 problem zz_2040850932 will be solved 1 times per run
sampled for problem zz_0602320444
 start run 0 for problem zz_5578972868
   start samplings 1000 for problem zz_5578972868
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 problem zz_4944517933 will take can be sampled with a single run
 problem zz_4944517933 will be solved 1 times per run
 start run 0 for problem zz_2040850932
   start samplings 1000 for problem zz_2040850932
 problem zz_9073880962 will take can be sampled with a single run
 problem zz_9073880962 will be solved 1 times per run
sampled for problem zz_5578972868
 start run 0 for problem zz_4944517933
   start samplings 1000 for problem zz_4944517933
 problem zz_1007359256 will take can be sampled with a single run
 problem zz_1007359256 will be solved 1 times per run
 problem zz_8821900078 will take can be sampled with a single run
 problem zz_8821900078 will be solved 1 times per run
 start run 0 for problem zz_9073880962
   start samplings 1000 for problem zz_9073880962
sampled for problem zz_2040850932
sampled for problem zz_4944517933
sampled for problem zz_9073880962
 start run 0 for problem zz_8821900078
   start samplings 1000 for problem zz_8821900078
sampled for problem zz_8821900078
 start run 0 for problem zz_1007359256
   start samplings 1000 for problem zz_1007359256
sampled for problem zz_1007359256
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2362810253
finished samples sampling for zz_2362810253
 finished run 0 for problem zz_2362810253
 start run 1 for problem zz_2362810253
   start samplings 1000 for problem zz_2362810253
sampled for problem zz_2362810253
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0602320444
finished samples sampling for zz_0602320444
 finished run 0 for problem zz_0602320444
 start run 1 for problem zz_0602320444
   start samplings 1000 for problem zz_0602320444
sampled for problem zz_0602320444
sampled for problem zz_5578972868
finished samples sampling for zz_5578972868
 finished run 0 for problem zz_5578972868
 start run 1 for problem zz_5578972868
   start samplings 1000 for problem zz_5578972868
sampled for problem zz_5578972868
sampled for problem zz_2040850932
finished samples sampling for zz_2040850932
 finished run 0 for problem zz_2040850932
 start run 1 for problem zz_2040850932
   start samplings 1000 for problem zz_2040850932
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2040850932
sampled for problem zz_4944517933
finished samples sampling for zz_4944517933
 finished run 0 for problem zz_4944517933
 start run 1 for problem zz_4944517933
   start samplings 1000 for problem zz_4944517933
sampled for problem zz_4944517933
sampled for problem zz_9073880962
finished samples sampling for zz_9073880962
 finished run 0 for problem zz_9073880962
 start run 1 for problem zz_9073880962
   start samplings 1000 for problem zz_9073880962
sampled for problem zz_9073880962
sampled for problem zz_8821900078
finished samples sampling for zz_8821900078
 finished run 0 for problem zz_8821900078
 start run 1 for problem zz_8821900078
   start samplings 1000 for problem zz_8821900078
sampled for problem zz_8821900078
sampled for problem zz_1007359256
finished samples sampling for zz_1007359256
 finished run 0 for problem zz_1007359256
 start run 1 for problem zz_1007359256
   start samplings 1000 for problem zz_1007359256
sampled for problem zz_1007359256
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2362810253
finished samples sampling for zz_2362810253
 finished run 1 for problem zz_2362810253
 start run 2 for problem zz_2362810253
   start samplings 1000 for problem zz_2362810253
sampled for problem zz_2362810253
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0602320444
finished samples sampling for zz_0602320444no cupy available, imported numpy as usual
Custom getstate functions for dwave.cloud.config.models.ClientConfig, dwave.cloud.client.qpu.Client, dwave.cloud.solver.StructuredSolver, dwave.system.samplers.dwave_sampler.DWaveSampler, dwave.system.composites.embedding.FixedEmbeddingComposite have been initialized.
 Process-13 started with inputs {'print_prefix': ' ', 'kwargs_dwavesampler': {'token': 'JG5Y-1f0a1b755b7b93b5466f23e3abf1c3a1920c15fb', 'region': 'eu-central-1', 'architecture': 'pegasus', 'name': 'Advantage_system5.4'}, 'folder_path_main': '/mnt/RAID/home/adam-1aeqn8vhvpjnv4u/mast_sub5/Quantum_Annealing_for_Particle_Matching/00_tests/01_out/sub_5_3_2', 'info_file_name': 'study_params_sub5_3_2.h5'}
Available solvers based on specifications (client):  [StructuredSolver(id='Advantage_system5.4')]
Chosen solver based on specifications (solver):  StructuredSolver(id='Advantage_system5.4') , status is online:  True
    Solver properties keys:  dict_keys(['num_qubits', 'qubits', 'couplers', 'h_range', 'j_range', 'supported_problem_types', 'parameters', 'vfyc', 'anneal_offset_ranges', 'anneal_offset_step', 'anneal_offset_step_phi0', 'annealing_time_range', 'chip_id', 'default_annealing_time', 'default_programming_thermalization', 'default_readout_thermalization', 'extended_j_range', 'fast_anneal_time_range', 'h_gain_schedule_range', 'max_anneal_schedule_points', 'max_h_gain_schedule_points', 'num_reads_range', 'per_qubit_coupling_range', 'problem_run_duration_range', 'problem_timing_data', 'programming_thermalization_range', 'readout_thermalization_range', 'tags', 'topology', 'category', 'quota_conversion_rate'])
        problem_run_duration_range:  [0.0, 1000000.0]
    Solver parameters keys:  dict_keys(['anneal_offsets', 'anneal_schedule', 'annealing_time', 'answer_mode', 'auto_scale', 'flux_biases', 'flux_drift_compensation', 'h_gain_schedule', 'initial_state', 'max_answers', 'num_reads', 'programming_thermalization', 'readout_thermalization', 'reduce_intersample_correlation', 'reinitialize_state', 'fast_anneal'])
    Solver properties parameters keys:  dict_keys(['anneal_offsets', 'anneal_schedule', 'annealing_time', 'answer_mode', 'auto_scale', 'flux_biases', 'flux_drift_compensation', 'h_gain_schedule', 'initial_state', 'max_answers', 'num_reads', 'programming_thermalization', 'readout_thermalization', 'reduce_intersample_correlation', 'reinitialize_state', 'fast_anneal'])
Execution started.
 starting thread Thread_submittter_000
 start working on problem zz_3202394964
 starting thread Thread_submittter_001
 start working on problem zz_5249775500
 starting thread Thread_submittter_002
 start working on problem zz_5309607385
 starting thread Thread_submittter_003
 start working on problem zz_3545900650
 starting thread Thread_submittter_004
 start working on problem zz_6575155837
 starting thread Thread_submittter_005
 start working on problem zz_2959573595
 starting thread Thread_submittter_006
 start working on problem zz_5096381632
 starting thread Thread_submittter_007
 start working on problem zz_6731131214
 starting thread Thread_writer_000
 starting thread Thread_writer_001
 starting thread Thread_reporter_000
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 problem zz_3202394964 will take can be sampled with a single run
 problem zz_3202394964 will be solved 1 times per run
 start run 0 for problem zz_3202394964
   start samplings 1000 for problem zz_3202394964
sampled for problem zz_3202394964
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 problem zz_6731131214 will take can be sampled with a single run
 problem zz_6731131214 will be solved 1 times per run
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 problem zz_6575155837 will take can be sampled with a single run
 problem zz_6575155837 will be solved 1 times per run
 problem zz_3545900650 will take can be sampled with a single run
 problem zz_3545900650 will be solved 1 times per run
 problem zz_2959573595 will take can be sampled with a single run
 problem zz_2959573595 will be solved 1 times per run
 start run 0 for problem zz_6731131214
   start samplings 1000 for problem zz_6731131214
sampled for problem zz_6731131214
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 problem zz_5096381632 will take can be sampled with a single run
 problem zz_5096381632 will be solved 1 times per run
 start run 0 for problem zz_3545900650
   start samplings 1000 for problem zz_3545900650
 start run 0 for problem zz_6575155837
   start samplings 1000 for problem zz_6575155837
 problem zz_5309607385 will take can be sampled with a single run
 problem zz_5309607385 will be solved 1 times per run
 start run 0 for problem zz_2959573595
   start samplings 1000 for problem zz_2959573595
sampled for problem zz_3545900650
sampled for problem zz_6575155837
sampled for problem zz_2959573595
 problem zz_5249775500 will take can be sampled with a single run
 problem zz_5249775500 will be solved 1 times per run
 start run 0 for problem zz_5096381632
   start samplings 1000 for problem zz_5096381632
 start run 0 for problem zz_5309607385
   start samplings 1000 for problem zz_5309607385
sampled for problem zz_5096381632
 start run 0 for problem zz_5249775500
   start samplings 1000 for problem zz_5249775500
sampled for problem zz_5249775500
sampled for problem zz_5309607385
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3202394964
finished samples sampling for zz_3202394964
 finished run 0 for problem zz_3202394964
 start run 1 for problem zz_3202394964
   start samplings 1000 for problem zz_3202394964
sampled for problem zz_3202394964
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6731131214
finished samples sampling for zz_6731131214
 finished run 0 for problem zz_6731131214
 start run 1 for problem zz_6731131214
   start samplings 1000 for problem zz_6731131214
sampled for problem zz_6731131214
sampled for problem zz_6575155837
finished samples sampling for zz_6575155837
 finished run 0 for problem zz_6575155837
 start run 1 for problem zz_6575155837
   start samplings 1000 for problem zz_6575155837
sampled for problem zz_6575155837
sampled for problem zz_3545900650
finished samples sampling for zz_3545900650
 finished run 0 for problem zz_3545900650
 start run 1 for problem zz_3545900650
   start samplings 1000 for problem zz_3545900650
sampled for problem zz_3545900650
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2959573595
finished samples sampling for zz_2959573595
 finished run 0 for problem zz_2959573595
 start run 1 for problem zz_2959573595
   start samplings 1000 for problem zz_2959573595
sampled for problem zz_2959573595
sampled for problem zz_5096381632
finished samples sampling for zz_5096381632
 finished run 0 for problem zz_5096381632
 start run 1 for problem zz_5096381632
   start samplings 1000 for problem zz_5096381632
sampled for problem zz_5096381632
sampled for problem zz_5249775500
finished samples sampling for zz_5249775500
 finished run 0 for problem zz_5249775500
 start run 1 for problem zz_5249775500
   start samplings 1000 for problem zz_5249775500
sampled for problem zz_5249775500
sampled for problem zz_5309607385
finished samples sampling for zz_5309607385
 finished run 0 for problem zz_5309607385
 start run 1 for problem zz_5309607385
   start samplings 1000 for problem zz_5309607385
sampled for problem zz_5309607385
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3202394964
finished samples sampling for zz_3202394964
 finished run 1 for problem zz_3202394964
 start run 2 for problem zz_3202394964
   start samplings 1000 for problem zz_3202394964
sampled for problem zz_3202394964
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0no cupy available, imported numpy as usual
Custom getstate functions for dwave.cloud.config.models.ClientConfig, dwave.cloud.client.qpu.Client, dwave.cloud.solver.StructuredSolver, dwave.system.samplers.dwave_sampler.DWaveSampler, dwave.system.composites.embedding.FixedEmbeddingComposite have been initialized.
 Process-14 started with inputs {'print_prefix': ' ', 'kwargs_dwavesampler': {'token': 'JG5Y-1f0a1b755b7b93b5466f23e3abf1c3a1920c15fb', 'region': 'eu-central-1', 'architecture': 'pegasus', 'name': 'Advantage_system5.4'}, 'folder_path_main': '/mnt/RAID/home/adam-1aeqn8vhvpjnv4u/mast_sub5/Quantum_Annealing_for_Particle_Matching/00_tests/01_out/sub_5_3_2', 'info_file_name': 'study_params_sub5_3_2.h5'}
Available solvers based on specifications (client):  [StructuredSolver(id='Advantage_system5.4')]
Chosen solver based on specifications (solver):  StructuredSolver(id='Advantage_system5.4') , status is online:  True
    Solver properties keys:  dict_keys(['num_qubits', 'qubits', 'couplers', 'h_range', 'j_range', 'supported_problem_types', 'parameters', 'vfyc', 'anneal_offset_ranges', 'anneal_offset_step', 'anneal_offset_step_phi0', 'annealing_time_range', 'chip_id', 'default_annealing_time', 'default_programming_thermalization', 'default_readout_thermalization', 'extended_j_range', 'fast_anneal_time_range', 'h_gain_schedule_range', 'max_anneal_schedule_points', 'max_h_gain_schedule_points', 'num_reads_range', 'per_qubit_coupling_range', 'problem_run_duration_range', 'problem_timing_data', 'programming_thermalization_range', 'readout_thermalization_range', 'tags', 'topology', 'category', 'quota_conversion_rate'])
        problem_run_duration_range:  [0.0, 1000000.0]
    Solver parameters keys:  dict_keys(['anneal_offsets', 'anneal_schedule', 'annealing_time', 'answer_mode', 'auto_scale', 'flux_biases', 'flux_drift_compensation', 'h_gain_schedule', 'initial_state', 'max_answers', 'num_reads', 'programming_thermalization', 'readout_thermalization', 'reduce_intersample_correlation', 'reinitialize_state', 'fast_anneal'])
    Solver properties parameters keys:  dict_keys(['anneal_offsets', 'anneal_schedule', 'annealing_time', 'answer_mode', 'auto_scale', 'flux_biases', 'flux_drift_compensation', 'h_gain_schedule', 'initial_state', 'max_answers', 'num_reads', 'programming_thermalization', 'readout_thermalization', 'reduce_intersample_correlation', 'reinitialize_state', 'fast_anneal'])
Execution started.
 starting thread Thread_submittter_000
 start working on problem zz_9571001973
 starting thread Thread_submittter_001
 start working on problem zz_1728207492
 starting thread Thread_submittter_002
 start working on problem zz_3761453891
 starting thread Thread_submittter_003
 start working on problem zz_3729648486
 starting thread Thread_submittter_004
 start working on problem zz_8687733182
 starting thread Thread_submittter_005
 start working on problem zz_0960471698
 starting thread Thread_submittter_006
 start working on problem zz_3237559296
 starting thread Thread_submittter_007
 start working on problem zz_3614144584
 starting thread Thread_writer_000
 starting thread Thread_writer_001
 starting thread Thread_reporter_000
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 problem zz_3761453891 will take can be sampled with a single run
 problem zz_3761453891 will be solved 1 times per run
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 problem zz_3729648486 will take can be sampled with a single run
 problem zz_3729648486 will be solved 1 times per run
 problem zz_8687733182 will take can be sampled with a single run
 problem zz_8687733182 will be solved 1 times per run
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 start run 0 for problem zz_3761453891
   start samplings 1000 for problem zz_3761453891
 problem zz_3237559296 will take can be sampled with a single run
 problem zz_3237559296 will be solved 1 times per run
sampled for problem zz_3761453891
 problem zz_9571001973 will take can be sampled with a single run
 problem zz_9571001973 will be solved 1 times per run
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 start run 0 for problem zz_3729648486
   start samplings 1000 for problem zz_3729648486
 problem zz_1728207492 will take can be sampled with a single run
 problem zz_1728207492 will be solved 1 times per run
 problem zz_0960471698 will take can be sampled with a single run
 problem zz_0960471698 will be solved 1 times per run
 start run 0 for problem zz_8687733182
   start samplings 1000 for problem zz_8687733182
sampled for problem zz_3729648486
 problem zz_3614144584 will take can be sampled with a single run
 problem zz_3614144584 will be solved 1 times per run
sampled for problem zz_8687733182
 start run 0 for problem zz_3237559296
   start samplings 1000 for problem zz_3237559296
sampled for problem zz_3237559296
 start run 0 for problem zz_9571001973
   start samplings 1000 for problem zz_9571001973
sampled for problem zz_9571001973
 start run 0 for problem zz_0960471698
   start samplings 1000 for problem zz_0960471698
 start run 0 for problem zz_1728207492
   start samplings 1000 for problem zz_1728207492
sampled for problem zz_0960471698
sampled for problem zz_1728207492
 start run 0 for problem zz_3614144584
   start samplings 1000 for problem zz_3614144584
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_3614144584
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_3761453891
finished samples sampling for zz_3761453891
 finished run 0 for problem zz_3761453891
 start run 1 for problem zz_3761453891
   start samplings 1000 for problem zz_3761453891
sampled for problem zz_3761453891
sampled for problem zz_3729648486
finished samples sampling for zz_3729648486
 finished run 0 for problem zz_3729648486
 start run 1 for problem zz_3729648486
   start samplings 1000 for problem zz_3729648486
sampled for problem zz_3729648486
sampled for problem zz_8687733182
finished samples sampling for zz_8687733182
 finished run 0 for problem zz_8687733182
 start run 1 for problem zz_8687733182
   start samplings 1000 for problem zz_8687733182
sampled for problem zz_8687733182
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_3237559296
finished samples sampling for zz_3237559296
 finished run 0 for problem zz_3237559296
 start run 1 for problem zz_3237559296
   start samplings 1000 for problem zz_3237559296
sampled for problem zz_3237559296
sampled for problem zz_9571001973
finished samples sampling for zz_9571001973
 finished run 0 for problem zz_9571001973
 start run 1 for problem zz_9571001973
   start samplings 1000 for problem zz_9571001973
sampled for problem zz_9571001973
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_1728207492
finished samples sampling for zz_1728207492
 finished run 0 for problem zz_1728207492
 start run 1 for problem zz_1728207492
   start samplings 1000 for problem zz_1728207492
sampled for problem zz_1728207492
sampled for problem zz_0960471698
finished samples sampling for zz_0960471698
 finished run 0 for problem zz_0960471698
 start run 1 for problem zz_0960471698
   start samplings 1000 for problem zz_0960471698
sampled for problem zz_0960471698
sampled for problem zz_3614144584
finished samples sampling for zz_3614144584
 finished run 0 for problem zz_3614144584
 start run 1 for problem zz_3614144584
   start samplings 1000 for problem zz_3614144584
sampled for problem zz_3614144584
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0no cupy available, imported numpy as usual
Custom getstate functions for dwave.cloud.config.models.ClientConfig, dwave.cloud.client.qpu.Client, dwave.cloud.solver.StructuredSolver, dwave.system.samplers.dwave_sampler.DWaveSampler, dwave.system.composites.embedding.FixedEmbeddingComposite have been initialized.
 Process-15 started with inputs {'print_prefix': ' ', 'kwargs_dwavesampler': {'token': 'JG5Y-1f0a1b755b7b93b5466f23e3abf1c3a1920c15fb', 'region': 'eu-central-1', 'architecture': 'pegasus', 'name': 'Advantage_system5.4'}, 'folder_path_main': '/mnt/RAID/home/adam-1aeqn8vhvpjnv4u/mast_sub5/Quantum_Annealing_for_Particle_Matching/00_tests/01_out/sub_5_3_2', 'info_file_name': 'study_params_sub5_3_2.h5'}
Available solvers based on specifications (client):  [StructuredSolver(id='Advantage_system5.4')]
Chosen solver based on specifications (solver):  StructuredSolver(id='Advantage_system5.4') , status is online:  True
    Solver properties keys:  dict_keys(['num_qubits', 'qubits', 'couplers', 'h_range', 'j_range', 'supported_problem_types', 'parameters', 'vfyc', 'anneal_offset_ranges', 'anneal_offset_step', 'anneal_offset_step_phi0', 'annealing_time_range', 'chip_id', 'default_annealing_time', 'default_programming_thermalization', 'default_readout_thermalization', 'extended_j_range', 'fast_anneal_time_range', 'h_gain_schedule_range', 'max_anneal_schedule_points', 'max_h_gain_schedule_points', 'num_reads_range', 'per_qubit_coupling_range', 'problem_run_duration_range', 'problem_timing_data', 'programming_thermalization_range', 'readout_thermalization_range', 'tags', 'topology', 'category', 'quota_conversion_rate'])
        problem_run_duration_range:  [0.0, 1000000.0]
    Solver parameters keys:  dict_keys(['anneal_offsets', 'anneal_schedule', 'annealing_time', 'answer_mode', 'auto_scale', 'flux_biases', 'flux_drift_compensation', 'h_gain_schedule', 'initial_state', 'max_answers', 'num_reads', 'programming_thermalization', 'readout_thermalization', 'reduce_intersample_correlation', 'reinitialize_state', 'fast_anneal'])
    Solver properties parameters keys:  dict_keys(['anneal_offsets', 'anneal_schedule', 'annealing_time', 'answer_mode', 'auto_scale', 'flux_biases', 'flux_drift_compensation', 'h_gain_schedule', 'initial_state', 'max_answers', 'num_reads', 'programming_thermalization', 'readout_thermalization', 'reduce_intersample_correlation', 'reinitialize_state', 'fast_anneal'])
Execution started.
 starting thread Thread_submittter_000
 start working on problem zz_8519333792
 starting thread Thread_submittter_001
 start working on problem zz_5060062432
 starting thread Thread_submittter_002
 start working on problem zz_8522227065
 starting thread Thread_submittter_003
 start working on problem zz_9358651368
 starting thread Thread_submittter_004
 start working on problem zz_9027338350
 starting thread Thread_submittter_005
 start working on problem zz_9188041178
 starting thread Thread_submittter_006
 start working on problem zz_5478785105
 starting thread Thread_submittter_007
 start working on problem zz_7338686412
 starting thread Thread_writer_000
 starting thread Thread_writer_001
 starting thread Thread_reporter_000
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 problem zz_8522227065 will take can be sampled with a single run
 problem zz_8522227065 will be solved 1 times per run
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 start run 0 for problem zz_8522227065
   start samplings 1000 for problem zz_8522227065
 problem zz_9188041178 will take can be sampled with a single run
 problem zz_9188041178 will be solved 1 times per run
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 problem zz_8519333792 will take can be sampled with a single run
 problem zz_8519333792 will be solved 1 times per run
 start run 0 for problem zz_9188041178
   start samplings 1000 for problem zz_9188041178
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_8522227065
 problem zz_5478785105 will take can be sampled with a single run
 problem zz_5478785105 will be solved 1 times per run
 problem zz_7338686412 will take can be sampled with a single run
 problem zz_7338686412 will be solved 1 times per run
 problem zz_9358651368 will take can be sampled with a single run
 problem zz_9358651368 will be solved 1 times per run
sampled for problem zz_9188041178
 start run 0 for problem zz_8519333792
   start samplings 1000 for problem zz_8519333792
 start run 0 for problem zz_5478785105
   start samplings 1000 for problem zz_5478785105
 start run 0 for problem zz_7338686412
   start samplings 1000 for problem zz_7338686412
sampled for problem zz_8519333792
 start run 0 for problem zz_9358651368
   start samplings 1000 for problem zz_9358651368
 problem zz_9027338350 will take can be sampled with a single run
 problem zz_9027338350 will be solved 1 times per run
 problem zz_5060062432 will take can be sampled with a single run
 problem zz_5060062432 will be solved 1 times per run
sampled for problem zz_9358651368
sampled for problem zz_5478785105
 start run 0 for problem zz_9027338350
   start samplings 1000 for problem zz_9027338350
sampled for problem zz_7338686412
 start run 0 for problem zz_5060062432
   start samplings 1000 for problem zz_5060062432
sampled for problem zz_9027338350
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_5060062432
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_8522227065
finished samples sampling for zz_8522227065
 finished run 0 for problem zz_8522227065
 start run 1 for problem zz_8522227065
   start samplings 1000 for problem zz_8522227065
sampled for problem zz_8522227065
sampled for problem zz_9188041178
finished samples sampling for zz_9188041178
 finished run 0 for problem zz_9188041178
 start run 1 for problem zz_9188041178
   start samplings 1000 for problem zz_9188041178
sampled for problem zz_9188041178
sampled for problem zz_8519333792
finished samples sampling for zz_8519333792
 finished run 0 for problem zz_8519333792
 start run 1 for problem zz_8519333792
   start samplings 1000 for problem zz_8519333792
sampled for problem zz_8519333792
sampled for problem zz_9358651368
finished samples sampling for zz_9358651368
 finished run 0 for problem zz_9358651368
 start run 1 for problem zz_9358651368
   start samplings 1000 for problem zz_9358651368
sampled for problem zz_9358651368
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_5478785105
finished samples sampling for zz_5478785105
 finished run 0 for problem zz_5478785105
 start run 1 for problem zz_5478785105
   start samplings 1000 for problem zz_5478785105
sampled for problem zz_5478785105
sampled for problem zz_7338686412
finished samples sampling for zz_7338686412
 finished run 0 for problem zz_7338686412
 start run 1 for problem zz_7338686412
   start samplings 1000 for problem zz_7338686412
sampled for problem zz_9027338350
finished samples sampling for zz_9027338350
 finished run 0 for problem zz_9027338350
 start run 1 for problem zz_9027338350
   start samplings 1000 for problem zz_9027338350
sampled for problem zz_7338686412
sampled for problem zz_9027338350
sampled for problem zz_5060062432
finished samples sampling for zz_5060062432
 finished run 0 for problem zz_5060062432
 start run 1 for problem zz_5060062432
   start samplings 1000 for problem zz_5060062432
sampled for problem zz_5060062432
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0   start samplings 1000 for problem zz_4833824559
sampled for problem zz_4833824559
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6887129085
finished samples sampling for zz_6887129085
 finished run 1 for problem zz_6887129085
 start run 2 for problem zz_6887129085
   start samplings 1000 for problem zz_6887129085
sampled for problem zz_6887129085
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0155935328
finished samples sampling for zz_0155935328
 finished run 1 for problem zz_0155935328
 start run 2 for problem zz_0155935328
   start samplings 1000 for problem zz_0155935328
sampled for problem zz_0155935328
sampled for problem zz_5061896232
finished samples sampling for zz_5061896232
 finished run 2 for problem zz_5061896232
 start run 3 for problem zz_5061896232
   start samplings 1000 for problem zz_5061896232
sampled for problem zz_5061896232
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9040679618
finished samples sampling for zz_9040679618
 finished run 1 for problem zz_9040679618
 start run 2 for problem zz_9040679618
   start samplings 1000 for problem zz_9040679618
sampled for problem zz_9040679618
sampled for problem zz_6417317480
finished samples sampling for zz_6417317480
 finished run 2 for problem zz_6417317480
 start run 3 for problem zz_6417317480
   start samplings 1000 for problem zz_6417317480
sampled for problem zz_6417317480
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3319605940
finished samples sampling for zz_3319605940
 finished run 2 for problem zz_3319605940
 start run 3 for problem zz_3319605940
   start samplings 1000 for problem zz_3319605940
sampled for problem zz_3319605940
sampled for problem zz_4355150326
finished samples sampling for zz_4355150326
 finished run 1 for problem zz_4355150326
 start run 2 for problem zz_4355150326
   start samplings 1000 for problem zz_4355150326
sampled for problem zz_4355150326
sampled for problem zz_4833824559
finished samples sampling for zz_4833824559
 finished run 1 for problem zz_4833824559
 start run 2 for problem zz_4833824559
   start samplings 1000 for problem zz_4833824559
sampled for problem zz_4833824559
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6887129085
finished samples sampling for zz_6887129085
 finished run 2 for problem zz_6887129085
 start run 3 for problem zz_6887129085
   start samplings 1000 for problem zz_6887129085
sampled for problem zz_6887129085
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0155935328
finished samples sampling for zz_0155935328
 finished run 2 for problem zz_0155935328
 start run 3 for problem zz_0155935328
   start samplings 1000 for problem zz_0155935328
sampled for problem zz_0155935328
sampled for problem zz_5061896232
finished samples sampling for zz_5061896232
 finished run 3 for problem zz_5061896232
 start run 4 for problem zz_5061896232
   start samplings 1000 for problem zz_5061896232
sampled for problem zz_5061896232
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9040679618
finished samples sampling for zz_9040679618
 finished run 2 for problem zz_9040679618
 start run 3 for problem zz_9040679618
   start samplings 1000 for problem zz_9040679618
sampled for problem zz_9040679618
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6417317480
finished samples sampling for zz_6417317480
 finished run 3 for problem zz_6417317480
 start run 4 for problem zz_6417317480
   start samplings 1000 for problem zz_6417317480
sampled for problem zz_6417317480
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3319605940
finished samples sampling for zz_3319605940
 finished run 3 for problem zz_3319605940
 start run 4 for problem zz_3319605940
   start samplings 1000 for problem zz_3319605940
sampled for problem zz_3319605940
sampled for problem zz_4355150326
finished samples sampling for zz_4355150326
 finished run 2 for problem zz_4355150326
 start run 3 for problem zz_4355150326
   start samplings 1000 for problem zz_4355150326
sampled for problem zz_4355150326
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_4833824559
finished samples sampling for zz_4833824559
 finished run 2 for problem zz_4833824559
 start run 3 for problem zz_4833824559
   start samplings 1000 for problem zz_4833824559
sampled for problem zz_4833824559
sampled for problem zz_6887129085
finished samples sampling for zz_6887129085
 finished run 3 for problem zz_6887129085
 start run 4 for problem zz_6887129085
   start samplings 1000 for problem zz_6887129085
sampled for problem zz_6887129085
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0155935328
finished samples sampling for zz_0155935328
 finished run 3 for problem zz_0155935328
 start run 4 for problem zz_0155935328
   start samplings 1000 for problem zz_0155935328
sampled for problem zz_0155935328
sampled for problem zz_5061896232
finished samples sampling for zz_5061896232
 finished run 4 for problem zz_5061896232
 start run 5 for problem zz_5061896232
   start samplings 1000 for problem zz_5061896232
sampled for problem zz_5061896232
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9040679618
finished samples sampling for zz_9040679618
 finished run 3 for problem zz_9040679618
 start run 4 for problem zz_9040679618
   start samplings 1000 for problem zz_9040679618
sampled for problem zz_9040679618
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6417317480
finished samples sampling for zz_6417317480
 finished run 4 for problem zz_6417317480
 start run 5 for problem zz_6417317480
   start samplings 1000 for problem zz_6417317480
sampled for problem zz_6417317480
sampled for problem zz_3319605940
finished samples sampling for zz_3319605940
 finished run 4 for problem zz_3319605940
 start run 5 for problem zz_3319605940
   start samplings 1000 for problem zz_3319605940
sampled for problem zz_3319605940
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_4355150326
finished samples sampling for zz_4355150326
 finished run 3 for problem zz_4355150326
 start run 4 for problem zz_4355150326
   start samplings 1000 for problem zz_4355150326
sampled for problem zz_4355150326
sampled for problem zz_4833824559
finished samples sampling for zz_4833824559
 finished run 3 for problem zz_4833824559
 start run 4 for problem zz_4833824559
   start samplings 1000 for problem zz_4833824559
sampled for problem zz_4833824559
sampled for problem zz_6887129085
finished samples sampling for zz_6887129085
 finished run 4 for problem zz_6887129085
 start run 5 for problem zz_6887129085
   start samplings 1000 for problem zz_6887129085
sampled for problem zz_6887129085
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0155935328
finished samples sampling for zz_0155935328
 finished run 4 for problem zz_0155935328
 start run 5 for problem zz_0155935328
   start samplings 1000 for problem zz_0155935328
sampled for problem zz_0155935328
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5061896232
finished samples sampling for zz_5061896232
 finished run 5 for problem zz_5061896232
 start run 6 for problem zz_5061896232
   start samplings 1000 for problem zz_5061896232
sampled for problem zz_5061896232
sampled for problem zz_9040679618
finished samples sampling for zz_9040679618
 finished run 4 for problem zz_9040679618
sampled for problem zz_6118499488
sampled for problem zz_6710953139
finished samples sampling for zz_6710953139
 finished run 1 for problem zz_6710953139
 start run 2 for problem zz_6710953139
   start samplings 1000 for problem zz_6710953139
sampled for problem zz_6710953139
sampled for problem zz_6870904713
finished samples sampling for zz_6870904713
 finished run 1 for problem zz_6870904713
 start run 2 for problem zz_6870904713
   start samplings 1000 for problem zz_6870904713
sampled for problem zz_6870904713
sampled for problem zz_0698736184
finished samples sampling for zz_0698736184
 finished run 1 for problem zz_0698736184
 start run 2 for problem zz_0698736184
   start samplings 1000 for problem zz_0698736184
sampled for problem zz_0698736184
sampled for problem zz_5853151821
finished samples sampling for zz_5853151821
 finished run 1 for problem zz_5853151821
 start run 2 for problem zz_5853151821
   start samplings 1000 for problem zz_5853151821
sampled for problem zz_5853151821
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9480036090
finished samples sampling for zz_9480036090
 finished run 1 for problem zz_9480036090
 start run 2 for problem zz_9480036090
   start samplings 1000 for problem zz_9480036090
sampled for problem zz_9480036090
sampled for problem zz_6827423238
finished samples sampling for zz_6827423238
 finished run 1 for problem zz_6827423238
 start run 2 for problem zz_6827423238
   start samplings 1000 for problem zz_6827423238
sampled for problem zz_6827423238
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9832808442
finished samples sampling for zz_9832808442
 finished run 2 for problem zz_9832808442
 start run 3 for problem zz_9832808442
   start samplings 1000 for problem zz_9832808442
sampled for problem zz_9832808442
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6118499488
finished samples sampling for zz_6118499488
 finished run 2 for problem zz_6118499488
 start run 3 for problem zz_6118499488
   start samplings 1000 for problem zz_6118499488
sampled for problem zz_6118499488
sampled for problem zz_6710953139
finished samples sampling for zz_6710953139
 finished run 2 for problem zz_6710953139
 start run 3 for problem zz_6710953139
   start samplings 1000 for problem zz_6710953139
sampled for problem zz_6710953139
sampled for problem zz_6870904713
finished samples sampling for zz_6870904713
 finished run 2 for problem zz_6870904713
 start run 3 for problem zz_6870904713
   start samplings 1000 for problem zz_6870904713
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6870904713
sampled for problem zz_0698736184
finished samples sampling for zz_0698736184
 finished run 2 for problem zz_0698736184
 start run 3 for problem zz_0698736184
   start samplings 1000 for problem zz_0698736184
sampled for problem zz_0698736184
sampled for problem zz_5853151821
finished samples sampling for zz_5853151821
 finished run 2 for problem zz_5853151821
 start run 3 for problem zz_5853151821
   start samplings 1000 for problem zz_5853151821
sampled for problem zz_5853151821
sampled for problem zz_9480036090
finished samples sampling for zz_9480036090
 finished run 2 for problem zz_9480036090
 start run 3 for problem zz_9480036090
   start samplings 1000 for problem zz_9480036090
sampled for problem zz_9480036090
sampled for problem zz_6827423238
finished samples sampling for zz_6827423238
 finished run 2 for problem zz_6827423238
 start run 3 for problem zz_6827423238
   start samplings 1000 for problem zz_6827423238
sampled for problem zz_6827423238
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9832808442
finished samples sampling for zz_9832808442
 finished run 3 for problem zz_9832808442
 start run 4 for problem zz_9832808442
   start samplings 1000 for problem zz_9832808442
sampled for problem zz_9832808442
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6118499488
finished samples sampling for zz_6118499488
 finished run 3 for problem zz_6118499488
 start run 4 for problem zz_6118499488
   start samplings 1000 for problem zz_6118499488
sampled for problem zz_6118499488
sampled for problem zz_6710953139
finished samples sampling for zz_6710953139
 finished run 3 for problem zz_6710953139
 start run 4 for problem zz_6710953139
   start samplings 1000 for problem zz_6710953139
sampled for problem zz_6710953139
sampled for problem zz_6870904713
finished samples sampling for zz_6870904713
 finished run 3 for problem zz_6870904713
 start run 4 for problem zz_6870904713
   start samplings 1000 for problem zz_6870904713
sampled for problem zz_6870904713
sampled for problem zz_0698736184
finished samples sampling for zz_0698736184
 finished run 3 for problem zz_0698736184
 start run 4 for problem zz_0698736184
   start samplings 1000 for problem zz_0698736184
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0698736184
sampled for problem zz_5853151821
finished samples sampling for zz_5853151821
 finished run 3 for problem zz_5853151821
 start run 4 for problem zz_5853151821
   start samplings 1000 for problem zz_5853151821
sampled for problem zz_5853151821
sampled for problem zz_9480036090
finished samples sampling for zz_9480036090
 finished run 3 for problem zz_9480036090
 start run 4 for problem zz_9480036090
   start samplings 1000 for problem zz_9480036090
sampled for problem zz_9480036090
sampled for problem zz_6827423238
finished samples sampling for zz_6827423238
 finished run 3 for problem zz_6827423238
 start run 4 for problem zz_6827423238
   start samplings 1000 for problem zz_6827423238
sampled for problem zz_6827423238
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9832808442
finished samples sampling for zz_9832808442
 finished run 4 for problem zz_9832808442
 start run 5 for problem zz_9832808442
   start samplings 1000 for problem zz_9832808442
sampled for problem zz_9832808442
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6710953139
finished samples sampling for zz_6710953139
 finished run 4 for problem zz_6710953139
 start run 5 for problem zz_6710953139
   start samplings 1000 for problem zz_6710953139
sampled for problem zz_6710953139
sampled for problem zz_6870904713
finished samples sampling for zz_6870904713
 finished run 4 for problem zz_6870904713
 start run 5 for problem zz_6870904713
   start samplings 1000 for problem zz_6870904713
sampled for problem zz_6870904713
sampled for problem zz_6118499488
finished samples sampling for zz_6118499488
 finished run 4 for problem zz_6118499488
 start run 5 for problem zz_6118499488
   start samplings 1000 for problem zz_6118499488
sampled for problem zz_6118499488
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0698736184
finished samples sampling for zz_0698736184
 finished run 4 for problem zz_0698736184
 start run 5 for problem zz_0698736184
   start samplings 1000 for problem zz_0698736184
sampled for problem zz_0698736184
sampled for problem zz_5853151821
finished samples sampling for zz_5853151821
 finished run 4 for problem zz_5853151821
finished samples sampling for zz_5377045315
 finished run 5 for problem zz_5377045315
 start run 6 for problem zz_5377045315
   start samplings 1000 for problem zz_5377045315
sampled for problem zz_5377045315
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3079327571
finished samples sampling for zz_3079327571
 finished run 5 for problem zz_3079327571
 start run 6 for problem zz_3079327571
   start samplings 1000 for problem zz_3079327571
sampled for problem zz_3079327571
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3404157325
finished samples sampling for zz_3404157325
 finished run 6 for problem zz_3404157325
 start run 7 for problem zz_3404157325
   start samplings 1000 for problem zz_3404157325
sampled for problem zz_3404157325
sampled for problem zz_5818637686
finished samples sampling for zz_5818637686
 finished run 6 for problem zz_5818637686
 start run 7 for problem zz_5818637686
   start samplings 1000 for problem zz_5818637686
sampled for problem zz_5818637686
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_8525724730
finished samples sampling for zz_8525724730
 finished run 5 for problem zz_8525724730
 start run 6 for problem zz_8525724730
   start samplings 1000 for problem zz_8525724730
sampled for problem zz_8525724730
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3818605985
finished samples sampling for zz_3818605985
 finished run 5 for problem zz_3818605985
 start run 6 for problem zz_3818605985
   start samplings 1000 for problem zz_3818605985
sampled for problem zz_3818605985
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2593283829
finished samples sampling for zz_2593283829
 finished run 5 for problem zz_2593283829
 start run 6 for problem zz_2593283829
   start samplings 1000 for problem zz_2593283829
sampled for problem zz_2593283829
sampled for problem zz_0848920188
finished samples sampling for zz_0848920188
 finished run 5 for problem zz_0848920188
 start run 6 for problem zz_0848920188
   start samplings 1000 for problem zz_0848920188
sampled for problem zz_0848920188
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5377045315
finished samples sampling for zz_5377045315
 finished run 6 for problem zz_5377045315
 start run 7 for problem zz_5377045315
   start samplings 1000 for problem zz_5377045315
sampled for problem zz_5377045315
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3079327571
finished samples sampling for zz_3079327571
 finished run 6 for problem zz_3079327571
 start run 7 for problem zz_3079327571
   start samplings 1000 for problem zz_3079327571
sampled for problem zz_3079327571
sampled for problem zz_3404157325
finished samples sampling for zz_3404157325
 finished run 7 for problem zz_3404157325
 start run 8 for problem zz_3404157325
   start samplings 1000 for problem zz_3404157325
sampled for problem zz_3404157325
sampled for problem zz_5818637686
finished samples sampling for zz_5818637686
 finished run 7 for problem zz_5818637686
 start run 8 for problem zz_5818637686
   start samplings 1000 for problem zz_5818637686
sampled for problem zz_5818637686
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_8525724730
finished samples sampling for zz_8525724730
 finished run 6 for problem zz_8525724730
 start run 7 for problem zz_8525724730
   start samplings 1000 for problem zz_8525724730
sampled for problem zz_8525724730
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3818605985
finished samples sampling for zz_3818605985
 finished run 6 for problem zz_3818605985
 start run 7 for problem zz_3818605985
   start samplings 1000 for problem zz_3818605985
sampled for problem zz_3818605985
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2593283829
finished samples sampling for zz_2593283829
 finished run 6 for problem zz_2593283829
 start run 7 for problem zz_2593283829
   start samplings 1000 for problem zz_2593283829
sampled for problem zz_2593283829
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0848920188
finished samples sampling for zz_0848920188
 finished run 6 for problem zz_0848920188
 start run 7 for problem zz_0848920188
   start samplings 1000 for problem zz_0848920188
sampled for problem zz_0848920188
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5377045315
finished samples sampling for zz_5377045315
 finished run 7 for problem zz_5377045315
 start run 8 for problem zz_5377045315
   start samplings 1000 for problem zz_5377045315
sampled for problem zz_5377045315
sampled for problem zz_3079327571
finished samples sampling for zz_3079327571
 finished run 7 for problem zz_3079327571
 start run 8 for problem zz_3079327571
   start samplings 1000 for problem zz_3079327571
sampled for problem zz_3079327571
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3404157325
finished samples sampling for zz_3404157325
 finished run 8 for problem zz_3404157325
 start run 9 for problem zz_3404157325
   start samplings 1000 for problem zz_3404157325
sampled for problem zz_3404157325
sampled for problem zz_5818637686
finished samples sampling for zz_5818637686
 finished run 8 for problem zz_5818637686
 start run 9 for problem zz_5818637686
   start samplings 1000 for problem zz_5818637686
sampled for problem zz_5818637686
sampled for problem zz_8525724730
finished samples sampling for zz_8525724730
 finished run 7 for problem zz_8525724730
 start run 8 for problem zz_8525724730
   start samplings 1000 for problem zz_8525724730
sampled for problem zz_8525724730
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3818605985
finished samples sampling for zz_3818605985
 finished run 7 for problem zz_3818605985
 start run 8 for problem zz_3818605985
   start samplings 1000 for problem zz_3818605985
sampled for problem zz_3818605985
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2593283829
finished samples sampling for zz_2593283829
 finished run 7 for problem zz_2593283829
 start run 8 for problem zz_2593283829
   start samplings 1000 for problem zz_2593283829
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2593283829
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0848920188
finished samples sampling for zz_0848920188
 finished run 7 for problem zz_0848920188
 start run 8 for problem zz_0848920188
   start samplings 1000 for problem zz_0848920188
sampled for problem zz_0848920188
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5377045315
finished samples sampling for zz_5377045315
 finished run 8 for problem zz_5377045315
 start run 9 for problem zz_5377045315
   start samplings 1000 for problem zz_5377045315
sampled for problem zz_5377045315
sampled for problem zz_3079327571
finished samples sampling for zz_3079327571
 finished run 8 for problem zz_3079327571
 start run 9 for problem zz_3079327571
   start samplings 1000 for problem zz_3079327571
sampled for problem zz_3079327571
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3404157325
finished samples sampling for zz_3404157325
 finished run 9 for problem zz_3404157325
 succesfully retrieved answer for problem {} zz_3404157325
 start working on problem zz_1726102831
 start writing answer for problem {} zz_3404157325
elif concurrent.futures.thread.ThreadPoolExecutor
 finished run 1 for problem zz_0602320444
 start run 2 for problem zz_0602320444
   start samplings 1000 for problem zz_0602320444
sampled for problem zz_0602320444
sampled for problem zz_5578972868
finished samples sampling for zz_5578972868
 finished run 1 for problem zz_5578972868
 start run 2 for problem zz_5578972868
   start samplings 1000 for problem zz_5578972868
sampled for problem zz_5578972868
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2040850932
finished samples sampling for zz_2040850932
 finished run 1 for problem zz_2040850932
 start run 2 for problem zz_2040850932
   start samplings 1000 for problem zz_2040850932
sampled for problem zz_2040850932
sampled for problem zz_4944517933
finished samples sampling for zz_4944517933
 finished run 1 for problem zz_4944517933
 start run 2 for problem zz_4944517933
   start samplings 1000 for problem zz_4944517933
sampled for problem zz_4944517933
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9073880962
finished samples sampling for zz_9073880962
 finished run 1 for problem zz_9073880962
 start run 2 for problem zz_9073880962
   start samplings 1000 for problem zz_9073880962
sampled for problem zz_9073880962
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_8821900078
finished samples sampling for zz_8821900078
 finished run 1 for problem zz_8821900078
 start run 2 for problem zz_8821900078
   start samplings 1000 for problem zz_8821900078
sampled for problem zz_8821900078
sampled for problem zz_1007359256
finished samples sampling for zz_1007359256
 finished run 1 for problem zz_1007359256
 start run 2 for problem zz_1007359256
   start samplings 1000 for problem zz_1007359256
sampled for problem zz_1007359256
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2362810253
finished samples sampling for zz_2362810253
 finished run 2 for problem zz_2362810253
 start run 3 for problem zz_2362810253
   start samplings 1000 for problem zz_2362810253
sampled for problem zz_2362810253
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0602320444
finished samples sampling for zz_0602320444
 finished run 2 for problem zz_0602320444
 start run 3 for problem zz_0602320444
   start samplings 1000 for problem zz_0602320444
sampled for problem zz_0602320444
sampled for problem zz_5578972868
finished samples sampling for zz_5578972868
 finished run 2 for problem zz_5578972868
 start run 3 for problem zz_5578972868
   start samplings 1000 for problem zz_5578972868
sampled for problem zz_5578972868
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2040850932
finished samples sampling for zz_2040850932
 finished run 2 for problem zz_2040850932
 start run 3 for problem zz_2040850932
   start samplings 1000 for problem zz_2040850932
sampled for problem zz_2040850932
sampled for problem zz_4944517933
finished samples sampling for zz_4944517933
 finished run 2 for problem zz_4944517933
 start run 3 for problem zz_4944517933
   start samplings 1000 for problem zz_4944517933
sampled for problem zz_4944517933
sampled for problem zz_9073880962
finished samples sampling for zz_9073880962
 finished run 2 for problem zz_9073880962
 start run 3 for problem zz_9073880962
   start samplings 1000 for problem zz_9073880962
sampled for problem zz_9073880962
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_8821900078
finished samples sampling for zz_8821900078
 finished run 2 for problem zz_8821900078
 start run 3 for problem zz_8821900078
   start samplings 1000 for problem zz_8821900078
sampled for problem zz_8821900078
sampled for problem zz_1007359256
finished samples sampling for zz_1007359256
 finished run 2 for problem zz_1007359256
 start run 3 for problem zz_1007359256
   start samplings 1000 for problem zz_1007359256
sampled for problem zz_1007359256
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2362810253
finished samples sampling for zz_2362810253
 finished run 3 for problem zz_2362810253
 start run 4 for problem zz_2362810253
   start samplings 1000 for problem zz_2362810253
sampled for problem zz_2362810253
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0602320444
finished samples sampling for zz_0602320444
 finished run 3 for problem zz_0602320444
 start run 4 for problem zz_0602320444
   start samplings 1000 for problem zz_0602320444
sampled for problem zz_0602320444
sampled for problem zz_5578972868
finished samples sampling for zz_5578972868
 finished run 3 for problem zz_5578972868
 start run 4 for problem zz_5578972868
   start samplings 1000 for problem zz_5578972868
sampled for problem zz_5578972868
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2040850932
finished samples sampling for zz_2040850932
 finished run 3 for problem zz_2040850932
 start run 4 for problem zz_2040850932
   start samplings 1000 for problem zz_2040850932
sampled for problem zz_2040850932
sampled for problem zz_4944517933
finished samples sampling for zz_4944517933
 finished run 3 for problem zz_4944517933
 start run 4 for problem zz_4944517933
   start samplings 1000 for problem zz_4944517933
sampled for problem zz_4944517933
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9073880962
finished samples sampling for zz_9073880962
 finished run 3 for problem zz_9073880962
 start run 4 for problem zz_9073880962
   start samplings 1000 for problem zz_9073880962
sampled for problem zz_9073880962
sampled for problem zz_8821900078
finished samples sampling for zz_8821900078
 finished run 3 for problem zz_8821900078
 start run 4 for problem zz_8821900078
   start samplings 1000 for problem zz_8821900078
sampled for problem zz_8821900078
sampled for problem zz_1007359256
finished samples sampling for zz_1007359256
 finished run 3 for problem zz_1007359256
 start run 4 for problem zz_1007359256
   start samplings 1000 for problem zz_1007359256
sampled for problem zz_1007359256
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2362810253
finished samples sampling for zz_2362810253
 finished run 4 for problem zz_2362810253
 start run 5 for problem zz_2362810253
   start samplings 1000 for problem zz_2362810253
sampled for problem zz_2362810253
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0602320444
finished samples sampling for zz_0602320444
 finished run 4 for problem zz_0602320444
 start run 5 for problem zz_0602320444
   start samplings 1000 for problem zz_0602320444
sampled for problem zz_0602320444
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5578972868
finished samples sampling for zz_5578972868
 finished run 4 for problem zz_5578972868
 start run 5 for problem zz_5578972868
   start samplings 1000 for problem zz_5578972868
sampled for problem zz_5578972868
sampled for problem zz_2040850932
finished samples sampling for zz_2040850932
 finished run 4 for problem zz_2040850932
 start run 5 for problem zz_2040850932
   start samplings 1000 for problem zz_2040850932
sampled for problem zz_2040850932
sampled for problem zz_4944517933
finished samples sampling for zz_4944517933
 finished run 4 for problem zz_4944517933
 start run 5 for problem zz_4944517933
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6731131214
finished samples sampling for zz_6731131214
 finished run 1 for problem zz_6731131214
 start run 2 for problem zz_6731131214
   start samplings 1000 for problem zz_6731131214
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6731131214
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6575155837
finished samples sampling for zz_6575155837
 finished run 1 for problem zz_6575155837
 start run 2 for problem zz_6575155837
   start samplings 1000 for problem zz_6575155837
sampled for problem zz_6575155837
sampled for problem zz_3545900650
finished samples sampling for zz_3545900650
 finished run 1 for problem zz_3545900650
 start run 2 for problem zz_3545900650
   start samplings 1000 for problem zz_3545900650
sampled for problem zz_3545900650
sampled for problem zz_2959573595
finished samples sampling for zz_2959573595
 finished run 1 for problem zz_2959573595
 start run 2 for problem zz_2959573595
   start samplings 1000 for problem zz_2959573595
sampled for problem zz_2959573595
sampled for problem zz_5096381632
finished samples sampling for zz_5096381632
 finished run 1 for problem zz_5096381632
 start run 2 for problem zz_5096381632
   start samplings 1000 for problem zz_5096381632
sampled for problem zz_5096381632
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5249775500
finished samples sampling for zz_5249775500
 finished run 1 for problem zz_5249775500
 start run 2 for problem zz_5249775500
   start samplings 1000 for problem zz_5249775500
sampled for problem zz_5249775500
sampled for problem zz_5309607385
finished samples sampling for zz_5309607385
 finished run 1 for problem zz_5309607385
 start run 2 for problem zz_5309607385
   start samplings 1000 for problem zz_5309607385
sampled for problem zz_5309607385
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3202394964
finished samples sampling for zz_3202394964
 finished run 2 for problem zz_3202394964
 start run 3 for problem zz_3202394964
   start samplings 1000 for problem zz_3202394964
sampled for problem zz_3202394964
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6731131214
finished samples sampling for zz_6731131214
 finished run 2 for problem zz_6731131214
 start run 3 for problem zz_6731131214
   start samplings 1000 for problem zz_6731131214
sampled for problem zz_6731131214
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6575155837
finished samples sampling for zz_6575155837
 finished run 2 for problem zz_6575155837
 start run 3 for problem zz_6575155837
   start samplings 1000 for problem zz_6575155837
sampled for problem zz_6575155837
sampled for problem zz_3545900650
finished samples sampling for zz_3545900650
 finished run 2 for problem zz_3545900650
 start run 3 for problem zz_3545900650
   start samplings 1000 for problem zz_3545900650
sampled for problem zz_3545900650
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2959573595
finished samples sampling for zz_2959573595
 finished run 2 for problem zz_2959573595
 start run 3 for problem zz_2959573595
   start samplings 1000 for problem zz_2959573595
sampled for problem zz_2959573595
sampled for problem zz_5096381632
finished samples sampling for zz_5096381632
 finished run 2 for problem zz_5096381632
 start run 3 for problem zz_5096381632
   start samplings 1000 for problem zz_5096381632
sampled for problem zz_5096381632
sampled for problem zz_5249775500
finished samples sampling for zz_5249775500
 finished run 2 for problem zz_5249775500
 start run 3 for problem zz_5249775500
   start samplings 1000 for problem zz_5249775500
sampled for problem zz_5249775500
sampled for problem zz_5309607385
finished samples sampling for zz_5309607385
 finished run 2 for problem zz_5309607385
 start run 3 for problem zz_5309607385
   start samplings 1000 for problem zz_5309607385
sampled for problem zz_5309607385
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3202394964
finished samples sampling for zz_3202394964
 finished run 3 for problem zz_3202394964
 start run 4 for problem zz_3202394964
   start samplings 1000 for problem zz_3202394964
sampled for problem zz_3202394964
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6731131214
finished samples sampling for zz_6731131214
 finished run 3 for problem zz_6731131214
 start run 4 for problem zz_6731131214
   start samplings 1000 for problem zz_6731131214
sampled for problem zz_6731131214
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6575155837
finished samples sampling for zz_6575155837
 finished run 3 for problem zz_6575155837
 start run 4 for problem zz_6575155837
   start samplings 1000 for problem zz_6575155837
sampled for problem zz_6575155837
sampled for problem zz_3545900650
finished samples sampling for zz_3545900650
 finished run 3 for problem zz_3545900650
 start run 4 for problem zz_3545900650
   start samplings 1000 for problem zz_3545900650
sampled for problem zz_3545900650
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2959573595
finished samples sampling for zz_2959573595
 finished run 3 for problem zz_2959573595
 start run 4 for problem zz_2959573595
   start samplings 1000 for problem zz_2959573595
sampled for problem zz_2959573595
sampled for problem zz_5096381632
finished samples sampling for zz_5096381632
 finished run 3 for problem zz_5096381632
 start run 4 for problem zz_5096381632
   start samplings 1000 for problem zz_5096381632
sampled for problem zz_5096381632
sampled for problem zz_5309607385
finished samples sampling for zz_5309607385
 finished run 3 for problem zz_5309607385
 start run 4 for problem zz_5309607385
   start samplings 1000 for problem zz_5309607385
sampled for problem zz_5309607385
sampled for problem zz_5249775500
finished samples sampling for zz_5249775500
 finished run 3 for problem zz_5249775500
 start run 4 for problem zz_5249775500
   start samplings 1000 for problem zz_5249775500
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5249775500
sampled for problem zz_3202394964
finished samples sampling for zz_3202394964
 finished run 4 for problem zz_3202394964
 start run 5 for problem zz_3202394964
   start samplings 1000 for problem zz_3202394964
sampled for problem zz_3202394964
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6731131214
finished samples sampling for zz_6731131214
 finished run 4 for problem zz_6731131214
 start run 5 for problem zz_6731131214
   start samplings 1000 for problem zz_6731131214
sampled for problem zz_6731131214
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6575155837
finished samples sampling for zz_6575155837
 finished run 4 for problem zz_6575155837
 start run 5 for problem zz_6575155837
   start samplings 1000 for problem zz_6575155837
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6575155837
sampled for problem zz_3545900650
finished samples sampling for zz_3545900650
 finished run 4 for problem zz_3545900650
 start run 5 for problem zz_3545900650
   start samplings 1000 for problem zz_3545900650
sampled for problem zz_3761453891
finished samples sampling for zz_3761453891
 finished run 1 for problem zz_3761453891
 start run 2 for problem zz_3761453891
   start samplings 1000 for problem zz_3761453891
sampled for problem zz_3761453891
sampled for problem zz_8687733182
finished samples sampling for zz_8687733182
 finished run 1 for problem zz_8687733182
 start run 2 for problem zz_8687733182
   start samplings 1000 for problem zz_8687733182
sampled for problem zz_8687733182
sampled for problem zz_3729648486
finished samples sampling for zz_3729648486
 finished run 1 for problem zz_3729648486
 start run 2 for problem zz_3729648486
   start samplings 1000 for problem zz_3729648486
sampled for problem zz_3729648486
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_3237559296
finished samples sampling for zz_3237559296
 finished run 1 for problem zz_3237559296
 start run 2 for problem zz_3237559296
   start samplings 1000 for problem zz_3237559296
sampled for problem zz_3237559296
sampled for problem zz_9571001973
finished samples sampling for zz_9571001973
 finished run 1 for problem zz_9571001973
 start run 2 for problem zz_9571001973
   start samplings 1000 for problem zz_9571001973
sampled for problem zz_9571001973
sampled for problem zz_1728207492
finished samples sampling for zz_1728207492
 finished run 1 for problem zz_1728207492
 start run 2 for problem zz_1728207492
   start samplings 1000 for problem zz_1728207492
sampled for problem zz_1728207492
sampled for problem zz_0960471698
finished samples sampling for zz_0960471698
 finished run 1 for problem zz_0960471698
 start run 2 for problem zz_0960471698
   start samplings 1000 for problem zz_0960471698
sampled for problem zz_0960471698
sampled for problem zz_3614144584
finished samples sampling for zz_3614144584
 finished run 1 for problem zz_3614144584
 start run 2 for problem zz_3614144584
   start samplings 1000 for problem zz_3614144584
sampled for problem zz_3614144584
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_3761453891
finished samples sampling for zz_3761453891
 finished run 2 for problem zz_3761453891
 start run 3 for problem zz_3761453891
   start samplings 1000 for problem zz_3761453891
sampled for problem zz_3761453891
sampled for problem zz_8687733182
finished samples sampling for zz_8687733182
 finished run 2 for problem zz_8687733182
 start run 3 for problem zz_8687733182
   start samplings 1000 for problem zz_8687733182
sampled for problem zz_8687733182
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_3729648486
finished samples sampling for zz_3729648486
 finished run 2 for problem zz_3729648486
 start run 3 for problem zz_3729648486
   start samplings 1000 for problem zz_3729648486
sampled for problem zz_3729648486
sampled for problem zz_9571001973
finished samples sampling for zz_9571001973
 finished run 2 for problem zz_9571001973
 start run 3 for problem zz_9571001973
   start samplings 1000 for problem zz_9571001973
sampled for problem zz_9571001973
sampled for problem zz_3237559296
finished samples sampling for zz_3237559296
 finished run 2 for problem zz_3237559296
 start run 3 for problem zz_3237559296
   start samplings 1000 for problem zz_3237559296
sampled for problem zz_3237559296
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_1728207492
finished samples sampling for zz_1728207492
 finished run 2 for problem zz_1728207492
 start run 3 for problem zz_1728207492
   start samplings 1000 for problem zz_1728207492
sampled for problem zz_1728207492
sampled for problem zz_0960471698
finished samples sampling for zz_0960471698
 finished run 2 for problem zz_0960471698
 start run 3 for problem zz_0960471698
   start samplings 1000 for problem zz_0960471698
sampled for problem zz_0960471698
sampled for problem zz_3614144584
finished samples sampling for zz_3614144584
 finished run 2 for problem zz_3614144584
 start run 3 for problem zz_3614144584
   start samplings 1000 for problem zz_3614144584
sampled for problem zz_3614144584
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_3761453891
finished samples sampling for zz_3761453891
 finished run 3 for problem zz_3761453891
 start run 4 for problem zz_3761453891
   start samplings 1000 for problem zz_3761453891
sampled for problem zz_3761453891
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_8687733182
finished samples sampling for zz_8687733182
 finished run 3 for problem zz_8687733182
 start run 4 for problem zz_8687733182
   start samplings 1000 for problem zz_8687733182
sampled for problem zz_8687733182
sampled for problem zz_3729648486
finished samples sampling for zz_3729648486
 finished run 3 for problem zz_3729648486
 start run 4 for problem zz_3729648486
   start samplings 1000 for problem zz_3729648486
sampled for problem zz_3729648486
sampled for problem zz_9571001973
finished samples sampling for zz_9571001973
 finished run 3 for problem zz_9571001973
 start run 4 for problem zz_9571001973
   start samplings 1000 for problem zz_9571001973
sampled for problem zz_9571001973
sampled for problem zz_3237559296
finished samples sampling for zz_3237559296
 finished run 3 for problem zz_3237559296
 start run 4 for problem zz_3237559296
   start samplings 1000 for problem zz_3237559296
sampled for problem zz_3237559296
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_1728207492
finished samples sampling for zz_1728207492
 finished run 3 for problem zz_1728207492
 start run 4 for problem zz_1728207492
   start samplings 1000 for problem zz_1728207492
sampled for problem zz_1728207492
sampled for problem zz_0960471698
finished samples sampling for zz_0960471698
 finished run 3 for problem zz_0960471698
 start run 4 for problem zz_0960471698
   start samplings 1000 for problem zz_0960471698
sampled for problem zz_0960471698
sampled for problem zz_3614144584
finished samples sampling for zz_3614144584
 finished run 3 for problem zz_3614144584
 start run 4 for problem zz_3614144584
   start samplings 1000 for problem zz_3614144584
sampled for problem zz_3614144584
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_3761453891
finished samples sampling for zz_3761453891
 finished run 4 for problem zz_3761453891
 start run 5 for problem zz_3761453891
   start samplings 1000 for problem zz_3761453891
sampled for problem zz_3761453891
sampled for problem zz_8687733182
finished samples sampling for zz_8687733182
 finished run 4 for problem zz_8687733182
 start run 5 for problem zz_8687733182
   start samplings 1000 for problem zz_8687733182
sampled for problem zz_8687733182
sampled for problem zz_3729648486
finished samples sampling for zz_3729648486
 finished run 4 for problem zz_3729648486
 start run 5 for problem zz_3729648486
   start samplings 1000 for problem zz_3729648486
sampled for problem zz_3729648486
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_9571001973
finished samples sampling for zz_9571001973
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb4458b0050>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb4458b0050>
 problem zz_1726102831 will take can be sampled with a single run
 problem zz_1726102831 will be solved 1 times per run
sampled for problem zz_5818637686
finished samples sampling for zz_5818637686
 finished run 9 for problem zz_5818637686
 start run 0 for problem zz_1726102831
   start samplings 1000 for problem zz_1726102831
sampled for problem zz_1726102831
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_8525724730
finished samples sampling for zz_8525724730
 finished run 8 for problem zz_8525724730
 start run 9 for problem zz_8525724730
   start samplings 1000 for problem zz_8525724730
sampled for problem zz_8525724730
 succesfully retrieved answer for problem {} zz_5818637686
 start working on problem zz_7625459406
 start writing answer for problem {} zz_5818637686
 Queue sizes: problems_to_submit = 14, answers_to_write = 0
 problem zz_7625459406 will take can be sampled with a single run
 problem zz_7625459406 will be solved 1 times per run
sampled for problem zz_3818605985
finished samples sampling for zz_3818605985
 finished run 8 for problem zz_3818605985
 start run 9 for problem zz_3818605985
   start samplings 1000 for problem zz_3818605985
sampled for problem zz_3818605985
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb4458d35c0>
 start run 0 for problem zz_7625459406
   start samplings 1000 for problem zz_7625459406
sampled for problem zz_7625459406
 Queue sizes: problems_to_submit = 14, answers_to_write = 0
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb4458d35c0>
 Queue sizes: problems_to_submit = 14, answers_to_write = 0
 Queue sizes: problems_to_submit = 14, answers_to_write = 0
sampled for problem zz_2593283829
finished samples sampling for zz_2593283829
 finished run 8 for problem zz_2593283829
 start run 9 for problem zz_2593283829
   start samplings 1000 for problem zz_2593283829
sampled for problem zz_2593283829
 Queue sizes: problems_to_submit = 14, answers_to_write = 0
sampled for problem zz_0848920188
finished samples sampling for zz_0848920188
 finished run 8 for problem zz_0848920188
 start run 9 for problem zz_0848920188
   start samplings 1000 for problem zz_0848920188
sampled for problem zz_0848920188
 Queue sizes: problems_to_submit = 14, answers_to_write = 0
sampled for problem zz_5377045315
finished samples sampling for zz_5377045315
 finished run 9 for problem zz_5377045315
 succesfully retrieved answer for problem {} zz_5377045315
 start working on problem zz_7766207770
 problem zz_7766207770 will take can be sampled with a single run
 problem zz_7766207770 will be solved 1 times per run
 start run 0 for problem zz_7766207770
   start samplings 1000 for problem zz_7766207770
sampled for problem zz_7766207770
sampled for problem zz_3079327571
finished samples sampling for zz_3079327571
 finished run 9 for problem zz_3079327571
 succesfully retrieved answer for problem {} zz_3079327571
 start working on problem zz_0458068226
 Queue sizes: problems_to_submit = 12, answers_to_write = 2
 problem zz_0458068226 will take can be sampled with a single run
 problem zz_0458068226 will be solved 1 times per run
 start run 0 for problem zz_0458068226
   start samplings 1000 for problem zz_0458068226
sampled for problem zz_0458068226
sampled for problem zz_1726102831
finished samples sampling for zz_1726102831
 finished run 0 for problem zz_1726102831
 start run 1 for problem zz_1726102831
   start samplings 1000 for problem zz_1726102831
sampled for problem zz_1726102831
 Queue sizes: problems_to_submit = 12, answers_to_write = 2
sampled for problem zz_8525724730
finished samples sampling for zz_8525724730
 finished run 9 for problem zz_8525724730
 succesfully retrieved answer for problem {} zz_8525724730
 start working on problem zz_7781104199
 problem zz_7781104199 will take can be sampled with a single run
 problem zz_7781104199 will be solved 1 times per run
 start run 0 for problem zz_7781104199
   start samplings 1000 for problem zz_7781104199
sampled for problem zz_7781104199
 Queue sizes: problems_to_submit = 11, answers_to_write = 3
sampled for problem zz_3818605985
finished samples sampling for zz_3818605985
 finished run 9 for problem zz_3818605985
 succesfully retrieved answer for problem {} zz_3818605985
 start working on problem zz_4413425408
 Queue sizes: problems_to_submit = 10, answers_to_write = 4
 problem zz_4413425408 will take can be sampled with a single run
 problem zz_4413425408 will be solved 1 times per run
sampled for problem zz_7625459406
finished samples sampling for zz_7625459406
 finished run 0 for problem zz_7625459406
 start run 1 for problem zz_7625459406
   start samplings 1000 for problem zz_7625459406
sampled for problem zz_7625459406
 start run 0 for problem zz_4413425408
   start samplings 1000 for problem zz_4413425408
sampled for problem zz_4413425408
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 10, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_3404157325
 start writing answer for problem {}
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_8522227065
finished samples sampling for zz_8522227065
 finished run 1 for problem zz_8522227065
 start run 2 for problem zz_8522227065
   start samplings 1000 for problem zz_8522227065
sampled for problem zz_8522227065
sampled for problem zz_9188041178
finished samples sampling for zz_9188041178
 finished run 1 for problem zz_9188041178
 start run 2 for problem zz_9188041178
   start samplings 1000 for problem zz_9188041178
sampled for problem zz_9188041178
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_8519333792
finished samples sampling for zz_8519333792
 finished run 1 for problem zz_8519333792
 start run 2 for problem zz_8519333792
   start samplings 1000 for problem zz_8519333792
sampled for problem zz_8519333792
sampled for problem zz_9358651368
finished samples sampling for zz_9358651368
 finished run 1 for problem zz_9358651368
 start run 2 for problem zz_9358651368
   start samplings 1000 for problem zz_9358651368
sampled for problem zz_9358651368
sampled for problem zz_5478785105
finished samples sampling for zz_5478785105
 finished run 1 for problem zz_5478785105
 start run 2 for problem zz_5478785105
   start samplings 1000 for problem zz_5478785105
sampled for problem zz_5478785105
sampled for problem zz_9027338350
finished samples sampling for zz_9027338350
 finished run 1 for problem zz_9027338350
 start run 2 for problem zz_9027338350
   start samplings 1000 for problem zz_9027338350
sampled for problem zz_9027338350
sampled for problem zz_7338686412
finished samples sampling for zz_7338686412
 finished run 1 for problem zz_7338686412
 start run 2 for problem zz_7338686412
   start samplings 1000 for problem zz_7338686412
sampled for problem zz_7338686412
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_5060062432
finished samples sampling for zz_5060062432
 finished run 1 for problem zz_5060062432
 start run 2 for problem zz_5060062432
   start samplings 1000 for problem zz_5060062432
sampled for problem zz_5060062432
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_8522227065
finished samples sampling for zz_8522227065
 finished run 2 for problem zz_8522227065
 start run 3 for problem zz_8522227065
   start samplings 1000 for problem zz_8522227065
sampled for problem zz_8522227065
sampled for problem zz_9188041178
finished samples sampling for zz_9188041178
 finished run 2 for problem zz_9188041178
 start run 3 for problem zz_9188041178
   start samplings 1000 for problem zz_9188041178
sampled for problem zz_9188041178
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_8519333792
finished samples sampling for zz_8519333792
 finished run 2 for problem zz_8519333792
 start run 3 for problem zz_8519333792
   start samplings 1000 for problem zz_8519333792
sampled for problem zz_8519333792
sampled for problem zz_9358651368
finished samples sampling for zz_9358651368
 finished run 2 for problem zz_9358651368
 start run 3 for problem zz_9358651368
   start samplings 1000 for problem zz_9358651368
sampled for problem zz_9358651368
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_5478785105
finished samples sampling for zz_5478785105
 finished run 2 for problem zz_5478785105
 start run 3 for problem zz_5478785105
   start samplings 1000 for problem zz_5478785105
sampled for problem zz_5478785105
sampled for problem zz_9027338350
finished samples sampling for zz_9027338350
 finished run 2 for problem zz_9027338350
 start run 3 for problem zz_9027338350
   start samplings 1000 for problem zz_9027338350
sampled for problem zz_9027338350
sampled for problem zz_5060062432
finished samples sampling for zz_5060062432
 finished run 2 for problem zz_5060062432
 start run 3 for problem zz_5060062432
   start samplings 1000 for problem zz_5060062432
sampled for problem zz_5060062432
sampled for problem zz_7338686412
finished samples sampling for zz_7338686412
 finished run 2 for problem zz_7338686412
 start run 3 for problem zz_7338686412
   start samplings 1000 for problem zz_7338686412
sampled for problem zz_7338686412
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_8522227065
finished samples sampling for zz_8522227065
 finished run 3 for problem zz_8522227065
 start run 4 for problem zz_8522227065
   start samplings 1000 for problem zz_8522227065
sampled for problem zz_8522227065
sampled for problem zz_9188041178
finished samples sampling for zz_9188041178
 finished run 3 for problem zz_9188041178
 start run 4 for problem zz_9188041178
   start samplings 1000 for problem zz_9188041178
sampled for problem zz_9188041178
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_8519333792
finished samples sampling for zz_8519333792
 finished run 3 for problem zz_8519333792
 start run 4 for problem zz_8519333792
   start samplings 1000 for problem zz_8519333792
sampled for problem zz_8519333792
sampled for problem zz_9358651368
finished samples sampling for zz_9358651368
 finished run 3 for problem zz_9358651368
 start run 4 for problem zz_9358651368
   start samplings 1000 for problem zz_9358651368
sampled for problem zz_9358651368
sampled for problem zz_5478785105
finished samples sampling for zz_5478785105
 finished run 3 for problem zz_5478785105
 start run 4 for problem zz_5478785105
   start samplings 1000 for problem zz_5478785105
sampled for problem zz_5478785105
sampled for problem zz_9027338350
finished samples sampling for zz_9027338350
 finished run 3 for problem zz_9027338350
 start run 4 for problem zz_9027338350
   start samplings 1000 for problem zz_9027338350
sampled for problem zz_9027338350
sampled for problem zz_5060062432
finished samples sampling for zz_5060062432
 finished run 3 for problem zz_5060062432
 start run 4 for problem zz_5060062432
   start samplings 1000 for problem zz_5060062432
sampled for problem zz_5060062432
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_7338686412
finished samples sampling for zz_7338686412
 finished run 3 for problem zz_7338686412
 start run 4 for problem zz_7338686412
   start samplings 1000 for problem zz_7338686412
sampled for problem zz_7338686412
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_8522227065
finished samples sampling for zz_8522227065
 finished run 4 for problem zz_8522227065
 start run 5 for problem zz_8522227065
   start samplings 1000 for problem zz_8522227065
sampled for problem zz_8522227065
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_9188041178
finished samples sampling for zz_9188041178
 finished run 4 for problem zz_9188041178
 start run 5 for problem zz_9188041178
   start samplings 1000 for problem zz_9188041178
sampled for problem zz_9188041178
sampled for problem zz_8519333792
finished samples sampling for zz_8519333792
 finished run 4 for problem zz_8519333792
 start run 5 for problem zz_8519333792
   start samplings 1000 for problem zz_8519333792
sampled for problem zz_8519333792
sampled for problem zz_9358651368
 start run 5 for problem zz_9040679618
   start samplings 1000 for problem zz_9040679618
sampled for problem zz_9040679618
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6417317480
finished samples sampling for zz_6417317480
 finished run 5 for problem zz_6417317480
 start run 6 for problem zz_6417317480
   start samplings 1000 for problem zz_6417317480
sampled for problem zz_6417317480
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_4355150326
finished samples sampling for zz_4355150326
 finished run 4 for problem zz_4355150326
 start run 5 for problem zz_4355150326
   start samplings 1000 for problem zz_4355150326
sampled for problem zz_4355150326
sampled for problem zz_3319605940
finished samples sampling for zz_3319605940
 finished run 5 for problem zz_3319605940
 start run 6 for problem zz_3319605940
   start samplings 1000 for problem zz_3319605940
sampled for problem zz_3319605940
sampled for problem zz_4833824559
finished samples sampling for zz_4833824559
 finished run 4 for problem zz_4833824559
 start run 5 for problem zz_4833824559
   start samplings 1000 for problem zz_4833824559
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_4833824559
sampled for problem zz_6887129085
finished samples sampling for zz_6887129085
 finished run 5 for problem zz_6887129085
 start run 6 for problem zz_6887129085
   start samplings 1000 for problem zz_6887129085
sampled for problem zz_6887129085
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0155935328
finished samples sampling for zz_0155935328
 finished run 5 for problem zz_0155935328
 start run 6 for problem zz_0155935328
   start samplings 1000 for problem zz_0155935328
sampled for problem zz_0155935328
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5061896232
finished samples sampling for zz_5061896232
 finished run 6 for problem zz_5061896232
 start run 7 for problem zz_5061896232
   start samplings 1000 for problem zz_5061896232
sampled for problem zz_5061896232
sampled for problem zz_9040679618
finished samples sampling for zz_9040679618
 finished run 5 for problem zz_9040679618
 start run 6 for problem zz_9040679618
   start samplings 1000 for problem zz_9040679618
sampled for problem zz_9040679618
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6417317480
finished samples sampling for zz_6417317480
 finished run 6 for problem zz_6417317480
 start run 7 for problem zz_6417317480
   start samplings 1000 for problem zz_6417317480
sampled for problem zz_6417317480
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_4355150326
finished samples sampling for zz_4355150326
 finished run 5 for problem zz_4355150326
 start run 6 for problem zz_4355150326
   start samplings 1000 for problem zz_4355150326
sampled for problem zz_4355150326
sampled for problem zz_3319605940
finished samples sampling for zz_3319605940
 finished run 6 for problem zz_3319605940
 start run 7 for problem zz_3319605940
   start samplings 1000 for problem zz_3319605940
sampled for problem zz_3319605940
sampled for problem zz_4833824559
finished samples sampling for zz_4833824559
 finished run 5 for problem zz_4833824559
 start run 6 for problem zz_4833824559
   start samplings 1000 for problem zz_4833824559
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_4833824559
sampled for problem zz_6887129085
finished samples sampling for zz_6887129085
 finished run 6 for problem zz_6887129085
 start run 7 for problem zz_6887129085
   start samplings 1000 for problem zz_6887129085
sampled for problem zz_6887129085
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0155935328
finished samples sampling for zz_0155935328
 finished run 6 for problem zz_0155935328
 start run 7 for problem zz_0155935328
   start samplings 1000 for problem zz_0155935328
sampled for problem zz_0155935328
sampled for problem zz_5061896232
finished samples sampling for zz_5061896232
 finished run 7 for problem zz_5061896232
 start run 8 for problem zz_5061896232
   start samplings 1000 for problem zz_5061896232
sampled for problem zz_5061896232
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9040679618
finished samples sampling for zz_9040679618
 finished run 6 for problem zz_9040679618
 start run 7 for problem zz_9040679618
   start samplings 1000 for problem zz_9040679618
sampled for problem zz_9040679618
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6417317480
finished samples sampling for zz_6417317480
 finished run 7 for problem zz_6417317480
 start run 8 for problem zz_6417317480
   start samplings 1000 for problem zz_6417317480
sampled for problem zz_6417317480
sampled for problem zz_4355150326
finished samples sampling for zz_4355150326
 finished run 6 for problem zz_4355150326
 start run 7 for problem zz_4355150326
   start samplings 1000 for problem zz_4355150326
sampled for problem zz_4355150326
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3319605940
finished samples sampling for zz_3319605940
 finished run 7 for problem zz_3319605940
 start run 8 for problem zz_3319605940
   start samplings 1000 for problem zz_3319605940
sampled for problem zz_3319605940
sampled for problem zz_4833824559
finished samples sampling for zz_4833824559
 finished run 6 for problem zz_4833824559
 start run 7 for problem zz_4833824559
   start samplings 1000 for problem zz_4833824559
sampled for problem zz_4833824559
sampled for problem zz_6887129085
finished samples sampling for zz_6887129085
 finished run 7 for problem zz_6887129085
 start run 8 for problem zz_6887129085
   start samplings 1000 for problem zz_6887129085
sampled for problem zz_6887129085
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0155935328
finished samples sampling for zz_0155935328
 finished run 7 for problem zz_0155935328
 start run 8 for problem zz_0155935328
   start samplings 1000 for problem zz_0155935328
sampled for problem zz_0155935328
sampled for problem zz_5061896232
finished samples sampling for zz_5061896232
 finished run 8 for problem zz_5061896232
 start run 9 for problem zz_5061896232
   start samplings 1000 for problem zz_5061896232
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5061896232
sampled for problem zz_9040679618
finished samples sampling for zz_9040679618
 finished run 7 for problem zz_9040679618
 start run 8 for problem zz_9040679618
   start samplings 1000 for problem zz_9040679618
sampled for problem zz_9040679618
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6417317480
finished samples sampling for zz_6417317480
 finished run 8 for problem zz_6417317480
 start run 9 for problem zz_6417317480
   start samplings 1000 for problem zz_6417317480
sampled for problem zz_6417317480
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_4355150326
finished samples sampling for zz_4355150326
 finished run 7 for problem zz_4355150326
 start run 8 for problem zz_4355150326
   start samplings 1000 for problem zz_4355150326
sampled for problem zz_4355150326
sampled for problem zz_3319605940
finished samples sampling for zz_3319605940 zz_5377045315
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb4443b0800>
sampled for problem zz_2593283829
finished samples sampling for zz_2593283829
 finished run 9 for problem zz_2593283829
 succesfully retrieved answer for problem {} zz_2593283829
 start working on problem zz_2992420796
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb4443b0800>
 problem zz_2992420796 will take can be sampled with a single run
 problem zz_2992420796 will be solved 1 times per run
 start run 0 for problem zz_2992420796
   start samplings 1000 for problem zz_2992420796
sampled for problem zz_2992420796
 Queue sizes: problems_to_submit = 9, answers_to_write = 4
sampled for problem zz_0848920188
finished samples sampling for zz_0848920188
 finished run 9 for problem zz_0848920188
 succesfully retrieved answer for problem {} zz_0848920188
 start working on problem zz_0285172740
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
 problem zz_0285172740 will take can be sampled with a single run
 problem zz_0285172740 will be solved 1 times per run
 start run 0 for problem zz_0285172740
   start samplings 1000 for problem zz_0285172740
sampled for problem zz_0285172740
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_7766207770
finished samples sampling for zz_7766207770
 finished run 0 for problem zz_7766207770
 start run 1 for problem zz_7766207770
   start samplings 1000 for problem zz_7766207770
sampled for problem zz_7766207770
 finished writing answer for problem {} zz_5818637686
 start writing answer for problem {} zz_3079327571
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb444376060>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb444376060>
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
sampled for problem zz_0458068226
finished samples sampling for zz_0458068226
 finished run 0 for problem zz_0458068226
 start run 1 for problem zz_0458068226
   start samplings 1000 for problem zz_0458068226
sampled for problem zz_0458068226
sampled for problem zz_1726102831
finished samples sampling for zz_1726102831
 finished run 1 for problem zz_1726102831
 start run 2 for problem zz_1726102831
   start samplings 1000 for problem zz_1726102831
sampled for problem zz_1726102831
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
sampled for problem zz_7781104199
finished samples sampling for zz_7781104199
 finished run 0 for problem zz_7781104199
 start run 1 for problem zz_7781104199
   start samplings 1000 for problem zz_7781104199
sampled for problem zz_7781104199
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
sampled for problem zz_7625459406
finished samples sampling for zz_7625459406
 finished run 1 for problem zz_7625459406
 start run 2 for problem zz_7625459406
   start samplings 1000 for problem zz_7625459406
sampled for problem zz_7625459406
sampled for problem zz_4413425408
finished samples sampling for zz_4413425408
 finished run 0 for problem zz_4413425408
 start run 1 for problem zz_4413425408
   start samplings 1000 for problem zz_4413425408
sampled for problem zz_4413425408
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
sampled for problem zz_2992420796
finished samples sampling for zz_2992420796
 finished run 0 for problem zz_2992420796
 start run 1 for problem zz_2992420796
   start samplings 1000 for problem zz_2992420796
sampled for problem zz_2992420796
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
sampled for problem zz_0285172740
finished samples sampling for zz_0285172740
 finished run 0 for problem zz_0285172740
 start run 1 for problem zz_0285172740
   start samplings 1000 for problem zz_0285172740
sampled for problem zz_0285172740
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 start run 5 for problem zz_5853151821
   start samplings 1000 for problem zz_5853151821
sampled for problem zz_5853151821
sampled for problem zz_9480036090
finished samples sampling for zz_9480036090
 finished run 4 for problem zz_9480036090
 start run 5 for problem zz_9480036090
   start samplings 1000 for problem zz_9480036090
sampled for problem zz_9480036090
sampled for problem zz_6827423238
finished samples sampling for zz_6827423238
 finished run 4 for problem zz_6827423238
 start run 5 for problem zz_6827423238
   start samplings 1000 for problem zz_6827423238
sampled for problem zz_6827423238
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9832808442
finished samples sampling for zz_9832808442
 finished run 5 for problem zz_9832808442
 start run 6 for problem zz_9832808442
   start samplings 1000 for problem zz_9832808442
sampled for problem zz_9832808442
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6710953139
finished samples sampling for zz_6710953139
 finished run 5 for problem zz_6710953139
 start run 6 for problem zz_6710953139
   start samplings 1000 for problem zz_6710953139
sampled for problem zz_6710953139
sampled for problem zz_6870904713
finished samples sampling for zz_6870904713
 finished run 5 for problem zz_6870904713
 start run 6 for problem zz_6870904713
   start samplings 1000 for problem zz_6870904713
sampled for problem zz_6870904713
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6118499488
finished samples sampling for zz_6118499488
 finished run 5 for problem zz_6118499488
 start run 6 for problem zz_6118499488
   start samplings 1000 for problem zz_6118499488
sampled for problem zz_6118499488
sampled for problem zz_0698736184
finished samples sampling for zz_0698736184
 finished run 5 for problem zz_0698736184
 start run 6 for problem zz_0698736184
   start samplings 1000 for problem zz_0698736184
sampled for problem zz_0698736184
sampled for problem zz_5853151821
finished samples sampling for zz_5853151821
 finished run 5 for problem zz_5853151821
 start run 6 for problem zz_5853151821
   start samplings 1000 for problem zz_5853151821
sampled for problem zz_5853151821
sampled for problem zz_9480036090
finished samples sampling for zz_9480036090
 finished run 5 for problem zz_9480036090
 start run 6 for problem zz_9480036090
   start samplings 1000 for problem zz_9480036090
sampled for problem zz_9480036090
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6827423238
finished samples sampling for zz_6827423238
 finished run 5 for problem zz_6827423238
 start run 6 for problem zz_6827423238
   start samplings 1000 for problem zz_6827423238
sampled for problem zz_6827423238
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9832808442
finished samples sampling for zz_9832808442
 finished run 6 for problem zz_9832808442
 start run 7 for problem zz_9832808442
   start samplings 1000 for problem zz_9832808442
sampled for problem zz_9832808442
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6710953139
finished samples sampling for zz_6710953139
 finished run 6 for problem zz_6710953139
 start run 7 for problem zz_6710953139
   start samplings 1000 for problem zz_6710953139
sampled for problem zz_6710953139
sampled for problem zz_6870904713
finished samples sampling for zz_6870904713
 finished run 6 for problem zz_6870904713
 start run 7 for problem zz_6870904713
   start samplings 1000 for problem zz_6870904713
sampled for problem zz_6870904713
sampled for problem zz_0698736184
finished samples sampling for zz_0698736184
 finished run 6 for problem zz_0698736184
 start run 7 for problem zz_0698736184
   start samplings 1000 for problem zz_0698736184
sampled for problem zz_0698736184
sampled for problem zz_6118499488
finished samples sampling for zz_6118499488
 finished run 6 for problem zz_6118499488
 start run 7 for problem zz_6118499488
   start samplings 1000 for problem zz_6118499488
sampled for problem zz_6118499488
sampled for problem zz_5853151821
finished samples sampling for zz_5853151821
 finished run 6 for problem zz_5853151821
 start run 7 for problem zz_5853151821
   start samplings 1000 for problem zz_5853151821
sampled for problem zz_5853151821
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9480036090
finished samples sampling for zz_9480036090
 finished run 6 for problem zz_9480036090
 start run 7 for problem zz_9480036090
   start samplings 1000 for problem zz_9480036090
sampled for problem zz_9480036090
sampled for problem zz_6827423238
finished samples sampling for zz_6827423238
 finished run 6 for problem zz_6827423238
 start run 7 for problem zz_6827423238
   start samplings 1000 for problem zz_6827423238
sampled for problem zz_6827423238
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9832808442
finished samples sampling for zz_9832808442
 finished run 7 for problem zz_9832808442
 start run 8 for problem zz_9832808442
   start samplings 1000 for problem zz_9832808442
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9832808442
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6710953139
finished samples sampling for zz_6710953139
 finished run 7 for problem zz_6710953139
 start run 8 for problem zz_6710953139
   start samplings 1000 for problem zz_6710953139
sampled for problem zz_6710953139
sampled for problem zz_6870904713
finished samples sampling for zz_6870904713
 finished run 7 for problem zz_6870904713
 start run 8 for problem zz_6870904713
   start samplings 1000 for problem zz_6870904713
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6870904713
sampled for problem zz_0698736184
finished samples sampling for zz_0698736184
 finished run 7 for problem zz_0698736184
 start run 8 for problem zz_0698736184
   start samplings 1000 for problem zz_0698736184
sampled for problem zz_0698736184
sampled for problem zz_6118499488
finished samples sampling for zz_6118499488
 finished run 7 for problem zz_6118499488
 start run 8 for problem zz_6118499488
   start samplings 1000 for problem zz_6118499488
sampled for problem zz_6118499488
sampled for problem zz_5853151821
finished samples sampling for zz_5853151821
 finished run 7 for problem zz_5853151821
 start run 8 for problem zz_5853151821
   start samplings 1000 for problem zz_5853151821
sampled for problem zz_5853151821
sampled for problem zz_9480036090
finished samples sampling for zz_9480036090
 finished run 7 for problem zz_9480036090
 start run 8 for problem zz_9480036090
   start samplings 1000 for problem zz_9480036090
sampled for problem zz_9480036090
sampled for problem zz_6827423238
finished samples sampling for zz_6827423238
 finished run 7 for problem zz_6827423238
 start run 8 for problem zz_6827423238
   start samplings 1000 for problem zz_6827423238
sampled for problem zz_6827423238
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
   start samplings 1000 for problem zz_4944517933
sampled for problem zz_4944517933
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9073880962
finished samples sampling for zz_9073880962
 finished run 4 for problem zz_9073880962
 start run 5 for problem zz_9073880962
   start samplings 1000 for problem zz_9073880962
sampled for problem zz_9073880962
sampled for problem zz_8821900078
finished samples sampling for zz_8821900078
 finished run 4 for problem zz_8821900078
 start run 5 for problem zz_8821900078
   start samplings 1000 for problem zz_8821900078
sampled for problem zz_8821900078
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_1007359256
finished samples sampling for zz_1007359256
 finished run 4 for problem zz_1007359256
 start run 5 for problem zz_1007359256
   start samplings 1000 for problem zz_1007359256
sampled for problem zz_1007359256
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2362810253
finished samples sampling for zz_2362810253
 finished run 5 for problem zz_2362810253
 start run 6 for problem zz_2362810253
   start samplings 1000 for problem zz_2362810253
sampled for problem zz_2362810253
sampled for problem zz_0602320444
finished samples sampling for zz_0602320444
 finished run 5 for problem zz_0602320444
 start run 6 for problem zz_0602320444
   start samplings 1000 for problem zz_0602320444
sampled for problem zz_0602320444
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5578972868
finished samples sampling for zz_5578972868
 finished run 5 for problem zz_5578972868
 start run 6 for problem zz_5578972868
   start samplings 1000 for problem zz_5578972868
sampled for problem zz_5578972868
sampled for problem zz_2040850932
finished samples sampling for zz_2040850932
 finished run 5 for problem zz_2040850932
 start run 6 for problem zz_2040850932
   start samplings 1000 for problem zz_2040850932
sampled for problem zz_2040850932
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_4944517933
finished samples sampling for zz_4944517933
 finished run 5 for problem zz_4944517933
 start run 6 for problem zz_4944517933
   start samplings 1000 for problem zz_4944517933
sampled for problem zz_4944517933
sampled for problem zz_9073880962
finished samples sampling for zz_9073880962
 finished run 5 for problem zz_9073880962
 start run 6 for problem zz_9073880962
   start samplings 1000 for problem zz_9073880962
sampled for problem zz_9073880962
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_8821900078
finished samples sampling for zz_8821900078
 finished run 5 for problem zz_8821900078
 start run 6 for problem zz_8821900078
   start samplings 1000 for problem zz_8821900078
sampled for problem zz_8821900078
sampled for problem zz_1007359256
finished samples sampling for zz_1007359256
 finished run 5 for problem zz_1007359256
 start run 6 for problem zz_1007359256
   start samplings 1000 for problem zz_1007359256
sampled for problem zz_1007359256
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2362810253
finished samples sampling for zz_2362810253
 finished run 6 for problem zz_2362810253
 start run 7 for problem zz_2362810253
   start samplings 1000 for problem zz_2362810253
sampled for problem zz_2362810253
sampled for problem zz_0602320444
finished samples sampling for zz_0602320444
 finished run 6 for problem zz_0602320444
 start run 7 for problem zz_0602320444
   start samplings 1000 for problem zz_0602320444
sampled for problem zz_0602320444
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5578972868
finished samples sampling for zz_5578972868
 finished run 6 for problem zz_5578972868
 start run 7 for problem zz_5578972868
   start samplings 1000 for problem zz_5578972868
sampled for problem zz_5578972868
sampled for problem zz_2040850932
finished samples sampling for zz_2040850932
 finished run 6 for problem zz_2040850932
 start run 7 for problem zz_2040850932
   start samplings 1000 for problem zz_2040850932
sampled for problem zz_2040850932
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_4944517933
finished samples sampling for zz_4944517933
 finished run 6 for problem zz_4944517933
 start run 7 for problem zz_4944517933
   start samplings 1000 for problem zz_4944517933
sampled for problem zz_4944517933
sampled for problem zz_9073880962
finished samples sampling for zz_9073880962
 finished run 6 for problem zz_9073880962
 start run 7 for problem zz_9073880962
   start samplings 1000 for problem zz_9073880962
sampled for problem zz_9073880962
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_8821900078
finished samples sampling for zz_8821900078
 finished run 6 for problem zz_8821900078
 start run 7 for problem zz_8821900078
   start samplings 1000 for problem zz_8821900078
sampled for problem zz_8821900078
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_1007359256
finished samples sampling for zz_1007359256
 finished run 6 for problem zz_1007359256
 start run 7 for problem zz_1007359256
   start samplings 1000 for problem zz_1007359256
sampled for problem zz_1007359256
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2362810253
finished samples sampling for zz_2362810253
 finished run 7 for problem zz_2362810253
 start run 8 for problem zz_2362810253
   start samplings 1000 for problem zz_2362810253
sampled for problem zz_2362810253
sampled for problem zz_0602320444
finished samples sampling for zz_0602320444
 finished run 7 for problem zz_0602320444
 start run 8 for problem zz_0602320444
   start samplings 1000 for problem zz_0602320444
sampled for problem zz_0602320444
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5578972868
finished samples sampling for zz_5578972868
 finished run 7 for problem zz_5578972868
 start run 8 for problem zz_5578972868
   start samplings 1000 for problem zz_5578972868
sampled for problem zz_5578972868
sampled for problem zz_2040850932
finished samples sampling for zz_2040850932
 finished run 7 for problem zz_2040850932
 start run 8 for problem zz_2040850932
   start samplings 1000 for problem zz_2040850932
sampled for problem zz_2040850932
sampled for problem zz_4944517933
finished samples sampling for zz_4944517933
 finished run 7 for problem zz_4944517933
 start run 8 for problem zz_4944517933
   start samplings 1000 for problem zz_4944517933
sampled for problem zz_4944517933
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9073880962
finished samples sampling for zz_9073880962
 finished run 7 for problem zz_9073880962
 start run 8 for problem zz_9073880962
   start samplings 1000 for problem zz_9073880962
sampled for problem zz_9073880962
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_8821900078
finished samples sampling for zz_8821900078
 finished run 7 for problem zz_8821900078
 start run 8 for problem zz_8821900078
   start samplings 1000 for problem zz_8821900078
sampled for problem zz_8821900078
sampled for problem zz_1007359256
finished samples sampling for zz_1007359256
 finished run 7 for problem zz_1007359256
 start run 8 for problem zz_1007359256
   start samplings 1000 for problem zz_1007359256
 finished run 8 for problem zz_3319605940
 start run 9 for problem zz_3319605940
   start samplings 1000 for problem zz_3319605940
sampled for problem zz_3319605940
sampled for problem zz_4833824559
finished samples sampling for zz_4833824559
 finished run 7 for problem zz_4833824559
 start run 8 for problem zz_4833824559
   start samplings 1000 for problem zz_4833824559
sampled for problem zz_4833824559
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6887129085
finished samples sampling for zz_6887129085
 finished run 8 for problem zz_6887129085
 start run 9 for problem zz_6887129085
   start samplings 1000 for problem zz_6887129085
sampled for problem zz_6887129085
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0155935328
finished samples sampling for zz_0155935328
 finished run 8 for problem zz_0155935328
 start run 9 for problem zz_0155935328
   start samplings 1000 for problem zz_0155935328
sampled for problem zz_0155935328
sampled for problem zz_5061896232
finished samples sampling for zz_5061896232
 finished run 9 for problem zz_5061896232
 succesfully retrieved answer for problem {} zz_5061896232
 start working on problem zz_7629313757
 start writing answer for problem {} zz_5061896232
 problem zz_7629313757 will take can be sampled with a single run
 problem zz_7629313757 will be solved 1 times per run
 start run 0 for problem zz_7629313757
   start samplings 1000 for problem zz_7629313757
sampled for problem zz_7629313757
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f32233a0ad0>
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_9040679618
finished samples sampling for zz_9040679618
 finished run 8 for problem zz_9040679618
 start run 9 for problem zz_9040679618
   start samplings 1000 for problem zz_9040679618
sampled for problem zz_9040679618
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f32233a0ad0>
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_6417317480
finished samples sampling for zz_6417317480
 finished run 9 for problem zz_6417317480
 succesfully retrieved answer for problem {} zz_6417317480
 start working on problem zz_4275832690
 start writing answer for problem {} zz_6417317480
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f322061fe90>
 Queue sizes: problems_to_submit = 14, answers_to_write = 0
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f322061fe90>
 problem zz_4275832690 will take can be sampled with a single run
 problem zz_4275832690 will be solved 1 times per run
 start run 0 for problem zz_4275832690
   start samplings 1000 for problem zz_4275832690
sampled for problem zz_4275832690
sampled for problem zz_4355150326
finished samples sampling for zz_4355150326
 finished run 8 for problem zz_4355150326
 start run 9 for problem zz_4355150326
   start samplings 1000 for problem zz_4355150326
 Queue sizes: problems_to_submit = 14, answers_to_write = 0
sampled for problem zz_4355150326
sampled for problem zz_3319605940
finished samples sampling for zz_3319605940
 finished run 9 for problem zz_3319605940
 succesfully retrieved answer for problem {} zz_3319605940
 start working on problem zz_1916212122
sampled for problem zz_4833824559
finished samples sampling for zz_4833824559
 finished run 8 for problem zz_4833824559
 start run 9 for problem zz_4833824559
   start samplings 1000 for problem zz_4833824559
sampled for problem zz_4833824559
 Queue sizes: problems_to_submit = 13, answers_to_write = 1
 problem zz_1916212122 will take can be sampled with a single run
 problem zz_1916212122 will be solved 1 times per run
 start run 0 for problem zz_1916212122
   start samplings 1000 for problem zz_1916212122
sampled for problem zz_1916212122
sampled for problem zz_6887129085
finished samples sampling for zz_6887129085
 finished run 9 for problem zz_6887129085
 succesfully retrieved answer for problem {} zz_6887129085
 start working on problem zz_0609764094
 problem zz_0609764094 will take can be sampled with a single run
 problem zz_0609764094 will be solved 1 times per run
 start run 0 for problem zz_0609764094
   start samplings 1000 for problem zz_0609764094
sampled for problem zz_0609764094
 Queue sizes: problems_to_submit = 12, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 12, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_5061896232
 start writing answer for problem {} zz_3319605940
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f32206d59d0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f32206d59d0>
sampled for problem zz_3545900650
sampled for problem zz_2959573595
finished samples sampling for zz_2959573595
 finished run 4 for problem zz_2959573595
 start run 5 for problem zz_2959573595
   start samplings 1000 for problem zz_2959573595
sampled for problem zz_2959573595
sampled for problem zz_5096381632
finished samples sampling for zz_5096381632
 finished run 4 for problem zz_5096381632
 start run 5 for problem zz_5096381632
   start samplings 1000 for problem zz_5096381632
sampled for problem zz_5096381632
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5309607385
finished samples sampling for zz_5309607385
 finished run 4 for problem zz_5309607385
 start run 5 for problem zz_5309607385
   start samplings 1000 for problem zz_5309607385
sampled for problem zz_5309607385
sampled for problem zz_3202394964
finished samples sampling for zz_3202394964
 finished run 5 for problem zz_3202394964
 start run 6 for problem zz_3202394964
   start samplings 1000 for problem zz_3202394964
sampled for problem zz_3202394964
sampled for problem zz_5249775500
finished samples sampling for zz_5249775500
 finished run 4 for problem zz_5249775500
 start run 5 for problem zz_5249775500
   start samplings 1000 for problem zz_5249775500
sampled for problem zz_5249775500
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6731131214
finished samples sampling for zz_6731131214
 finished run 5 for problem zz_6731131214
 start run 6 for problem zz_6731131214
   start samplings 1000 for problem zz_6731131214
sampled for problem zz_6731131214
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6575155837
finished samples sampling for zz_6575155837
 finished run 5 for problem zz_6575155837
 start run 6 for problem zz_6575155837
   start samplings 1000 for problem zz_6575155837
sampled for problem zz_6575155837
sampled for problem zz_3545900650
finished samples sampling for zz_3545900650
 finished run 5 for problem zz_3545900650
 start run 6 for problem zz_3545900650
   start samplings 1000 for problem zz_3545900650
sampled for problem zz_3545900650
sampled for problem zz_2959573595
finished samples sampling for zz_2959573595
 finished run 5 for problem zz_2959573595
 start run 6 for problem zz_2959573595
   start samplings 1000 for problem zz_2959573595
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2959573595
sampled for problem zz_5309607385
finished samples sampling for zz_5309607385
 finished run 5 for problem zz_5309607385
 start run 6 for problem zz_5309607385
   start samplings 1000 for problem zz_5309607385
sampled for problem zz_5309607385
sampled for problem zz_5096381632
finished samples sampling for zz_5096381632
 finished run 5 for problem zz_5096381632
 start run 6 for problem zz_5096381632
   start samplings 1000 for problem zz_5096381632
sampled for problem zz_5096381632
sampled for problem zz_3202394964
finished samples sampling for zz_3202394964
 finished run 6 for problem zz_3202394964
 start run 7 for problem zz_3202394964
   start samplings 1000 for problem zz_3202394964
sampled for problem zz_3202394964
sampled for problem zz_5249775500
finished samples sampling for zz_5249775500
 finished run 5 for problem zz_5249775500
 start run 6 for problem zz_5249775500
   start samplings 1000 for problem zz_5249775500
sampled for problem zz_5249775500
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6731131214
finished samples sampling for zz_6731131214
 finished run 6 for problem zz_6731131214
 start run 7 for problem zz_6731131214
   start samplings 1000 for problem zz_6731131214
sampled for problem zz_6731131214
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6575155837
finished samples sampling for zz_6575155837
 finished run 6 for problem zz_6575155837
 start run 7 for problem zz_6575155837
   start samplings 1000 for problem zz_6575155837
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6575155837
sampled for problem zz_3545900650
finished samples sampling for zz_3545900650
 finished run 6 for problem zz_3545900650
 start run 7 for problem zz_3545900650
   start samplings 1000 for problem zz_3545900650
sampled for problem zz_3545900650
sampled for problem zz_2959573595
finished samples sampling for zz_2959573595
 finished run 6 for problem zz_2959573595
 start run 7 for problem zz_2959573595
   start samplings 1000 for problem zz_2959573595
sampled for problem zz_2959573595
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5309607385
finished samples sampling for zz_5309607385
 finished run 6 for problem zz_5309607385
 start run 7 for problem zz_5309607385
   start samplings 1000 for problem zz_5309607385
sampled for problem zz_5309607385
sampled for problem zz_5096381632
finished samples sampling for zz_5096381632
 finished run 6 for problem zz_5096381632
 start run 7 for problem zz_5096381632
   start samplings 1000 for problem zz_5096381632
sampled for problem zz_5096381632
sampled for problem zz_3202394964
finished samples sampling for zz_3202394964
 finished run 7 for problem zz_3202394964
 start run 8 for problem zz_3202394964
   start samplings 1000 for problem zz_3202394964
sampled for problem zz_3202394964
sampled for problem zz_5249775500
finished samples sampling for zz_5249775500
 finished run 6 for problem zz_5249775500
 start run 7 for problem zz_5249775500
   start samplings 1000 for problem zz_5249775500
sampled for problem zz_5249775500
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6731131214
finished samples sampling for zz_6731131214
 finished run 7 for problem zz_6731131214
 start run 8 for problem zz_6731131214
   start samplings 1000 for problem zz_6731131214
sampled for problem zz_6731131214
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6575155837
finished samples sampling for zz_6575155837
 finished run 7 for problem zz_6575155837
 start run 8 for problem zz_6575155837
   start samplings 1000 for problem zz_6575155837
sampled for problem zz_6575155837
sampled for problem zz_3545900650
finished samples sampling for zz_3545900650
 finished run 7 for problem zz_3545900650
 start run 8 for problem zz_3545900650
   start samplings 1000 for problem zz_3545900650
sampled for problem zz_3545900650
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2959573595
finished samples sampling for zz_2959573595
 finished run 7 for problem zz_2959573595
 start run 8 for problem zz_2959573595
   start samplings 1000 for problem zz_2959573595
sampled for problem zz_2959573595
sampled for problem zz_5309607385
finished samples sampling for zz_5309607385
 finished run 7 for problem zz_5309607385
 start run 8 for problem zz_5309607385
   start samplings 1000 for problem zz_5309607385
sampled for problem zz_5309607385
sampled for problem zz_5096381632
finished samples sampling for zz_5096381632
 finished run 7 for problem zz_5096381632
 start run 8 for problem zz_5096381632
   start samplings 1000 for problem zz_5096381632
sampled for problem zz_5096381632
sampled for problem zz_3202394964
finished samples sampling for zz_3202394964
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_3079327571
 start writing answer for problem {} zz_8525724730
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb444340bc0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb444340bc0>
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
sampled for problem zz_7766207770
finished samples sampling for zz_7766207770
 finished run 1 for problem zz_7766207770
 start run 2 for problem zz_7766207770
   start samplings 1000 for problem zz_7766207770
sampled for problem zz_7766207770
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
sampled for problem zz_0458068226
finished samples sampling for zz_0458068226
 finished run 1 for problem zz_0458068226
 start run 2 for problem zz_0458068226
   start samplings 1000 for problem zz_0458068226
sampled for problem zz_0458068226
sampled for problem zz_1726102831
finished samples sampling for zz_1726102831
 finished run 2 for problem zz_1726102831
 start run 3 for problem zz_1726102831
   start samplings 1000 for problem zz_1726102831
sampled for problem zz_1726102831
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_7781104199
finished samples sampling for zz_7781104199
 finished run 1 for problem zz_7781104199
 start run 2 for problem zz_7781104199
   start samplings 1000 for problem zz_7781104199
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
sampled for problem zz_7781104199
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_5377045315
 start writing answer for problem {} zz_3818605985
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb444377fe0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb444377fe0>
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
sampled for problem zz_7625459406
finished samples sampling for zz_7625459406
 finished run 2 for problem zz_7625459406
 start run 3 for problem zz_7625459406
   start samplings 1000 for problem zz_7625459406
sampled for problem zz_7625459406
sampled for problem zz_4413425408
finished samples sampling for zz_4413425408
 finished run 1 for problem zz_4413425408
 start run 2 for problem zz_4413425408
   start samplings 1000 for problem zz_4413425408
sampled for problem zz_4413425408
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
sampled for problem zz_2992420796
finished samples sampling for zz_2992420796
 finished run 1 for problem zz_2992420796
 start run 2 for problem zz_2992420796
   start samplings 1000 for problem zz_2992420796
sampled for problem zz_2992420796
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
sampled for problem zz_0285172740
finished samples sampling for zz_0285172740
 finished run 1 for problem zz_0285172740
 start run 2 for problem zz_0285172740
   start samplings 1000 for problem zz_0285172740
sampled for problem zz_0285172740
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
sampled for problem zz_7766207770
finished samples sampling for zz_7766207770
 finished run 2 for problem zz_7766207770
 start run 3 for problem zz_7766207770
   start samplings 1000 for problem zz_7766207770
sampled for problem zz_7766207770
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
 finished run 4 for problem zz_9571001973
 start run 5 for problem zz_9571001973
   start samplings 1000 for problem zz_9571001973
sampled for problem zz_9571001973
sampled for problem zz_3237559296
finished samples sampling for zz_3237559296
 finished run 4 for problem zz_3237559296
 start run 5 for problem zz_3237559296
   start samplings 1000 for problem zz_3237559296
sampled for problem zz_3237559296
sampled for problem zz_1728207492
finished samples sampling for zz_1728207492
 finished run 4 for problem zz_1728207492
 start run 5 for problem zz_1728207492
   start samplings 1000 for problem zz_1728207492
sampled for problem zz_1728207492
sampled for problem zz_0960471698
finished samples sampling for zz_0960471698
 finished run 4 for problem zz_0960471698
 start run 5 for problem zz_0960471698
   start samplings 1000 for problem zz_0960471698
sampled for problem zz_0960471698
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_3614144584
finished samples sampling for zz_3614144584
 finished run 4 for problem zz_3614144584
 start run 5 for problem zz_3614144584
   start samplings 1000 for problem zz_3614144584
sampled for problem zz_3614144584
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_3761453891
finished samples sampling for zz_3761453891
 finished run 5 for problem zz_3761453891
 start run 6 for problem zz_3761453891
   start samplings 1000 for problem zz_3761453891
sampled for problem zz_3761453891
sampled for problem zz_3729648486
finished samples sampling for zz_3729648486
 finished run 5 for problem zz_3729648486
 start run 6 for problem zz_3729648486
   start samplings 1000 for problem zz_3729648486
sampled for problem zz_3729648486
sampled for problem zz_8687733182
finished samples sampling for zz_8687733182
 finished run 5 for problem zz_8687733182
 start run 6 for problem zz_8687733182
   start samplings 1000 for problem zz_8687733182
sampled for problem zz_8687733182
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_9571001973
finished samples sampling for zz_9571001973
 finished run 5 for problem zz_9571001973
 start run 6 for problem zz_9571001973
   start samplings 1000 for problem zz_9571001973
sampled for problem zz_9571001973
sampled for problem zz_3237559296
finished samples sampling for zz_3237559296
 finished run 5 for problem zz_3237559296
 start run 6 for problem zz_3237559296
   start samplings 1000 for problem zz_3237559296
sampled for problem zz_3237559296
sampled for problem zz_1728207492
finished samples sampling for zz_1728207492
 finished run 5 for problem zz_1728207492
 start run 6 for problem zz_1728207492
   start samplings 1000 for problem zz_1728207492
sampled for problem zz_1728207492
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_0960471698
finished samples sampling for zz_0960471698
 finished run 5 for problem zz_0960471698
 start run 6 for problem zz_0960471698
   start samplings 1000 for problem zz_0960471698
sampled for problem zz_0960471698
sampled for problem zz_3614144584
finished samples sampling for zz_3614144584
 finished run 5 for problem zz_3614144584
 start run 6 for problem zz_3614144584
   start samplings 1000 for problem zz_3614144584
sampled for problem zz_3614144584
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_3761453891
finished samples sampling for zz_3761453891
 finished run 6 for problem zz_3761453891
 start run 7 for problem zz_3761453891
   start samplings 1000 for problem zz_3761453891
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_3761453891
sampled for problem zz_3729648486
finished samples sampling for zz_3729648486
 finished run 6 for problem zz_3729648486
 start run 7 for problem zz_3729648486
   start samplings 1000 for problem zz_3729648486
sampled for problem zz_3729648486
sampled for problem zz_8687733182
finished samples sampling for zz_8687733182
 finished run 6 for problem zz_8687733182
 start run 7 for problem zz_8687733182
   start samplings 1000 for problem zz_8687733182
sampled for problem zz_8687733182
sampled for problem zz_9571001973
finished samples sampling for zz_9571001973
 finished run 6 for problem zz_9571001973
 start run 7 for problem zz_9571001973
   start samplings 1000 for problem zz_9571001973
sampled for problem zz_9571001973
sampled for problem zz_3237559296
finished samples sampling for zz_3237559296
 finished run 6 for problem zz_3237559296
 start run 7 for problem zz_3237559296
   start samplings 1000 for problem zz_3237559296
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_3237559296
sampled for problem zz_1728207492
finished samples sampling for zz_1728207492
 finished run 6 for problem zz_1728207492
 start run 7 for problem zz_1728207492
   start samplings 1000 for problem zz_1728207492
sampled for problem zz_1728207492
sampled for problem zz_0960471698
finished samples sampling for zz_0960471698
 finished run 6 for problem zz_0960471698
 start run 7 for problem zz_0960471698
   start samplings 1000 for problem zz_0960471698
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_0960471698
sampled for problem zz_3614144584
finished samples sampling for zz_3614144584
 finished run 6 for problem zz_3614144584
 start run 7 for problem zz_3614144584
   start samplings 1000 for problem zz_3614144584
sampled for problem zz_3614144584
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_3761453891
finished samples sampling for zz_3761453891
 finished run 7 for problem zz_3761453891
 start run 8 for problem zz_3761453891
   start samplings 1000 for problem zz_3761453891
sampled for problem zz_3761453891
sampled for problem zz_3729648486
finished samples sampling for zz_3729648486
 finished run 7 for problem zz_3729648486
 start run 8 for problem zz_3729648486
   start samplings 1000 for problem zz_3729648486
sampled for problem zz_3729648486
sampled for problem zz_8687733182
finished samples sampling for zz_8687733182
 finished run 7 for problem zz_8687733182
 start run 8 for problem zz_8687733182
   start samplings 1000 for problem zz_8687733182
sampled for problem zz_8687733182
sampled for problem zz_9571001973
finished samples sampling for zz_9571001973
 finished run 7 for problem zz_9571001973
 start run 8 for problem zz_9571001973
   start samplings 1000 for problem zz_9571001973
sampled for problem zz_9571001973
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_3237559296
finished samples sampling for zz_3237559296
 finished run 7 for problem zz_3237559296
 start run 8 for problem zz_3237559296
   start samplings 1000 for problem zz_3237559296
sampled for problem zz_3237559296
sampled for problem zz_1728207492
finished samples sampling for zz_1728207492
 finished run 7 for problem zz_1728207492
 start run 8 for problem zz_1728207492
   start samplings 1000 for problem zz_1728207492
sampled for problem zz_1728207492
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_3614144584
finished samples sampling for zz_3614144584
 finished run 7 for problem zz_3614144584
 start run 8 for problem zz_3614144584
 Queue sizes: problems_to_submit = 12, answers_to_write = 1
sampled for problem zz_0155935328
finished samples sampling for zz_0155935328
 finished run 9 for problem zz_0155935328
 succesfully retrieved answer for problem {} zz_0155935328
 start working on problem zz_5314019901
 problem zz_5314019901 will take can be sampled with a single run
 problem zz_5314019901 will be solved 1 times per run
 start run 0 for problem zz_5314019901
   start samplings 1000 for problem zz_5314019901
sampled for problem zz_5314019901
sampled for problem zz_7629313757
finished samples sampling for zz_7629313757
 finished run 0 for problem zz_7629313757
 start run 1 for problem zz_7629313757
   start samplings 1000 for problem zz_7629313757
sampled for problem zz_7629313757
sampled for problem zz_9040679618
finished samples sampling for zz_9040679618
 finished run 9 for problem zz_9040679618
 succesfully retrieved answer for problem {} zz_9040679618
 start working on problem zz_0651999763
 Queue sizes: problems_to_submit = 10, answers_to_write = 3
 problem zz_0651999763 will take can be sampled with a single run
 problem zz_0651999763 will be solved 1 times per run
 start run 0 for problem zz_0651999763
   start samplings 1000 for problem zz_0651999763
sampled for problem zz_0651999763
 Queue sizes: problems_to_submit = 10, answers_to_write = 3
 Queue sizes: problems_to_submit = 10, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_4275832690
finished samples sampling for zz_4275832690
 finished run 0 for problem zz_4275832690
 start run 1 for problem zz_4275832690
   start samplings 1000 for problem zz_4275832690
sampled for problem zz_4275832690
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6417317480
 start writing answer for problem {} zz_6887129085
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f3220653a40>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f3220653a40>
sampled for problem zz_4355150326
finished samples sampling for zz_4355150326
 finished run 9 for problem zz_4355150326
 succesfully retrieved answer for problem {} zz_4355150326
 start working on problem zz_2868668091
 Queue sizes: problems_to_submit = 9, answers_to_write = 3
 problem zz_2868668091 will take can be sampled with a single run
 problem zz_2868668091 will be solved 1 times per run
 Queue sizes: problems_to_submit = 9, answers_to_write = 3
sampled for problem zz_4833824559
finished samples sampling for zz_4833824559
 finished run 9 for problem zz_4833824559
 start run 0 for problem zz_2868668091
   start samplings 1000 for problem zz_2868668091
sampled for problem zz_2868668091
 succesfully retrieved answer for problem {} zz_4833824559
 start working on problem zz_7619482988
sampled for problem zz_1916212122
finished samples sampling for zz_1916212122
 finished run 0 for problem zz_1916212122
 start run 1 for problem zz_1916212122
   start samplings 1000 for problem zz_1916212122
sampled for problem zz_1916212122
 problem zz_7619482988 will take can be sampled with a single run
 problem zz_7619482988 will be solved 1 times per run
 start run 0 for problem zz_7619482988
   start samplings 1000 for problem zz_7619482988
sampled for problem zz_7619482988
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
sampled for problem zz_0609764094
finished samples sampling for zz_0609764094
 finished run 0 for problem zz_0609764094
 start run 1 for problem zz_0609764094
   start samplings 1000 for problem zz_0609764094
sampled for problem zz_0609764094
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
sampled for problem zz_5314019901
finished samples sampling for zz_5314019901
 finished run 0 for problem zz_5314019901
 start run 1 for problem zz_5314019901
   start samplings 1000 for problem zz_5314019901
sampled for problem zz_5314019901
sampled for problem zz_7629313757
finished samples sampling for zz_7629313757
 finished run 1 for problem zz_7629313757
 start run 2 for problem zz_7629313757
   start samplings 1000 for problem zz_7629313757
sampled for problem zz_7629313757
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
sampled for problem zz_0651999763
finished samples sampling for zz_0651999763
 finished run 0 for problem zz_0651999763
 start run 1 for problem zz_0651999763
   start samplings 1000 for problem zz_0651999763
sampled for problem zz_0651999763
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
finished samples sampling for zz_9358651368
 finished run 4 for problem zz_9358651368
 start run 5 for problem zz_9358651368
   start samplings 1000 for problem zz_9358651368
sampled for problem zz_9358651368
sampled for problem zz_5478785105
finished samples sampling for zz_5478785105
 finished run 4 for problem zz_5478785105
 start run 5 for problem zz_5478785105
   start samplings 1000 for problem zz_5478785105
sampled for problem zz_5478785105
sampled for problem zz_9027338350
finished samples sampling for zz_9027338350
 finished run 4 for problem zz_9027338350
 start run 5 for problem zz_9027338350
   start samplings 1000 for problem zz_9027338350
sampled for problem zz_9027338350
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_7338686412
finished samples sampling for zz_7338686412
 finished run 4 for problem zz_7338686412
 start run 5 for problem zz_7338686412
   start samplings 1000 for problem zz_7338686412
sampled for problem zz_7338686412
sampled for problem zz_5060062432
finished samples sampling for zz_5060062432
 finished run 4 for problem zz_5060062432
 start run 5 for problem zz_5060062432
   start samplings 1000 for problem zz_5060062432
sampled for problem zz_5060062432
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_8522227065
finished samples sampling for zz_8522227065
 finished run 5 for problem zz_8522227065
 start run 6 for problem zz_8522227065
   start samplings 1000 for problem zz_8522227065
sampled for problem zz_8522227065
sampled for problem zz_9188041178
finished samples sampling for zz_9188041178
 finished run 5 for problem zz_9188041178
 start run 6 for problem zz_9188041178
   start samplings 1000 for problem zz_9188041178
sampled for problem zz_9188041178
sampled for problem zz_8519333792
finished samples sampling for zz_8519333792
 finished run 5 for problem zz_8519333792
 start run 6 for problem zz_8519333792
   start samplings 1000 for problem zz_8519333792
sampled for problem zz_8519333792
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_9358651368
finished samples sampling for zz_9358651368
 finished run 5 for problem zz_9358651368
 start run 6 for problem zz_9358651368
   start samplings 1000 for problem zz_9358651368
sampled for problem zz_9358651368
sampled for problem zz_5478785105
finished samples sampling for zz_5478785105
 finished run 5 for problem zz_5478785105
 start run 6 for problem zz_5478785105
   start samplings 1000 for problem zz_5478785105
sampled for problem zz_5478785105
sampled for problem zz_9027338350
finished samples sampling for zz_9027338350
 finished run 5 for problem zz_9027338350
 start run 6 for problem zz_9027338350
   start samplings 1000 for problem zz_9027338350
sampled for problem zz_9027338350
sampled for problem zz_7338686412
finished samples sampling for zz_7338686412
 finished run 5 for problem zz_7338686412
 start run 6 for problem zz_7338686412
   start samplings 1000 for problem zz_7338686412
sampled for problem zz_7338686412
sampled for problem zz_5060062432
finished samples sampling for zz_5060062432
 finished run 5 for problem zz_5060062432
 start run 6 for problem zz_5060062432
   start samplings 1000 for problem zz_5060062432
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_5060062432
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_8522227065
finished samples sampling for zz_8522227065
 finished run 6 for problem zz_8522227065
 start run 7 for problem zz_8522227065
   start samplings 1000 for problem zz_8522227065
sampled for problem zz_8522227065
sampled for problem zz_9188041178
finished samples sampling for zz_9188041178
 finished run 6 for problem zz_9188041178
 start run 7 for problem zz_9188041178
   start samplings 1000 for problem zz_9188041178
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_9188041178
sampled for problem zz_8519333792
finished samples sampling for zz_8519333792
 finished run 6 for problem zz_8519333792
 start run 7 for problem zz_8519333792
   start samplings 1000 for problem zz_8519333792
sampled for problem zz_8519333792
sampled for problem zz_9358651368
finished samples sampling for zz_9358651368
 finished run 6 for problem zz_9358651368
 start run 7 for problem zz_9358651368
   start samplings 1000 for problem zz_9358651368
sampled for problem zz_9358651368
sampled for problem zz_5478785105
finished samples sampling for zz_5478785105
 finished run 6 for problem zz_5478785105
 start run 7 for problem zz_5478785105
   start samplings 1000 for problem zz_5478785105
sampled for problem zz_5478785105
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_9027338350
finished samples sampling for zz_9027338350
 finished run 6 for problem zz_9027338350
 start run 7 for problem zz_9027338350
   start samplings 1000 for problem zz_9027338350
sampled for problem zz_9027338350
sampled for problem zz_7338686412
finished samples sampling for zz_7338686412
 finished run 6 for problem zz_7338686412
 start run 7 for problem zz_7338686412
   start samplings 1000 for problem zz_7338686412
sampled for problem zz_7338686412
sampled for problem zz_5060062432
finished samples sampling for zz_5060062432
 finished run 6 for problem zz_5060062432
 start run 7 for problem zz_5060062432
   start samplings 1000 for problem zz_5060062432
sampled for problem zz_5060062432
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_8522227065
finished samples sampling for zz_8522227065
 finished run 7 for problem zz_8522227065
 start run 8 for problem zz_8522227065
   start samplings 1000 for problem zz_8522227065
sampled for problem zz_8522227065
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_8519333792
finished samples sampling for zz_8519333792
 finished run 7 for problem zz_8519333792
 start run 8 for problem zz_8519333792
   start samplings 1000 for problem zz_8519333792
sampled for problem zz_8519333792
sampled for problem zz_9188041178
finished samples sampling for zz_9188041178
 finished run 7 for problem zz_9188041178
 start run 8 for problem zz_9188041178
   start samplings 1000 for problem zz_9188041178
sampled for problem zz_9188041178
sampled for problem zz_9358651368
finished samples sampling for zz_9358651368
 finished run 7 for problem zz_9358651368
 start run 8 for problem zz_9358651368
   start samplings 1000 for problem zz_9358651368
sampled for problem zz_9358651368
sampled for problem zz_5478785105
finished samples sampling for zz_5478785105
 finished run 7 for problem zz_5478785105
 start run 8 for problem zz_5478785105
   start samplings 1000 for problem zz_5478785105
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_5478785105
sampled for problem zz_9027338350
finished samples sampling for zz_9027338350
 finished run 7 for problem zz_9027338350
 start run 8 for problem zz_9027338350
   start samplings 1000 for problem zz_9027338350
sampled for problem zz_9027338350
sampled for problem zz_7338686412
finished samples sampling for zz_7338686412
 finished run 7 for problem zz_7338686412
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_0458068226
finished samples sampling for zz_0458068226
 finished run 2 for problem zz_0458068226
 start run 3 for problem zz_0458068226
   start samplings 1000 for problem zz_0458068226
sampled for problem zz_0458068226
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_1726102831
finished samples sampling for zz_1726102831
 finished run 3 for problem zz_1726102831
 start run 4 for problem zz_1726102831
   start samplings 1000 for problem zz_1726102831
sampled for problem zz_1726102831
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
 finished writing answer for problem {} zz_8525724730
 start writing answer for problem {} zz_2593283829
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb44438a750>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb44438a750>
sampled for problem zz_7781104199
finished samples sampling for zz_7781104199
 finished run 2 for problem zz_7781104199
 start run 3 for problem zz_7781104199
   start samplings 1000 for problem zz_7781104199
sampled for problem zz_7781104199
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
sampled for problem zz_7625459406
finished samples sampling for zz_7625459406
 finished run 3 for problem zz_7625459406
 start run 4 for problem zz_7625459406
   start samplings 1000 for problem zz_7625459406
sampled for problem zz_7625459406
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_4413425408
finished samples sampling for zz_4413425408
 finished run 2 for problem zz_4413425408
 start run 3 for problem zz_4413425408
   start samplings 1000 for problem zz_4413425408
sampled for problem zz_4413425408
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_3818605985
 start writing answer for problem {} zz_0848920188
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb4443b2510>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb4443b2510>
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2992420796
finished samples sampling for zz_2992420796
 finished run 2 for problem zz_2992420796
 start run 3 for problem zz_2992420796
   start samplings 1000 for problem zz_2992420796
sampled for problem zz_2992420796
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0285172740
finished samples sampling for zz_0285172740
 finished run 2 for problem zz_0285172740
 start run 3 for problem zz_0285172740
   start samplings 1000 for problem zz_0285172740
sampled for problem zz_0285172740
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_7766207770
finished samples sampling for zz_7766207770
 finished run 3 for problem zz_7766207770
 start run 4 for problem zz_7766207770
   start samplings 1000 for problem zz_7766207770
sampled for problem zz_7766207770
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9832808442
finished samples sampling for zz_9832808442
 finished run 8 for problem zz_9832808442
 start run 9 for problem zz_9832808442
   start samplings 1000 for problem zz_9832808442
sampled for problem zz_9832808442
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6710953139
finished samples sampling for zz_6710953139
 finished run 8 for problem zz_6710953139
 start run 9 for problem zz_6710953139
   start samplings 1000 for problem zz_6710953139
sampled for problem zz_6710953139
sampled for problem zz_6870904713
finished samples sampling for zz_6870904713
 finished run 8 for problem zz_6870904713
 start run 9 for problem zz_6870904713
   start samplings 1000 for problem zz_6870904713
sampled for problem zz_6870904713
sampled for problem zz_0698736184
finished samples sampling for zz_0698736184
 finished run 8 for problem zz_0698736184
 start run 9 for problem zz_0698736184
   start samplings 1000 for problem zz_0698736184
sampled for problem zz_0698736184
sampled for problem zz_6118499488
finished samples sampling for zz_6118499488
 finished run 8 for problem zz_6118499488
 start run 9 for problem zz_6118499488
   start samplings 1000 for problem zz_6118499488
sampled for problem zz_6118499488
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5853151821
finished samples sampling for zz_5853151821
 finished run 8 for problem zz_5853151821
 start run 9 for problem zz_5853151821
   start samplings 1000 for problem zz_5853151821
sampled for problem zz_5853151821
sampled for problem zz_9480036090
finished samples sampling for zz_9480036090
 finished run 8 for problem zz_9480036090
 start run 9 for problem zz_9480036090
   start samplings 1000 for problem zz_9480036090
sampled for problem zz_9480036090
sampled for problem zz_6827423238
finished samples sampling for zz_6827423238
 finished run 8 for problem zz_6827423238
 start run 9 for problem zz_6827423238
   start samplings 1000 for problem zz_6827423238
sampled for problem zz_6827423238
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9832808442
finished samples sampling for zz_9832808442
 finished run 9 for problem zz_9832808442
 succesfully retrieved answer for problem {} zz_9832808442
 start working on problem zz_0487520058
 start writing answer for problem {} zz_9832808442
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd6f5ff1fa0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd6f5ff1fa0>
 problem zz_0487520058 will take can be sampled with a single run
 problem zz_0487520058 will be solved 1 times per run
 start run 0 for problem zz_0487520058
   start samplings 1000 for problem zz_0487520058
sampled for problem zz_0487520058
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_6870904713
finished samples sampling for zz_6870904713
 finished run 9 for problem zz_6870904713
 succesfully retrieved answer for problem {} zz_6870904713
 start working on problem zz_1208695640
 start writing answer for problem {} zz_6870904713
sampled for problem zz_0698736184
finished samples sampling for zz_0698736184
 finished run 9 for problem zz_0698736184
 succesfully retrieved answer for problem {} zz_0698736184
 start working on problem zz_6935795118
 Queue sizes: problems_to_submit = 13, answers_to_write = 1
 problem zz_1208695640 will take can be sampled with a single run
 problem zz_1208695640 will be solved 1 times per run
sampled for problem zz_6827423238
finished samples sampling for zz_6827423238
 finished run 9 for problem zz_6827423238
sampled for problem zz_9480036090
finished samples sampling for zz_9480036090
 finished run 9 for problem zz_9480036090
sampled for problem zz_5853151821
finished samples sampling for zz_5853151821
 finished run 9 for problem zz_5853151821
sampled for problem zz_6710953139
finished samples sampling for zz_6710953139
 finished run 9 for problem zz_6710953139
sampled for problem zz_6118499488
finished samples sampling for zz_6118499488
 finished run 9 for problem zz_6118499488
 start run 0 for problem zz_1208695640
   start samplings 1000 for problem zz_1208695640
sampled for problem zz_1208695640
 problem zz_6935795118 will take can be sampled with a single run
 problem zz_6935795118 will be solved 1 times per run
 succesfully retrieved answer for problem {} zz_6827423238
 start working on problem zz_6255233176
 succesfully retrieved answer for problem {} zz_9480036090
 start working on problem zz_2236080878
 Queue sizes: problems_to_submit = 11, answers_to_write = 3
 succesfully retrieved answer for problem {} zz_5853151821
 start working on problem zz_8530174265
 succesfully retrieved answer for problem {} zz_6710953139
 start working on problem zz_0140728978
 problem zz_6255233176 will take can be sampled with a single run
 problem zz_6255233176 will be solved 1 times per run
 succesfully retrieved answer for problem {} zz_6118499488
 start working on problem zz_8100679620
 problem zz_2236080878 will take can be sampled with a single run
 problem zz_2236080878 will be solved 1 times per run
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd6f42a5c10>
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
 start run 0 for problem zz_6935795118
   start samplings 1000 for problem zz_6935795118
sampled for problem zz_6935795118
 problem zz_8530174265 will take can be sampled with a single run
 problem zz_8530174265 will be solved 1 times per run
 problem zz_0140728978 will take can be sampled with a single run
 problem zz_0140728978 will be solved 1 times per run
 start run 0 for problem zz_6255233176
   start samplings 1000 for problem zz_6255233176
sampled for problem zz_6255233176
 problem zz_8100679620 will take can be sampled with a single run
 problem zz_8100679620 will be solved 1 times per run
 start run 0 for problem zz_2236080878
   start samplings 1000 for problem zz_2236080878
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
sampled for problem zz_2236080878
 start run 0 for problem zz_8530174265
   start samplings 1000 for problem zz_8530174265
sampled for problem zz_8530174265
 start run 0 for problem zz_0140728978
   start samplings 1000 for problem zz_0140728978
sampled for problem zz_0140728978
 start run 0 for problem zz_8100679620
   start samplings 1000 for problem zz_8100679620
sampled for problem zz_8100679620
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd6f42a5c10>
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
sampled for problem zz_0487520058
finished samples sampling for zz_0487520058
 finished run 0 for problem zz_0487520058
 start run 1 for problem zz_0487520058
   start samplings 1000 for problem zz_0487520058
sampled for problem zz_0487520058
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
sampled for problem zz_1208695640
finished samples sampling for zz_1208695640
 finished run 0 for problem zz_1208695640
 start run 1 for problem zz_1208695640
   start samplings 1000 for problem zz_1208695640
sampled for problem zz_1208695640
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
 finished run 8 for problem zz_3202394964
 start run 9 for problem zz_3202394964
   start samplings 1000 for problem zz_3202394964
sampled for problem zz_3202394964
sampled for problem zz_5249775500
finished samples sampling for zz_5249775500
 finished run 7 for problem zz_5249775500
 start run 8 for problem zz_5249775500
   start samplings 1000 for problem zz_5249775500
sampled for problem zz_5249775500
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6731131214
finished samples sampling for zz_6731131214
 finished run 8 for problem zz_6731131214
 start run 9 for problem zz_6731131214
   start samplings 1000 for problem zz_6731131214
sampled for problem zz_6731131214
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_6575155837
finished samples sampling for zz_6575155837
 finished run 8 for problem zz_6575155837
 start run 9 for problem zz_6575155837
   start samplings 1000 for problem zz_6575155837
sampled for problem zz_6575155837
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_3545900650
finished samples sampling for zz_3545900650
 finished run 8 for problem zz_3545900650
 start run 9 for problem zz_3545900650
   start samplings 1000 for problem zz_3545900650
sampled for problem zz_3545900650
sampled for problem zz_2959573595
finished samples sampling for zz_2959573595
 finished run 8 for problem zz_2959573595
 start run 9 for problem zz_2959573595
   start samplings 1000 for problem zz_2959573595
sampled for problem zz_2959573595
sampled for problem zz_5309607385
finished samples sampling for zz_5309607385
 finished run 8 for problem zz_5309607385
 start run 9 for problem zz_5309607385
   start samplings 1000 for problem zz_5309607385
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5309607385
sampled for problem zz_5096381632
finished samples sampling for zz_5096381632
 finished run 8 for problem zz_5096381632
 start run 9 for problem zz_5096381632
   start samplings 1000 for problem zz_5096381632
sampled for problem zz_5096381632
sampled for problem zz_3202394964
finished samples sampling for zz_3202394964
 finished run 9 for problem zz_3202394964
 succesfully retrieved answer for problem {} zz_3202394964
 start working on problem zz_3451907868
sampled for problem zz_5249775500
finished samples sampling for zz_5249775500
 finished run 8 for problem zz_5249775500
 start run 9 for problem zz_5249775500
   start samplings 1000 for problem zz_5249775500
 start writing answer for problem {} zz_3202394964
sampled for problem zz_5249775500
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4faf6b800>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4faf6b800>
 problem zz_3451907868 will take can be sampled with a single run
 problem zz_3451907868 will be solved 1 times per run
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 start run 0 for problem zz_3451907868
   start samplings 1000 for problem zz_3451907868
sampled for problem zz_3451907868
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_3202394964
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_6731131214
finished samples sampling for zz_6731131214
 finished run 9 for problem zz_6731131214
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 succesfully retrieved answer for problem {} zz_6731131214
 start working on problem zz_8267963959
 start writing answer for problem {} zz_6731131214
 Queue sizes: problems_to_submit = 14, answers_to_write = 0
 problem zz_8267963959 will take can be sampled with a single run
 problem zz_8267963959 will be solved 1 times per run
 start run 0 for problem zz_8267963959
   start samplings 1000 for problem zz_8267963959
sampled for problem zz_8267963959
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4f82443e0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4f82443e0>
sampled for problem zz_3545900650
finished samples sampling for zz_3545900650
 finished run 9 for problem zz_3545900650
sampled for problem zz_6575155837
finished samples sampling for zz_6575155837
 finished run 9 for problem zz_6575155837
sampled for problem zz_2959573595
finished samples sampling for zz_2959573595
 finished run 9 for problem zz_2959573595
 succesfully retrieved answer for problem {} zz_3545900650
 start working on problem zz_3242687376
 start writing answer for problem {} zz_3545900650
sampled for problem zz_5309607385
finished samples sampling for zz_5309607385
 finished run 9 for problem zz_5309607385
 succesfully retrieved answer for problem {} zz_6575155837
 start working on problem zz_5125038959
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_3319605940
 start writing answer for problem {} zz_0155935328
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f32206d4ce0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f32206d4ce0>
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
sampled for problem zz_4275832690
finished samples sampling for zz_4275832690
 finished run 1 for problem zz_4275832690
 start run 2 for problem zz_4275832690
   start samplings 1000 for problem zz_4275832690
sampled for problem zz_4275832690
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
sampled for problem zz_2868668091
finished samples sampling for zz_2868668091
 finished run 0 for problem zz_2868668091
 start run 1 for problem zz_2868668091
   start samplings 1000 for problem zz_2868668091
sampled for problem zz_2868668091
sampled for problem zz_1916212122
finished samples sampling for zz_1916212122
 finished run 1 for problem zz_1916212122
 start run 2 for problem zz_1916212122
   start samplings 1000 for problem zz_1916212122
sampled for problem zz_1916212122
sampled for problem zz_7619482988
finished samples sampling for zz_7619482988
 finished run 0 for problem zz_7619482988
 start run 1 for problem zz_7619482988
   start samplings 1000 for problem zz_7619482988
sampled for problem zz_7619482988
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
sampled for problem zz_0609764094
finished samples sampling for zz_0609764094
 finished run 1 for problem zz_0609764094
 start run 2 for problem zz_0609764094
   start samplings 1000 for problem zz_0609764094
sampled for problem zz_0609764094
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_5314019901
finished samples sampling for zz_5314019901
 finished run 1 for problem zz_5314019901
 start run 2 for problem zz_5314019901
   start samplings 1000 for problem zz_5314019901
sampled for problem zz_5314019901
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_7629313757
finished samples sampling for zz_7629313757
 finished run 2 for problem zz_7629313757
 start run 3 for problem zz_7629313757
   start samplings 1000 for problem zz_7629313757
sampled for problem zz_7629313757
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6887129085
 start writing answer for problem {} zz_9040679618
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f32206813d0>
sampled for problem zz_0651999763
finished samples sampling for zz_0651999763
 finished run 1 for problem zz_0651999763
 start run 2 for problem zz_0651999763
   start samplings 1000 for problem zz_0651999763
sampled for problem zz_0651999763
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f32206813d0>
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
sampled for problem zz_4275832690
finished samples sampling for zz_4275832690
 finished run 2 for problem zz_4275832690
 start run 3 for problem zz_4275832690
   start samplings 1000 for problem zz_4275832690
sampled for problem zz_4275832690
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_0458068226
finished samples sampling for zz_0458068226
 finished run 3 for problem zz_0458068226
 start run 4 for problem zz_0458068226
   start samplings 1000 for problem zz_0458068226
sampled for problem zz_0458068226
sampled for problem zz_1726102831
finished samples sampling for zz_1726102831
 finished run 4 for problem zz_1726102831
 start run 5 for problem zz_1726102831
   start samplings 1000 for problem zz_1726102831
sampled for problem zz_1726102831
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_2593283829
sampled for problem zz_7781104199
finished samples sampling for zz_7781104199
 finished run 3 for problem zz_7781104199
 start run 4 for problem zz_7781104199
   start samplings 1000 for problem zz_7781104199
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_7781104199
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0848920188
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_7625459406
finished samples sampling for zz_7625459406
 finished run 4 for problem zz_7625459406
 start run 5 for problem zz_7625459406
   start samplings 1000 for problem zz_7625459406
sampled for problem zz_7625459406
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4413425408
finished samples sampling for zz_4413425408
 finished run 3 for problem zz_4413425408
 start run 4 for problem zz_4413425408
   start samplings 1000 for problem zz_4413425408
sampled for problem zz_4413425408
sampled for problem zz_2992420796
finished samples sampling for zz_2992420796
 finished run 3 for problem zz_2992420796
 start run 4 for problem zz_2992420796
   start samplings 1000 for problem zz_2992420796
sampled for problem zz_2992420796
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0285172740
finished samples sampling for zz_0285172740
 finished run 3 for problem zz_0285172740
 start run 4 for problem zz_0285172740
   start samplings 1000 for problem zz_0285172740
sampled for problem zz_0285172740
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_7766207770
finished samples sampling for zz_7766207770
 finished run 4 for problem zz_7766207770
 start run 5 for problem zz_7766207770
   start samplings 1000 for problem zz_7766207770
sampled for problem zz_7766207770
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0458068226
finished samples sampling for zz_0458068226
 finished run 4 for problem zz_0458068226
 start run 5 for problem zz_0458068226
   start samplings 1000 for problem zz_0458068226
sampled for problem zz_0458068226
sampled for problem zz_1726102831
finished samples sampling for zz_1726102831
 finished run 5 for problem zz_1726102831
 start run 6 for problem zz_1726102831
   start samplings 1000 for problem zz_1726102831
sampled for problem zz_1726102831
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_7781104199
finished samples sampling for zz_7781104199
 finished run 4 for problem zz_7781104199
 start run 5 for problem zz_7781104199
   start samplings 1000 for problem zz_7781104199
sampled for problem zz_1007359256
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2362810253
finished samples sampling for zz_2362810253
 finished run 8 for problem zz_2362810253
 start run 9 for problem zz_2362810253
   start samplings 1000 for problem zz_2362810253
sampled for problem zz_2362810253
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_0602320444
finished samples sampling for zz_0602320444
 finished run 8 for problem zz_0602320444
 start run 9 for problem zz_0602320444
   start samplings 1000 for problem zz_0602320444
sampled for problem zz_0602320444
sampled for problem zz_5578972868
finished samples sampling for zz_5578972868
 finished run 8 for problem zz_5578972868
 start run 9 for problem zz_5578972868
   start samplings 1000 for problem zz_5578972868
sampled for problem zz_5578972868
sampled for problem zz_2040850932
finished samples sampling for zz_2040850932
 finished run 8 for problem zz_2040850932
 start run 9 for problem zz_2040850932
   start samplings 1000 for problem zz_2040850932
sampled for problem zz_2040850932
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_4944517933
finished samples sampling for zz_4944517933
 finished run 8 for problem zz_4944517933
 start run 9 for problem zz_4944517933
   start samplings 1000 for problem zz_4944517933
sampled for problem zz_4944517933
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_9073880962
finished samples sampling for zz_9073880962
 finished run 8 for problem zz_9073880962
 start run 9 for problem zz_9073880962
   start samplings 1000 for problem zz_9073880962
sampled for problem zz_9073880962
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_8821900078
finished samples sampling for zz_8821900078
 finished run 8 for problem zz_8821900078
 start run 9 for problem zz_8821900078
   start samplings 1000 for problem zz_8821900078
sampled for problem zz_8821900078
sampled for problem zz_1007359256
finished samples sampling for zz_1007359256
 finished run 8 for problem zz_1007359256
 start run 9 for problem zz_1007359256
   start samplings 1000 for problem zz_1007359256
sampled for problem zz_1007359256
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_2362810253
finished samples sampling for zz_2362810253
 finished run 9 for problem zz_2362810253
sampled for problem zz_0602320444
finished samples sampling for zz_0602320444
 finished run 9 for problem zz_0602320444
 Queue sizes: problems_to_submit = 16, answers_to_write = 0
sampled for problem zz_5578972868
finished samples sampling for zz_5578972868
 finished run 9 for problem zz_5578972868
 succesfully retrieved answer for problem {} zz_2362810253
 start working on problem zz_8355420116
 succesfully retrieved answer for problem {} zz_0602320444
 start working on problem zz_0675013443
 start writing answer for problem {} zz_2362810253
 start writing answer for problem {} zz_0602320444
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f79bba83f50>
 succesfully retrieved answer for problem {} zz_5578972868
 start working on problem zz_4978626801
 Queue sizes: problems_to_submit = 13, answers_to_write = 1
 problem zz_0675013443 will take can be sampled with a single run
 problem zz_0675013443 will be solved 1 times per run
 problem zz_8355420116 will take can be sampled with a single run
 problem zz_8355420116 will be solved 1 times per run
sampled for problem zz_2040850932
finished samples sampling for zz_2040850932
 finished run 9 for problem zz_2040850932
sampled for problem zz_4944517933
finished samples sampling for zz_4944517933
 finished run 9 for problem zz_4944517933
sampled for problem zz_9073880962
finished samples sampling for zz_9073880962
 finished run 9 for problem zz_9073880962
 start run 0 for problem zz_0675013443
   start samplings 1000 for problem zz_0675013443
sampled for problem zz_0675013443
 start run 0 for problem zz_8355420116
   start samplings 1000 for problem zz_8355420116
 Queue sizes: problems_to_submit = 13, answers_to_write = 1
sampled for problem zz_8355420116
 problem zz_4978626801 will take can be sampled with a single run
 problem zz_4978626801 will be solved 1 times per run
 succesfully retrieved answer for problem {} zz_2040850932
 start working on problem zz_4874220685
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f79bba83f50>
 succesfully retrieved answer for problem {} zz_4944517933
 start working on problem zz_0061234211
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f79bbafffe0>
 problem zz_4874220685 will take can be sampled with a single run
 problem zz_4874220685 will be solved 1 times per run
 succesfully retrieved answer for problem {} zz_9073880962
 start working on problem zz_6502573580
 Queue sizes: problems_to_submit = 10, answers_to_write = 4
 problem zz_0061234211 will take can be sampled with a single run
 problem zz_0061234211 will be solved 1 times per run
sampled for problem zz_1007359256
finished samples sampling for zz_1007359256
 finished run 9 for problem zz_1007359256
sampled for problem zz_8821900078
finished samples sampling for zz_8821900078
 finished run 9 for problem zz_8821900078
 start run 0 for problem zz_4978626801
   start samplings 1000 for problem zz_4978626801
sampled for problem zz_4978626801
 start run 0 for problem zz_4874220685
   start samplings 1000 for problem zz_4874220685
sampled for problem zz_4874220685
 problem zz_6502573580 will take can be sampled with a single run
 problem zz_6502573580 will be solved 1 times per run
 start run 0 for problem zz_0061234211
   start samplings 1000 for problem zz_0061234211
sampled for problem zz_0061234211
 succesfully retrieved answer for problem {} zz_1007359256
 start working on problem zz_5775954040
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f79bbafffe0>
 succesfully retrieved answer for problem {} zz_8821900078
 start working on problem zz_5860958113
 start run 0 for problem zz_6502573580
   start samplings 1000 for problem zz_6502573580
sampled for problem zz_6502573580
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
 problem zz_5775954040 will take can be sampled with a single run
 problem zz_5775954040 will be solved 1 times per run
 problem zz_5860958113 will take can be sampled with a single run
 problem zz_5860958113 will be solved 1 times per run
 start run 0 for problem zz_5775954040
   start samplings 1000 for problem zz_5775954040
sampled for problem zz_5775954040
 start run 0 for problem zz_5860958113
   start samplings 1000 for problem zz_5860958113
sampled for problem zz_5860958113
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
sampled for problem zz_0675013443
finished samples sampling for zz_0675013443
 finished run 0 for problem zz_0675013443
 start run 1 for problem zz_0675013443
   start samplings 1000 for problem zz_0675013443
sampled for problem zz_0675013443
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_9832808442
 start writing answer for problem {} zz_0698736184
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd6f42c6150>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd6f42c6150>
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
sampled for problem zz_6935795118
finished samples sampling for zz_6935795118
 finished run 0 for problem zz_6935795118
 start run 1 for problem zz_6935795118
   start samplings 1000 for problem zz_6935795118
sampled for problem zz_6935795118
sampled for problem zz_6255233176
finished samples sampling for zz_6255233176
 finished run 0 for problem zz_6255233176
 start run 1 for problem zz_6255233176
   start samplings 1000 for problem zz_6255233176
sampled for problem zz_6255233176
sampled for problem zz_2236080878
finished samples sampling for zz_2236080878
 finished run 0 for problem zz_2236080878
 start run 1 for problem zz_2236080878
   start samplings 1000 for problem zz_2236080878
sampled for problem zz_2236080878
sampled for problem zz_8530174265
finished samples sampling for zz_8530174265
 finished run 0 for problem zz_8530174265
 start run 1 for problem zz_8530174265
   start samplings 1000 for problem zz_8530174265
sampled for problem zz_8530174265
sampled for problem zz_0140728978
finished samples sampling for zz_0140728978
 finished run 0 for problem zz_0140728978
 start run 1 for problem zz_0140728978
   start samplings 1000 for problem zz_0140728978
sampled for problem zz_0140728978
sampled for problem zz_8100679620
finished samples sampling for zz_8100679620
 finished run 0 for problem zz_8100679620
 start run 1 for problem zz_8100679620
   start samplings 1000 for problem zz_8100679620
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
sampled for problem zz_8100679620
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6870904713
 start writing answer for problem {} zz_6827423238
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd6f42a7ec0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd6f42a7ec0>
sampled for problem zz_0487520058
finished samples sampling for zz_0487520058
 finished run 1 for problem zz_0487520058
 start run 2 for problem zz_0487520058
   start samplings 1000 for problem zz_0487520058
sampled for problem zz_0487520058
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0155935328
 start writing answer for problem {} zz_4355150326
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f32206b5910>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f32206b5910>
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
sampled for problem zz_2868668091
finished samples sampling for zz_2868668091
 finished run 1 for problem zz_2868668091
 start run 2 for problem zz_2868668091
   start samplings 1000 for problem zz_2868668091
sampled for problem zz_2868668091
sampled for problem zz_1916212122
finished samples sampling for zz_1916212122
 finished run 2 for problem zz_1916212122
 start run 3 for problem zz_1916212122
   start samplings 1000 for problem zz_1916212122
sampled for problem zz_1916212122
sampled for problem zz_7619482988
finished samples sampling for zz_7619482988
 finished run 1 for problem zz_7619482988
 start run 2 for problem zz_7619482988
   start samplings 1000 for problem zz_7619482988
sampled for problem zz_7619482988
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
sampled for problem zz_0609764094
finished samples sampling for zz_0609764094
 finished run 2 for problem zz_0609764094
 start run 3 for problem zz_0609764094
   start samplings 1000 for problem zz_0609764094
sampled for problem zz_0609764094
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
sampled for problem zz_5314019901
finished samples sampling for zz_5314019901
 finished run 2 for problem zz_5314019901
 start run 3 for problem zz_5314019901
   start samplings 1000 for problem zz_5314019901
sampled for problem zz_5314019901
sampled for problem zz_7629313757
finished samples sampling for zz_7629313757
 finished run 3 for problem zz_7629313757
 start run 4 for problem zz_7629313757
   start samplings 1000 for problem zz_7629313757
sampled for problem zz_7629313757
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
sampled for problem zz_0651999763
finished samples sampling for zz_0651999763
 finished run 2 for problem zz_0651999763
 start run 3 for problem zz_0651999763
   start samplings 1000 for problem zz_0651999763
sampled for problem zz_0651999763
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_9040679618
 start writing answer for problem {} zz_4833824559
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f32206b7980>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f32206b7980>
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4275832690
finished samples sampling for zz_4275832690
 finished run 3 for problem zz_4275832690
 start run 4 for problem zz_4275832690
   start samplings 1000 for problem zz_4275832690
   start samplings 1000 for problem zz_3614144584
sampled for problem zz_3614144584
sampled for problem zz_0960471698
finished samples sampling for zz_0960471698
 finished run 7 for problem zz_0960471698
 start run 8 for problem zz_0960471698
   start samplings 1000 for problem zz_0960471698
sampled for problem zz_0960471698
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_3761453891
finished samples sampling for zz_3761453891
 finished run 8 for problem zz_3761453891
 start run 9 for problem zz_3761453891
   start samplings 1000 for problem zz_3761453891
sampled for problem zz_3761453891
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_3729648486
finished samples sampling for zz_3729648486
 finished run 8 for problem zz_3729648486
 start run 9 for problem zz_3729648486
   start samplings 1000 for problem zz_3729648486
sampled for problem zz_3729648486
sampled for problem zz_8687733182
finished samples sampling for zz_8687733182
 finished run 8 for problem zz_8687733182
 start run 9 for problem zz_8687733182
   start samplings 1000 for problem zz_8687733182
sampled for problem zz_8687733182
sampled for problem zz_9571001973
finished samples sampling for zz_9571001973
 finished run 8 for problem zz_9571001973
 start run 9 for problem zz_9571001973
   start samplings 1000 for problem zz_9571001973
sampled for problem zz_9571001973
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_3237559296
finished samples sampling for zz_3237559296
 finished run 8 for problem zz_3237559296
 start run 9 for problem zz_3237559296
   start samplings 1000 for problem zz_3237559296
sampled for problem zz_3237559296
sampled for problem zz_1728207492
finished samples sampling for zz_1728207492
 finished run 8 for problem zz_1728207492
 start run 9 for problem zz_1728207492
   start samplings 1000 for problem zz_1728207492
sampled for problem zz_1728207492
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_3614144584
finished samples sampling for zz_3614144584
 finished run 8 for problem zz_3614144584
 start run 9 for problem zz_3614144584
   start samplings 1000 for problem zz_3614144584
sampled for problem zz_3614144584
sampled for problem zz_0960471698
finished samples sampling for zz_0960471698
 finished run 8 for problem zz_0960471698
 start run 9 for problem zz_0960471698
   start samplings 1000 for problem zz_0960471698
sampled for problem zz_0960471698
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_3761453891
finished samples sampling for zz_3761453891
 finished run 9 for problem zz_3761453891
sampled for problem zz_3729648486
finished samples sampling for zz_3729648486
 finished run 9 for problem zz_3729648486
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_8687733182
finished samples sampling for zz_8687733182
 finished run 9 for problem zz_8687733182
sampled for problem zz_9571001973
finished samples sampling for zz_9571001973
 finished run 9 for problem zz_9571001973
 succesfully retrieved answer for problem {} zz_3761453891
 start working on problem zz_0357328613
 succesfully retrieved answer for problem {} zz_3729648486
 start working on problem zz_9456648355
 succesfully retrieved answer for problem {} zz_8687733182
 start working on problem zz_5585617994
 succesfully retrieved answer for problem {} zz_9571001973
 start working on problem zz_2411961934
 start writing answer for problem {} zz_3761453891
 start writing answer for problem {} zz_3729648486
 Queue sizes: problems_to_submit = 11, answers_to_write = 2
 problem zz_0357328613 will take can be sampled with a single run
 problem zz_0357328613 will be solved 1 times per run
 problem zz_9456648355 will take can be sampled with a single run
 problem zz_9456648355 will be solved 1 times per run
sampled for problem zz_3237559296
finished samples sampling for zz_3237559296
 finished run 9 for problem zz_3237559296
 Queue sizes: problems_to_submit = 11, answers_to_write = 2
sampled for problem zz_1728207492
finished samples sampling for zz_1728207492
 finished run 9 for problem zz_1728207492
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5861aa1df0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5861aea1e0>
 problem zz_5585617994 will take can be sampled with a single run
 problem zz_5585617994 will be solved 1 times per run
 start run 0 for problem zz_0357328613
   start samplings 1000 for problem zz_0357328613
sampled for problem zz_0357328613
sampled for problem zz_0960471698
finished samples sampling for zz_0960471698
 finished run 9 for problem zz_0960471698
sampled for problem zz_3614144584
finished samples sampling for zz_3614144584
 finished run 9 for problem zz_3614144584
 problem zz_2411961934 will take can be sampled with a single run
 problem zz_2411961934 will be solved 1 times per run
 succesfully retrieved answer for problem {} zz_3237559296
 start working on problem zz_8486709234
 start run 0 for problem zz_9456648355
   start samplings 1000 for problem zz_9456648355
sampled for problem zz_9456648355
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5861aea1e0>
 Queue sizes: problems_to_submit = 10, answers_to_write = 3
 problem zz_8486709234 will take can be sampled with a single run
 problem zz_8486709234 will be solved 1 times per run
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5861aa1df0>
 succesfully retrieved answer for problem {} zz_1728207492
 start working on problem zz_0229631392
 start run 0 for problem zz_5585617994
   start samplings 1000 for problem zz_5585617994
sampled for problem zz_5585617994
 succesfully retrieved answer for problem {} zz_0960471698
 start working on problem zz_5919623735
 succesfully retrieved answer for problem {} zz_3614144584
 start working on problem zz_2106543518
 problem zz_0229631392 will take can be sampled with a single run
 problem zz_0229631392 will be solved 1 times per run
 start run 0 for problem zz_2411961934
   start samplings 1000 for problem zz_2411961934
sampled for problem zz_2411961934
 Queue sizes: problems_to_submit = 7, answers_to_write = 6
 problem zz_5919623735 will take can be sampled with a single run
 problem zz_5919623735 will be solved 1 times per run
 start run 0 for problem zz_8486709234
   start samplings 1000 for problem zz_8486709234
 Queue sizes: problems_to_submit = 7, answers_to_write = 6
sampled for problem zz_8486709234
 problem zz_2106543518 will take can be sampled with a single run
 problem zz_2106543518 will be solved 1 times per run
 start run 0 for problem zz_0229631392
   start samplings 1000 for problem zz_0229631392
sampled for problem zz_0229631392
 start run 0 for problem zz_5919623735
   start samplings 1000 for problem zz_5919623735
sampled for problem zz_5919623735
 start run 0 for problem zz_2106543518
   start samplings 1000 for problem zz_2106543518
sampled for problem zz_2106543518
 Queue sizes: problems_to_submit = 7, answers_to_write = 6
 Queue sizes: problems_to_submit = 7, answers_to_write = 6
 Queue sizes: problems_to_submit = 7, answers_to_write = 6
sampled for problem zz_8355420116
finished samples sampling for zz_8355420116
 finished run 0 for problem zz_8355420116
 start run 1 for problem zz_8355420116
   start samplings 1000 for problem zz_8355420116
sampled for problem zz_8355420116
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
sampled for problem zz_4978626801
finished samples sampling for zz_4978626801
 finished run 0 for problem zz_4978626801
 start run 1 for problem zz_4978626801
   start samplings 1000 for problem zz_4978626801
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
sampled for problem zz_4978626801
sampled for problem zz_4874220685
finished samples sampling for zz_4874220685
 finished run 0 for problem zz_4874220685
 start run 1 for problem zz_4874220685
   start samplings 1000 for problem zz_4874220685
sampled for problem zz_4874220685
sampled for problem zz_0061234211
finished samples sampling for zz_0061234211
 finished run 0 for problem zz_0061234211
 start run 1 for problem zz_0061234211
   start samplings 1000 for problem zz_0061234211
sampled for problem zz_0061234211
sampled for problem zz_6502573580
finished samples sampling for zz_6502573580
 finished run 0 for problem zz_6502573580
 start run 1 for problem zz_6502573580
   start samplings 1000 for problem zz_6502573580
sampled for problem zz_6502573580
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
sampled for problem zz_5775954040
finished samples sampling for zz_5775954040
 finished run 0 for problem zz_5775954040
 start run 1 for problem zz_5775954040
   start samplings 1000 for problem zz_5775954040
sampled for problem zz_5775954040
sampled for problem zz_5860958113
finished samples sampling for zz_5860958113
 finished run 0 for problem zz_5860958113
 start run 1 for problem zz_5860958113
   start samplings 1000 for problem zz_5860958113
sampled for problem zz_5860958113
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 6
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0602320444
 start writing answer for problem {} zz_5578972868
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f79b8595af0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f79b8595af0>
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
sampled for problem zz_0675013443
finished samples sampling for zz_0675013443
 finished run 1 for problem zz_0675013443
 start run 2 for problem zz_0675013443
   start samplings 1000 for problem zz_0675013443
sampled for problem zz_0675013443
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
sampled for problem zz_8355420116
finished samples sampling for zz_8355420116
 finished run 1 for problem zz_8355420116
 start run 2 for problem zz_8355420116
   start samplings 1000 for problem zz_8355420116
sampled for problem zz_8355420116
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 start run 8 for problem zz_7338686412
   start samplings 1000 for problem zz_7338686412
sampled for problem zz_7338686412
sampled for problem zz_5060062432
finished samples sampling for zz_5060062432
 finished run 7 for problem zz_5060062432
 start run 8 for problem zz_5060062432
   start samplings 1000 for problem zz_5060062432
sampled for problem zz_5060062432
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_8522227065
finished samples sampling for zz_8522227065
 finished run 8 for problem zz_8522227065
 start run 9 for problem zz_8522227065
   start samplings 1000 for problem zz_8522227065
sampled for problem zz_8522227065
sampled for problem zz_8519333792
finished samples sampling for zz_8519333792
 finished run 8 for problem zz_8519333792
 start run 9 for problem zz_8519333792
   start samplings 1000 for problem zz_8519333792
sampled for problem zz_8519333792
sampled for problem zz_9188041178
finished samples sampling for zz_9188041178
 finished run 8 for problem zz_9188041178
 start run 9 for problem zz_9188041178
   start samplings 1000 for problem zz_9188041178
sampled for problem zz_9188041178
sampled for problem zz_9358651368
finished samples sampling for zz_9358651368
 finished run 8 for problem zz_9358651368
 start run 9 for problem zz_9358651368
   start samplings 1000 for problem zz_9358651368
sampled for problem zz_9358651368
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_5478785105
finished samples sampling for zz_5478785105
 finished run 8 for problem zz_5478785105
 start run 9 for problem zz_5478785105
   start samplings 1000 for problem zz_5478785105
sampled for problem zz_5478785105
sampled for problem zz_9027338350
finished samples sampling for zz_9027338350
 finished run 8 for problem zz_9027338350
 start run 9 for problem zz_9027338350
   start samplings 1000 for problem zz_9027338350
sampled for problem zz_9027338350
sampled for problem zz_7338686412
finished samples sampling for zz_7338686412
 finished run 8 for problem zz_7338686412
 start run 9 for problem zz_7338686412
   start samplings 1000 for problem zz_7338686412
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_7338686412
sampled for problem zz_5060062432
finished samples sampling for zz_5060062432
 finished run 8 for problem zz_5060062432
 start run 9 for problem zz_5060062432
   start samplings 1000 for problem zz_5060062432
sampled for problem zz_5060062432
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
 Queue sizes: problems_to_submit = 15, answers_to_write = 0
sampled for problem zz_8522227065
finished samples sampling for zz_8522227065
 finished run 9 for problem zz_8522227065
 succesfully retrieved answer for problem {} zz_8522227065
 start working on problem zz_5387552259
 start writing answer for problem {} zz_8522227065
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5b4c6b5b20>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5b4c6b5b20>
 Queue sizes: problems_to_submit = 14, answers_to_write = 0
sampled for problem zz_8519333792
finished samples sampling for zz_8519333792
 finished run 9 for problem zz_8519333792
 problem zz_5387552259 will take can be sampled with a single run
 problem zz_5387552259 will be solved 1 times per run
 succesfully retrieved answer for problem {} zz_8519333792
 start working on problem zz_9812323767
sampled for problem zz_9188041178
finished samples sampling for zz_9188041178
 finished run 9 for problem zz_9188041178
sampled for problem zz_9358651368
finished samples sampling for zz_9358651368
 finished run 9 for problem zz_9358651368
 start run 0 for problem zz_5387552259
   start samplings 1000 for problem zz_5387552259
sampled for problem zz_5387552259
 start writing answer for problem {} zz_8519333792
 succesfully retrieved answer for problem {} zz_9188041178
 start working on problem zz_8705643469
 succesfully retrieved answer for problem {} zz_9358651368
 start working on problem zz_1183798611
 Queue sizes: problems_to_submit = 11, answers_to_write = 2
 problem zz_9812323767 will take can be sampled with a single run
 problem zz_9812323767 will be solved 1 times per run
sampled for problem zz_9027338350
finished samples sampling for zz_9027338350
 finished run 9 for problem zz_9027338350
sampled for problem zz_5478785105
finished samples sampling for zz_5478785105
 finished run 9 for problem zz_5478785105
sampled for problem zz_7338686412
finished samples sampling for zz_7338686412
 finished run 9 for problem zz_7338686412
 Queue sizes: problems_to_submit = 11, answers_to_write = 2
 problem zz_8705643469 will take can be sampled with a single run
 problem zz_8705643469 will be solved 1 times per run
sampled for problem zz_5060062432
finished samples sampling for zz_5060062432
 finished run 9 for problem zz_5060062432
 problem zz_1183798611 will take can be sampled with a single run
 problem zz_1183798611 will be solved 1 times per run
 succesfully retrieved answer for problem {} zz_9027338350
 start working on problem zz_4337938137
 start run 0 for problem zz_9812323767
   start samplings 1000 for problem zz_9812323767
sampled for problem zz_9812323767
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5b4c1be7e0>
 problem zz_4337938137 will take can be sampled with a single run
 problem zz_4337938137 will be solved 1 times per run
 succesfully retrieved answer for problem {} zz_5478785105
 start working on problem zz_6252892828
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5b4c1be7e0>
 succesfully retrieved answer for problem {} zz_7338686412
 start working on problem zz_1663139989
 start run 0 for problem zz_8705643469
   start samplings 1000 for problem zz_8705643469
sampled for problem zz_8705643469
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
 succesfully retrieved answer for problem {} zz_5060062432
 start working on problem zz_8342877442
 problem zz_6252892828 will take can be sampled with a single run
 problem zz_6252892828 will be solved 1 times per run
 start run 0 for problem zz_1183798611
   start samplings 1000 for problem zz_1183798611
sampled for problem zz_1183798611
 problem zz_1663139989 will take can be sampled with a single run
 problem zz_1663139989 will be solved 1 times per run
 problem zz_8342877442 will take can be sampled with a single run
 problem zz_8342877442 will be solved 1 times per run
 start run 0 for problem zz_4337938137
   start samplings 1000 for problem zz_4337938137
sampled for problem zz_4337938137
 start run 0 for problem zz_6252892828
   start samplings 1000 for problem zz_6252892828
sampled for problem zz_6252892828
 start run 0 for problem zz_1663139989
   start samplings 1000 for problem zz_1663139989
sampled for problem zz_1663139989
 Queue sizes: problems_to_submit = 7, answers_to_write = 6
 start run 0 for problem zz_8342877442
   start samplings 1000 for problem zz_8342877442
sampled for problem zz_8342877442
 Queue sizes: problems_to_submit = 7, answers_to_write = 6
sampled for problem zz_5387552259
finished samples sampling for zz_5387552259
 finished run 0 for problem zz_5387552259
 start run 1 for problem zz_5387552259
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
sampled for problem zz_1208695640
finished samples sampling for zz_1208695640
 finished run 1 for problem zz_1208695640
 start run 2 for problem zz_1208695640
   start samplings 1000 for problem zz_1208695640
sampled for problem zz_1208695640
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
sampled for problem zz_6935795118
finished samples sampling for zz_6935795118
 finished run 1 for problem zz_6935795118
 start run 2 for problem zz_6935795118
   start samplings 1000 for problem zz_6935795118
sampled for problem zz_6935795118
sampled for problem zz_6255233176
finished samples sampling for zz_6255233176
 finished run 1 for problem zz_6255233176
 start run 2 for problem zz_6255233176
   start samplings 1000 for problem zz_6255233176
sampled for problem zz_6255233176
sampled for problem zz_2236080878
finished samples sampling for zz_2236080878
 finished run 1 for problem zz_2236080878
 start run 2 for problem zz_2236080878
   start samplings 1000 for problem zz_2236080878
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
sampled for problem zz_2236080878
sampled for problem zz_8530174265
finished samples sampling for zz_8530174265
 finished run 1 for problem zz_8530174265
 start run 2 for problem zz_8530174265
   start samplings 1000 for problem zz_8530174265
sampled for problem zz_8530174265
sampled for problem zz_0140728978
finished samples sampling for zz_0140728978
 finished run 1 for problem zz_0140728978
 start run 2 for problem zz_0140728978
   start samplings 1000 for problem zz_0140728978
sampled for problem zz_0140728978
sampled for problem zz_8100679620
finished samples sampling for zz_8100679620
 finished run 1 for problem zz_8100679620
 start run 2 for problem zz_8100679620
   start samplings 1000 for problem zz_8100679620
sampled for problem zz_8100679620
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0698736184
 start writing answer for problem {} zz_9480036090
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd6f42a7260>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd6f42a7260>
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
sampled for problem zz_0487520058
finished samples sampling for zz_0487520058
 finished run 2 for problem zz_0487520058
 start run 3 for problem zz_0487520058
   start samplings 1000 for problem zz_0487520058
sampled for problem zz_0487520058
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_1208695640
finished samples sampling for zz_1208695640
 finished run 2 for problem zz_1208695640
 start run 3 for problem zz_1208695640
   start samplings 1000 for problem zz_1208695640
sampled for problem zz_1208695640
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4f82462d0>
 succesfully retrieved answer for problem {} zz_2959573595
 start working on problem zz_5347903740
 succesfully retrieved answer for problem {} zz_5309607385
 start working on problem zz_0437237586
sampled for problem zz_5096381632
finished samples sampling for zz_5096381632
 finished run 9 for problem zz_5096381632
 Queue sizes: problems_to_submit = 10, answers_to_write = 3
 problem zz_3242687376 will take can be sampled with a single run
 problem zz_3242687376 will be solved 1 times per run
 succesfully retrieved answer for problem {} zz_5096381632
 start working on problem zz_4160526692
 problem zz_5125038959 will take can be sampled with a single run
 problem zz_5125038959 will be solved 1 times per run
sampled for problem zz_5249775500
finished samples sampling for zz_5249775500
 finished run 9 for problem zz_5249775500
 Queue sizes: problems_to_submit = 9, answers_to_write = 4
 problem zz_5347903740 will take can be sampled with a single run
 problem zz_5347903740 will be solved 1 times per run
 problem zz_0437237586 will take can be sampled with a single run
 problem zz_0437237586 will be solved 1 times per run
 start run 0 for problem zz_3242687376
   start samplings 1000 for problem zz_3242687376
sampled for problem zz_3242687376
 problem zz_4160526692 will take can be sampled with a single run
 problem zz_4160526692 will be solved 1 times per run
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4f82462d0>
sampled for problem zz_3451907868
finished samples sampling for zz_3451907868
 finished run 0 for problem zz_3451907868
 start run 1 for problem zz_3451907868
   start samplings 1000 for problem zz_3451907868
sampled for problem zz_3451907868
 start run 0 for problem zz_5125038959
   start samplings 1000 for problem zz_5125038959
sampled for problem zz_5125038959
 succesfully retrieved answer for problem {} zz_5249775500
 start working on problem zz_6514437321
 start run 0 for problem zz_5347903740
   start samplings 1000 for problem zz_5347903740
sampled for problem zz_5347903740
 start run 0 for problem zz_0437237586
   start samplings 1000 for problem zz_0437237586
sampled for problem zz_0437237586
 start run 0 for problem zz_4160526692
   start samplings 1000 for problem zz_4160526692
sampled for problem zz_4160526692
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
 problem zz_6514437321 will take can be sampled with a single run
 problem zz_6514437321 will be solved 1 times per run
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
 start run 0 for problem zz_6514437321
   start samplings 1000 for problem zz_6514437321
sampled for problem zz_6514437321
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
sampled for problem zz_8267963959
finished samples sampling for zz_8267963959
 finished run 0 for problem zz_8267963959
 start run 1 for problem zz_8267963959
   start samplings 1000 for problem zz_8267963959
sampled for problem zz_8267963959
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
sampled for problem zz_3242687376
finished samples sampling for zz_3242687376
 finished run 0 for problem zz_3242687376
 start run 1 for problem zz_3242687376
   start samplings 1000 for problem zz_3242687376
sampled for problem zz_3242687376
sampled for problem zz_3451907868
finished samples sampling for zz_3451907868
 finished run 1 for problem zz_3451907868
 start run 2 for problem zz_3451907868
   start samplings 1000 for problem zz_3451907868
sampled for problem zz_3451907868
sampled for problem zz_5125038959
finished samples sampling for zz_5125038959
 finished run 0 for problem zz_5125038959
 start run 1 for problem zz_5125038959
   start samplings 1000 for problem zz_5125038959
sampled for problem zz_5125038959
sampled for problem zz_5347903740
finished samples sampling for zz_5347903740
 finished run 0 for problem zz_5347903740
 start run 1 for problem zz_5347903740
   start samplings 1000 for problem zz_5347903740
sampled for problem zz_5347903740
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
sampled for problem zz_0437237586
finished samples sampling for zz_0437237586
 finished run 0 for problem zz_0437237586
 start run 1 for problem zz_0437237586
   start samplings 1000 for problem zz_0437237586
sampled for problem zz_0437237586
sampled for problem zz_4160526692
finished samples sampling for zz_4160526692
 finished run 0 for problem zz_4160526692
 start run 1 for problem zz_4160526692
   start samplings 1000 for problem zz_4160526692
sampled for problem zz_4160526692
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
sampled for problem zz_6514437321
finished samples sampling for zz_6514437321
 finished run 0 for problem zz_6514437321
 start run 1 for problem zz_6514437321
   start samplings 1000 for problem zz_6514437321
sampled for problem zz_6514437321
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_3545900650
 start writing answer for problem {} zz_6575155837
elif concurrent.futures.thread.ThreadPoolExecutor
sampled for problem zz_4275832690
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2868668091
finished samples sampling for zz_2868668091
 finished run 2 for problem zz_2868668091
 start run 3 for problem zz_2868668091
   start samplings 1000 for problem zz_2868668091
sampled for problem zz_2868668091
sampled for problem zz_1916212122
finished samples sampling for zz_1916212122
 finished run 3 for problem zz_1916212122
 start run 4 for problem zz_1916212122
   start samplings 1000 for problem zz_1916212122
sampled for problem zz_1916212122
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_7619482988
finished samples sampling for zz_7619482988
 finished run 2 for problem zz_7619482988
 start run 3 for problem zz_7619482988
   start samplings 1000 for problem zz_7619482988
sampled for problem zz_7619482988
sampled for problem zz_0609764094
finished samples sampling for zz_0609764094
 finished run 3 for problem zz_0609764094
 start run 4 for problem zz_0609764094
   start samplings 1000 for problem zz_0609764094
sampled for problem zz_0609764094
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_5314019901
finished samples sampling for zz_5314019901
 finished run 3 for problem zz_5314019901
 start run 4 for problem zz_5314019901
   start samplings 1000 for problem zz_5314019901
sampled for problem zz_5314019901
sampled for problem zz_7629313757
finished samples sampling for zz_7629313757
 finished run 4 for problem zz_7629313757
 start run 5 for problem zz_7629313757
   start samplings 1000 for problem zz_7629313757
sampled for problem zz_7629313757
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_4355150326
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0651999763
finished samples sampling for zz_0651999763
 finished run 3 for problem zz_0651999763
 start run 4 for problem zz_0651999763
   start samplings 1000 for problem zz_0651999763
sampled for problem zz_0651999763
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_4833824559
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4275832690
finished samples sampling for zz_4275832690
 finished run 4 for problem zz_4275832690
 start run 5 for problem zz_4275832690
   start samplings 1000 for problem zz_4275832690
sampled for problem zz_4275832690
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2868668091
finished samples sampling for zz_2868668091
 finished run 3 for problem zz_2868668091
 start run 4 for problem zz_2868668091
   start samplings 1000 for problem zz_2868668091
sampled for problem zz_2868668091
sampled for problem zz_1916212122
finished samples sampling for zz_1916212122
 finished run 4 for problem zz_1916212122
 start run 5 for problem zz_1916212122
 Queue sizes: problems_to_submit = 7, answers_to_write = 6
sampled for problem zz_0357328613
finished samples sampling for zz_0357328613
 finished run 0 for problem zz_0357328613
 start run 1 for problem zz_0357328613
   start samplings 1000 for problem zz_0357328613
sampled for problem zz_0357328613
sampled for problem zz_9456648355
finished samples sampling for zz_9456648355
 finished run 0 for problem zz_9456648355
 start run 1 for problem zz_9456648355
   start samplings 1000 for problem zz_9456648355
sampled for problem zz_9456648355
 Queue sizes: problems_to_submit = 7, answers_to_write = 6
sampled for problem zz_5585617994
finished samples sampling for zz_5585617994
 finished run 0 for problem zz_5585617994
 start run 1 for problem zz_5585617994
   start samplings 1000 for problem zz_5585617994
sampled for problem zz_5585617994
 Queue sizes: problems_to_submit = 7, answers_to_write = 6
sampled for problem zz_2411961934
finished samples sampling for zz_2411961934
 finished run 0 for problem zz_2411961934
 start run 1 for problem zz_2411961934
   start samplings 1000 for problem zz_2411961934
sampled for problem zz_2411961934
sampled for problem zz_8486709234
finished samples sampling for zz_8486709234
 finished run 0 for problem zz_8486709234
 start run 1 for problem zz_8486709234
   start samplings 1000 for problem zz_8486709234
sampled for problem zz_8486709234
 Queue sizes: problems_to_submit = 7, answers_to_write = 6
sampled for problem zz_0229631392
finished samples sampling for zz_0229631392
 finished run 0 for problem zz_0229631392
 start run 1 for problem zz_0229631392
   start samplings 1000 for problem zz_0229631392
sampled for problem zz_0229631392
sampled for problem zz_5919623735
finished samples sampling for zz_5919623735
 finished run 0 for problem zz_5919623735
 start run 1 for problem zz_5919623735
   start samplings 1000 for problem zz_5919623735
sampled for problem zz_5919623735
sampled for problem zz_2106543518
finished samples sampling for zz_2106543518
 finished run 0 for problem zz_2106543518
 start run 1 for problem zz_2106543518
   start samplings 1000 for problem zz_2106543518
sampled for problem zz_2106543518
 Queue sizes: problems_to_submit = 7, answers_to_write = 6
 Queue sizes: problems_to_submit = 7, answers_to_write = 6
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 7, answers_to_write = 6
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_3761453891
 start writing answer for problem {} zz_8687733182
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5860582360>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5860582360>
 Queue sizes: problems_to_submit = 7, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 7, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_0357328613
finished samples sampling for zz_0357328613
 finished run 1 for problem zz_0357328613
 start run 2 for problem zz_0357328613
   start samplings 1000 for problem zz_0357328613
sampled for problem zz_0357328613
_variables <class 'dimod.variables.Variables'>
   start samplings 1000 for problem zz_5387552259
sampled for problem zz_5387552259
 Queue sizes: problems_to_submit = 7, answers_to_write = 6
 Queue sizes: problems_to_submit = 7, answers_to_write = 6
 Queue sizes: problems_to_submit = 7, answers_to_write = 6
sampled for problem zz_9812323767
finished samples sampling for zz_9812323767
 finished run 0 for problem zz_9812323767
 start run 1 for problem zz_9812323767
   start samplings 1000 for problem zz_9812323767
sampled for problem zz_9812323767
 Queue sizes: problems_to_submit = 7, answers_to_write = 6
 Queue sizes: problems_to_submit = 7, answers_to_write = 6
sampled for problem zz_8705643469
finished samples sampling for zz_8705643469
 finished run 0 for problem zz_8705643469
 start run 1 for problem zz_8705643469
   start samplings 1000 for problem zz_8705643469
sampled for problem zz_8705643469
 Queue sizes: problems_to_submit = 7, answers_to_write = 6
sampled for problem zz_1183798611
finished samples sampling for zz_1183798611
 finished run 0 for problem zz_1183798611
 start run 1 for problem zz_1183798611
   start samplings 1000 for problem zz_1183798611
sampled for problem zz_1183798611
sampled for problem zz_4337938137
finished samples sampling for zz_4337938137
 finished run 0 for problem zz_4337938137
 start run 1 for problem zz_4337938137
   start samplings 1000 for problem zz_4337938137
sampled for problem zz_4337938137
sampled for problem zz_6252892828
finished samples sampling for zz_6252892828
 finished run 0 for problem zz_6252892828
 start run 1 for problem zz_6252892828
   start samplings 1000 for problem zz_6252892828
sampled for problem zz_6252892828
sampled for problem zz_1663139989
finished samples sampling for zz_1663139989
 finished run 0 for problem zz_1663139989
 start run 1 for problem zz_1663139989
   start samplings 1000 for problem zz_1663139989
sampled for problem zz_1663139989
 Queue sizes: problems_to_submit = 7, answers_to_write = 6
sampled for problem zz_8342877442
finished samples sampling for zz_8342877442
 finished run 0 for problem zz_8342877442
 start run 1 for problem zz_8342877442
   start samplings 1000 for problem zz_8342877442
sampled for problem zz_8342877442
 Queue sizes: problems_to_submit = 7, answers_to_write = 6
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 7, answers_to_write = 6
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8522227065
 start writing answer for problem {} zz_9188041178
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5b4c14a1b0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5b4c14a1b0>
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_5387552259
finished samples sampling for zz_5387552259
 finished run 1 for problem zz_5387552259
 start run 2 for problem zz_5387552259
   start samplings 1000 for problem zz_5387552259
 finished writing answer for problem {} zz_2362810253
 start writing answer for problem {} zz_2040850932
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f79b8594500>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f79b8594500>
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
sampled for problem zz_4978626801
finished samples sampling for zz_4978626801
 finished run 1 for problem zz_4978626801
 start run 2 for problem zz_4978626801
   start samplings 1000 for problem zz_4978626801
sampled for problem zz_4978626801
sampled for problem zz_4874220685
finished samples sampling for zz_4874220685
 finished run 1 for problem zz_4874220685
 start run 2 for problem zz_4874220685
   start samplings 1000 for problem zz_4874220685
sampled for problem zz_4874220685
sampled for problem zz_0061234211
finished samples sampling for zz_0061234211
 finished run 1 for problem zz_0061234211
 start run 2 for problem zz_0061234211
   start samplings 1000 for problem zz_0061234211
sampled for problem zz_0061234211
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
sampled for problem zz_6502573580
finished samples sampling for zz_6502573580
 finished run 1 for problem zz_6502573580
 start run 2 for problem zz_6502573580
   start samplings 1000 for problem zz_6502573580
sampled for problem zz_6502573580
sampled for problem zz_5775954040
finished samples sampling for zz_5775954040
 finished run 1 for problem zz_5775954040
 start run 2 for problem zz_5775954040
   start samplings 1000 for problem zz_5775954040
sampled for problem zz_5775954040
sampled for problem zz_5860958113
finished samples sampling for zz_5860958113
 finished run 1 for problem zz_5860958113
 start run 2 for problem zz_5860958113
   start samplings 1000 for problem zz_5860958113
sampled for problem zz_5860958113
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_5578972868
 start writing answer for problem {} zz_4944517933
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f79b85468a0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f79b85468a0>
sampled for problem zz_0675013443
finished samples sampling for zz_0675013443
 finished run 2 for problem zz_0675013443
 start run 3 for problem zz_0675013443
   start samplings 1000 for problem zz_0675013443
sampled for problem zz_0675013443
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
sampled for problem zz_8355420116
finished samples sampling for zz_8355420116
 finished run 2 for problem zz_8355420116
 start run 3 for problem zz_8355420116
   start samplings 1000 for problem zz_8355420116
sampled for problem zz_8355420116
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
sampled for problem zz_4978626801
finished samples sampling for zz_4978626801
 finished run 2 for problem zz_4978626801
 start run 3 for problem zz_4978626801
   start samplings 1000 for problem zz_4978626801
sampled for problem zz_4978626801
sampled for problem zz_4874220685
finished samples sampling for zz_4874220685
 finished run 2 for problem zz_4874220685
 start run 3 for problem zz_4874220685
   start samplings 1000 for problem zz_4874220685
sampled for problem zz_4874220685
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
sampled for problem zz_6502573580
finished samples sampling for zz_6502573580
 finished run 2 for problem zz_6502573580
 start run 3 for problem zz_6502573580
   start samplings 1000 for problem zz_6502573580
sampled for problem zz_6502573580
sampled for problem zz_0061234211
finished samples sampling for zz_0061234211
 finished run 2 for problem zz_0061234211
 start run 3 for problem zz_0061234211
   start samplings 1000 for problem zz_0061234211
sampled for problem zz_0061234211
sampled for problem zz_5775954040
finished samples sampling for zz_5775954040
 finished run 2 for problem zz_5775954040
 start run 3 for problem zz_5775954040
   start samplings 1000 for problem zz_5775954040
sampled for problem zz_5775954040
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
sampled for problem zz_5860958113
finished samples sampling for zz_5860958113
 finished run 2 for problem zz_5860958113
 start run 3 for problem zz_5860958113
   start samplings 1000 for problem zz_5860958113
sampled for problem zz_5860958113
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4f8295160>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4f8295160>
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
sampled for problem zz_8267963959
finished samples sampling for zz_8267963959
 finished run 1 for problem zz_8267963959
 start run 2 for problem zz_8267963959
   start samplings 1000 for problem zz_8267963959
sampled for problem zz_8267963959
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_3242687376
finished samples sampling for zz_3242687376
 finished run 1 for problem zz_3242687376
 start run 2 for problem zz_3242687376
   start samplings 1000 for problem zz_3242687376
sampled for problem zz_3242687376
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6731131214
 start writing answer for problem {} zz_2959573595
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4f8283800>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4f8283800>
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
sampled for problem zz_3451907868
finished samples sampling for zz_3451907868
 finished run 2 for problem zz_3451907868
 start run 3 for problem zz_3451907868
   start samplings 1000 for problem zz_3451907868
sampled for problem zz_3451907868
sampled for problem zz_5125038959
finished samples sampling for zz_5125038959
 finished run 1 for problem zz_5125038959
 start run 2 for problem zz_5125038959
   start samplings 1000 for problem zz_5125038959
sampled for problem zz_5125038959
sampled for problem zz_5347903740
finished samples sampling for zz_5347903740
 finished run 1 for problem zz_5347903740
 start run 2 for problem zz_5347903740
   start samplings 1000 for problem zz_5347903740
sampled for problem zz_5347903740
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
sampled for problem zz_0437237586
finished samples sampling for zz_0437237586
 finished run 1 for problem zz_0437237586
 start run 2 for problem zz_0437237586
   start samplings 1000 for problem zz_0437237586
sampled for problem zz_0437237586
sampled for problem zz_4160526692
finished samples sampling for zz_4160526692
 finished run 1 for problem zz_4160526692
 start run 2 for problem zz_4160526692
   start samplings 1000 for problem zz_4160526692
sampled for problem zz_4160526692
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
sampled for problem zz_6514437321
finished samples sampling for zz_6514437321
 finished run 1 for problem zz_6514437321
 start run 2 for problem zz_6514437321
   start samplings 1000 for problem zz_6514437321
sampled for problem zz_6514437321
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
sampled for problem zz_8267963959
finished samples sampling for zz_8267963959
 finished run 2 for problem zz_8267963959
 start run 3 for problem zz_8267963959
   start samplings 1000 for problem zz_8267963959
sampled for problem zz_8267963959
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6827423238
 start writing answer for problem {} zz_5853151821
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd6f426a0c0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd6f426a0c0>
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
sampled for problem zz_6935795118
finished samples sampling for zz_6935795118
 finished run 2 for problem zz_6935795118
 start run 3 for problem zz_6935795118
   start samplings 1000 for problem zz_6935795118
sampled for problem zz_6935795118
sampled for problem zz_6255233176
finished samples sampling for zz_6255233176
 finished run 2 for problem zz_6255233176
 start run 3 for problem zz_6255233176
   start samplings 1000 for problem zz_6255233176
sampled for problem zz_6255233176
sampled for problem zz_2236080878
finished samples sampling for zz_2236080878
 finished run 2 for problem zz_2236080878
 start run 3 for problem zz_2236080878
   start samplings 1000 for problem zz_2236080878
sampled for problem zz_2236080878
sampled for problem zz_8530174265
finished samples sampling for zz_8530174265
 finished run 2 for problem zz_8530174265
 start run 3 for problem zz_8530174265
   start samplings 1000 for problem zz_8530174265
sampled for problem zz_8530174265
sampled for problem zz_0140728978
finished samples sampling for zz_0140728978
 finished run 2 for problem zz_0140728978
 start run 3 for problem zz_0140728978
   start samplings 1000 for problem zz_0140728978
sampled for problem zz_0140728978
sampled for problem zz_8100679620
finished samples sampling for zz_8100679620
 finished run 2 for problem zz_8100679620
 start run 3 for problem zz_8100679620
   start samplings 1000 for problem zz_8100679620
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
sampled for problem zz_8100679620
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
sampled for problem zz_0487520058
finished samples sampling for zz_0487520058
 finished run 3 for problem zz_0487520058
 start run 4 for problem zz_0487520058
   start samplings 1000 for problem zz_0487520058
sampled for problem zz_0487520058
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_9480036090
 start writing answer for problem {} zz_6710953139
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd6f4284c50>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd6f4284c50>
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
sampled for problem zz_1208695640
finished samples sampling for zz_1208695640
 finished run 3 for problem zz_1208695640
 start run 4 for problem zz_1208695640
   start samplings 1000 for problem zz_1208695640
sampled for problem zz_1208695640
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
sampled for problem zz_6935795118
finished samples sampling for zz_6935795118
 finished run 3 for problem zz_6935795118
 start run 4 for problem zz_6935795118
   start samplings 1000 for problem zz_6935795118
sampled for problem zz_6935795118
sampled for problem zz_8530174265
finished samples sampling for zz_8530174265
 finished run 3 for problem zz_8530174265
 start run 4 for problem zz_8530174265
   start samplings 1000 for problem zz_8530174265
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
sampled for problem zz_8530174265
sampled for problem zz_6255233176
finished samples sampling for zz_6255233176
 finished run 3 for problem zz_6255233176
 start run 4 for problem zz_6255233176
   start samplings 1000 for problem zz_6255233176
sampled for problem zz_6255233176
sampled for problem zz_0140728978
finished samples sampling for zz_0140728978
 finished run 3 for problem zz_0140728978
 start run 4 for problem zz_0140728978
   start samplings 1000 for problem zz_0140728978
sampled for problem zz_0140728978
sampled for problem zz_2236080878
finished samples sampling for zz_2236080878
 finished run 3 for problem zz_2236080878
 start run 4 for problem zz_2236080878
   start samplings 1000 for problem zz_2236080878
sampled for problem zz_2236080878
sampled for problem zz_8100679620
finished samples sampling for zz_8100679620
 finished run 3 for problem zz_8100679620
 start run 4 for problem zz_8100679620
   start samplings 1000 for problem zz_8100679620
sampled for problem zz_8100679620
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
sampled for problem zz_7781104199
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_7625459406
finished samples sampling for zz_7625459406
 finished run 5 for problem zz_7625459406
 start run 6 for problem zz_7625459406
   start samplings 1000 for problem zz_7625459406
sampled for problem zz_7625459406
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4413425408
finished samples sampling for zz_4413425408
 finished run 4 for problem zz_4413425408
 start run 5 for problem zz_4413425408
   start samplings 1000 for problem zz_4413425408
sampled for problem zz_4413425408
sampled for problem zz_2992420796
finished samples sampling for zz_2992420796
 finished run 4 for problem zz_2992420796
 start run 5 for problem zz_2992420796
   start samplings 1000 for problem zz_2992420796
sampled for problem zz_2992420796
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0285172740
finished samples sampling for zz_0285172740
 finished run 4 for problem zz_0285172740
 start run 5 for problem zz_0285172740
   start samplings 1000 for problem zz_0285172740
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0285172740
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_7766207770
finished samples sampling for zz_7766207770
 finished run 5 for problem zz_7766207770
 start run 6 for problem zz_7766207770
   start samplings 1000 for problem zz_7766207770
sampled for problem zz_7766207770
sampled for problem zz_0458068226
finished samples sampling for zz_0458068226
 finished run 5 for problem zz_0458068226
 start run 6 for problem zz_0458068226
   start samplings 1000 for problem zz_0458068226
sampled for problem zz_0458068226
sampled for problem zz_1726102831
finished samples sampling for zz_1726102831
 finished run 6 for problem zz_1726102831
 start run 7 for problem zz_1726102831
   start samplings 1000 for problem zz_1726102831
sampled for problem zz_1726102831
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_7781104199
finished samples sampling for zz_7781104199
 finished run 5 for problem zz_7781104199
 start run 6 for problem zz_7781104199
   start samplings 1000 for problem zz_7781104199
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_7781104199
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_7625459406
finished samples sampling for zz_7625459406
 finished run 6 for problem zz_7625459406
 start run 7 for problem zz_7625459406
   start samplings 1000 for problem zz_7625459406
sampled for problem zz_7625459406
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2992420796
finished samples sampling for zz_2992420796
 finished run 5 for problem zz_2992420796
 start run 6 for problem zz_2992420796
   start samplings 1000 for problem zz_2992420796
sampled for problem zz_2992420796
sampled for problem zz_4413425408
finished samples sampling for zz_4413425408
 finished run 5 for problem zz_4413425408
 start run 6 for problem zz_4413425408
   start samplings 1000 for problem zz_4413425408
sampled for problem zz_4413425408
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0285172740
finished samples sampling for zz_0285172740
 finished run 5 for problem zz_0285172740
 start run 6 for problem zz_0285172740
   start samplings 1000 for problem zz_0285172740
sampled for problem zz_0285172740
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_7766207770
finished samples sampling for zz_7766207770
 finished run 6 for problem zz_7766207770
 start run 7 for problem zz_7766207770
   start samplings 1000 for problem zz_7766207770
sampled for problem zz_7766207770
sampled for problem zz_0458068226
finished samples sampling for zz_0458068226
 finished run 6 for problem zz_0458068226
 start run 7 for problem zz_0458068226
   start samplings 1000 for problem zz_0458068226
sampled for problem zz_0458068226
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_1726102831
finished samples sampling for zz_1726102831
 finished run 7 for problem zz_1726102831
 start run 8 for problem zz_1726102831
   start samplings 1000 for problem zz_1726102831
sampled for problem zz_1726102831
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_7781104199
finished samples sampling for zz_7781104199
 finished run 6 for problem zz_7781104199
 start run 7 for problem zz_7781104199
   start samplings 1000 for problem zz_7781104199
sampled for problem zz_7781104199
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_7625459406
finished samples sampling for zz_7625459406
 finished run 7 for problem zz_7625459406
 start run 8 for problem zz_7625459406
   start samplings 1000 for problem zz_7625459406
sampled for problem zz_7625459406
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2992420796
finished samples sampling for zz_2992420796
 finished run 6 for problem zz_2992420796
 start run 7 for problem zz_2992420796
   start samplings 1000 for problem zz_2992420796
sampled for problem zz_2992420796
sampled for problem zz_4413425408
finished samples sampling for zz_4413425408
 finished run 6 for problem zz_4413425408
 start run 7 for problem zz_4413425408
   start samplings 1000 for problem zz_4413425408
sampled for problem zz_4413425408
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0285172740
finished samples sampling for zz_0285172740
 finished run 6 for problem zz_0285172740
 start run 7 for problem zz_0285172740
   start samplings 1000 for problem zz_0285172740
sampled for problem zz_0285172740
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_7766207770
finished samples sampling for zz_7766207770
 finished run 7 for problem zz_7766207770
 start run 8 for problem zz_7766207770
   start samplings 1000 for problem zz_7766207770
sampled for problem zz_7766207770
sampled for problem zz_0458068226
finished samples sampling for zz_0458068226
 finished run 7 for problem zz_0458068226
 start run 8 for problem zz_0458068226
   start samplings 1000 for problem zz_0458068226
sampled for problem zz_0458068226
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_1726102831
finished samples sampling for zz_1726102831
 finished run 8 for problem zz_1726102831
 start run 9 for problem zz_1726102831
   start samplings 1000 for problem zz_1726102831
sampled for problem zz_1726102831
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_7781104199
finished samples sampling for zz_7781104199
 finished run 7 for problem zz_7781104199
 start run 8 for problem zz_7781104199
   start samplings 1000 for problem zz_7781104199
sampled for problem zz_7781104199
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_7625459406
finished samples sampling for zz_7625459406
 finished run 8 for problem zz_7625459406
 start run 9 for problem zz_7625459406
   start samplings 1000 for problem zz_7625459406
sampled for problem zz_7625459406
sampled for problem zz_2992420796
finished samples sampling for zz_2992420796
 finished run 7 for problem zz_2992420796
 start run 8 for problem zz_2992420796
   start samplings 1000 for problem zz_2992420796
sampled for problem zz_2992420796
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4413425408
finished samples sampling for zz_4413425408
 finished run 7 for problem zz_4413425408
 start run 8 for problem zz_4413425408
   start samplings 1000 for problem zz_4413425408
sampled for problem zz_4413425408
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_5853151821
 start writing answer for problem {} zz_6118499488
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd6f4286c00>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd6f4286c00>
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0487520058
finished samples sampling for zz_0487520058
 finished run 4 for problem zz_0487520058
 start run 5 for problem zz_0487520058
   start samplings 1000 for problem zz_0487520058
sampled for problem zz_0487520058
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_1208695640
finished samples sampling for zz_1208695640
 finished run 4 for problem zz_1208695640
 start run 5 for problem zz_1208695640
   start samplings 1000 for problem zz_1208695640
sampled for problem zz_1208695640
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6710953139
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)]) Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_3729648486
 start writing answer for problem {} zz_9571001973
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f586051dac0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f586051dac0>
 Queue sizes: problems_to_submit = 7, answers_to_write = 4
sampled for problem zz_9456648355
finished samples sampling for zz_9456648355
 finished run 1 for problem zz_9456648355
 start run 2 for problem zz_9456648355
   start samplings 1000 for problem zz_9456648355
sampled for problem zz_9456648355
sampled for problem zz_5585617994
finished samples sampling for zz_5585617994
 finished run 1 for problem zz_5585617994
 start run 2 for problem zz_5585617994
   start samplings 1000 for problem zz_5585617994
sampled for problem zz_5585617994
 Queue sizes: problems_to_submit = 7, answers_to_write = 4
sampled for problem zz_2411961934
finished samples sampling for zz_2411961934
 finished run 1 for problem zz_2411961934
 start run 2 for problem zz_2411961934
   start samplings 1000 for problem zz_2411961934
sampled for problem zz_2411961934
 Queue sizes: problems_to_submit = 7, answers_to_write = 4
sampled for problem zz_8486709234
finished samples sampling for zz_8486709234
 finished run 1 for problem zz_8486709234
 start run 2 for problem zz_8486709234
   start samplings 1000 for problem zz_8486709234
sampled for problem zz_8486709234
sampled for problem zz_0229631392
finished samples sampling for zz_0229631392
 finished run 1 for problem zz_0229631392
 start run 2 for problem zz_0229631392
   start samplings 1000 for problem zz_0229631392
sampled for problem zz_0229631392
 Queue sizes: problems_to_submit = 7, answers_to_write = 4
sampled for problem zz_5919623735
finished samples sampling for zz_5919623735
 finished run 1 for problem zz_5919623735
 start run 2 for problem zz_5919623735
   start samplings 1000 for problem zz_5919623735
sampled for problem zz_5919623735
sampled for problem zz_2106543518
finished samples sampling for zz_2106543518
 finished run 1 for problem zz_2106543518
 start run 2 for problem zz_2106543518
   start samplings 1000 for problem zz_2106543518
sampled for problem zz_2106543518
 Queue sizes: problems_to_submit = 7, answers_to_write = 4
 Queue sizes: problems_to_submit = 7, answers_to_write = 4
 Queue sizes: problems_to_submit = 7, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8687733182
 start writing answer for problem {} zz_3237559296
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f58605a6a50>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f58605a6a50>
 Queue sizes: problems_to_submit = 7, answers_to_write = 3
sampled for problem zz_0357328613
finished samples sampling for zz_0357328613
 finished run 2 for problem zz_0357328613
 start run 3 for problem zz_0357328613
   start samplings 1000 for problem zz_0357328613
sampled for problem zz_0357328613
 Queue sizes: problems_to_submit = 7, answers_to_write = 3
sampled for problem zz_9456648355
finished samples sampling for zz_9456648355
 finished run 2 for problem zz_9456648355
 start run 3 for problem zz_9456648355
   start samplings 1000 for problem zz_9456648355
sampled for problem zz_9456648355
 Queue sizes: problems_to_submit = 7, answers_to_write = 3
sampled for problem zz_5585617994
finished samples sampling for zz_5585617994
 finished run 2 for problem zz_5585617994
 start run 3 for problem zz_5585617994
   start samplings 1000 for problem zz_5585617994
sampled for problem zz_5585617994
sampled for problem zz_2411961934
finished samples sampling for zz_2411961934
 finished run 2 for problem zz_2411961934
 start run 3 for problem zz_2411961934
   start samplings 1000 for problem zz_2411961934
sampled for problem zz_2411961934
 Queue sizes: problems_to_submit = 7, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables
sampled for problem zz_5387552259
 finished writing answer for problem {} zz_8519333792
 start writing answer for problem {} zz_9358651368
 Queue sizes: problems_to_submit = 7, answers_to_write = 4
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5b4c194c50>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5b4c194c50>
 Queue sizes: problems_to_submit = 7, answers_to_write = 4
sampled for problem zz_9812323767
finished samples sampling for zz_9812323767
 finished run 1 for problem zz_9812323767
 start run 2 for problem zz_9812323767
   start samplings 1000 for problem zz_9812323767
sampled for problem zz_9812323767
 Queue sizes: problems_to_submit = 7, answers_to_write = 4
 Queue sizes: problems_to_submit = 7, answers_to_write = 4
 Queue sizes: problems_to_submit = 7, answers_to_write = 4
sampled for problem zz_8705643469
finished samples sampling for zz_8705643469
 finished run 1 for problem zz_8705643469
 start run 2 for problem zz_8705643469
   start samplings 1000 for problem zz_8705643469
sampled for problem zz_8705643469
sampled for problem zz_1183798611
finished samples sampling for zz_1183798611
 finished run 1 for problem zz_1183798611
 start run 2 for problem zz_1183798611
   start samplings 1000 for problem zz_1183798611
sampled for problem zz_1183798611
 Queue sizes: problems_to_submit = 7, answers_to_write = 4
sampled for problem zz_6252892828
finished samples sampling for zz_6252892828
 finished run 1 for problem zz_6252892828
 start run 2 for problem zz_6252892828
   start samplings 1000 for problem zz_6252892828
sampled for problem zz_4337938137
finished samples sampling for zz_4337938137
 finished run 1 for problem zz_4337938137
 start run 2 for problem zz_4337938137
   start samplings 1000 for problem zz_4337938137
sampled for problem zz_6252892828
sampled for problem zz_4337938137
sampled for problem zz_1663139989
finished samples sampling for zz_1663139989
 finished run 1 for problem zz_1663139989
 start run 2 for problem zz_1663139989
   start samplings 1000 for problem zz_1663139989
sampled for problem zz_1663139989
sampled for problem zz_8342877442
finished samples sampling for zz_8342877442
 finished run 1 for problem zz_8342877442
 start run 2 for problem zz_8342877442
   start samplings 1000 for problem zz_8342877442
sampled for problem zz_8342877442
 Queue sizes: problems_to_submit = 7, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 7, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_9358651368
 start writing answer for problem {} zz_9027338350
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5b4c197350>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5b4c197350>
sampled for problem zz_5387552259
finished samples sampling for zz_5387552259
 finished run 2 for problem zz_5387552259
 start run 3 for problem zz_5387552259
   start samplings 1000 for problem zz_5387552259
sampled for problem zz_5387552259
 Queue sizes: problems_to_submit = 7, answers_to_write = 3
 Queue sizes: problems_to_submit = 7, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)]) <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_2040850932
 start writing answer for problem {} zz_9073880962
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f79b85b8920>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f79b85b8920>
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
sampled for problem zz_0675013443
finished samples sampling for zz_0675013443
 finished run 3 for problem zz_0675013443
 start run 4 for problem zz_0675013443
   start samplings 1000 for problem zz_0675013443
sampled for problem zz_0675013443
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_4944517933
 start writing answer for problem {} zz_1007359256
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f79b85baae0>
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f79b85baae0>
sampled for problem zz_8355420116
finished samples sampling for zz_8355420116
 finished run 3 for problem zz_8355420116
 start run 4 for problem zz_8355420116
   start samplings 1000 for problem zz_8355420116
sampled for problem zz_8355420116
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
sampled for problem zz_4978626801
finished samples sampling for zz_4978626801
 finished run 3 for problem zz_4978626801
 start run 4 for problem zz_4978626801
   start samplings 1000 for problem zz_4978626801
sampled for problem zz_4978626801
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
sampled for problem zz_4874220685
finished samples sampling for zz_4874220685
 finished run 3 for problem zz_4874220685
 start run 4 for problem zz_4874220685
   start samplings 1000 for problem zz_4874220685
sampled for problem zz_4874220685
sampled for problem zz_6502573580
finished samples sampling for zz_6502573580
 finished run 3 for problem zz_6502573580
 start run 4 for problem zz_6502573580
   start samplings 1000 for problem zz_6502573580
sampled for problem zz_6502573580
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
sampled for problem zz_5860958113
finished samples sampling for zz_5860958113
 finished run 3 for problem zz_5860958113
 start run 4 for problem zz_5860958113
   start samplings 1000 for problem zz_5860958113
sampled for problem zz_5860958113
sampled for problem zz_0061234211
finished samples sampling for zz_0061234211
 finished run 3 for problem zz_0061234211
 start run 4 for problem zz_0061234211
   start samplings 1000 for problem zz_0061234211
sampled for problem zz_0061234211
sampled for problem zz_5775954040
finished samples sampling for zz_5775954040
 finished run 3 for problem zz_5775954040
 start run 4 for problem zz_5775954040
   start samplings 1000 for problem zz_5775954040
sampled for problem zz_5775954040
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6575155837
 start writing answer for problem {} zz_5309607385
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4f82be720>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4f82be720>
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
sampled for problem zz_3242687376
finished samples sampling for zz_3242687376
 finished run 2 for problem zz_3242687376
 start run 3 for problem zz_3242687376
   start samplings 1000 for problem zz_3242687376
sampled for problem zz_3242687376
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_3451907868
finished samples sampling for zz_3451907868
 finished run 3 for problem zz_3451907868
 start run 4 for problem zz_3451907868
   start samplings 1000 for problem zz_3451907868
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
sampled for problem zz_3451907868
sampled for problem zz_5125038959
finished samples sampling for zz_5125038959
 finished run 2 for problem zz_5125038959
 start run 3 for problem zz_5125038959
   start samplings 1000 for problem zz_5125038959
sampled for problem zz_5125038959
sampled for problem zz_5347903740
finished samples sampling for zz_5347903740
 finished run 2 for problem zz_5347903740
 start run 3 for problem zz_5347903740
   start samplings 1000 for problem zz_5347903740
sampled for problem zz_5347903740
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_0437237586
finished samples sampling for zz_0437237586
 finished run 2 for problem zz_0437237586
 start run 3 for problem zz_0437237586
   start samplings 1000 for problem zz_0437237586
sampled for problem zz_0437237586
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 2
sampled for problem zz_4160526692
finished samples sampling for zz_4160526692
 finished run 2 for problem zz_4160526692
 start run 3 for problem zz_4160526692
   start samplings 1000 for problem zz_4160526692
sampled for problem zz_4160526692
 finished writing answer for problem {} zz_2959573595
 start writing answer for problem {} zz_5096381632
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4f82bd100>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4f82bd100>
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
sampled for problem zz_6514437321
finished samples sampling for zz_6514437321
 finished run 2 for problem zz_6514437321
 start run 3 for problem zz_6514437321
   start samplings 1000 for problem zz_6514437321
sampled for problem zz_6514437321
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
sampled for problem zz_8267963959
finished samples sampling for zz_8267963959
 finished run 3 for problem zz_8267963959
 start run 4 for problem zz_8267963959
   start samplings 1000 for problem zz_8267963959
sampled for problem zz_8267963959
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
sampled for problem zz_3242687376
finished samples sampling for zz_3242687376
 finished run 3 for problem zz_3242687376
 start run 4 for problem zz_3242687376
   start samplings 1000 for problem zz_3242687376
sampled for problem zz_3242687376
sampled for problem zz_3451907868
finished samples sampling for zz_3451907868
 finished run 4 for problem zz_3451907868
 start run 5 for problem zz_3451907868
   start samplings 1000 for problem zz_3451907868
sampled for problem zz_3451907868
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
sampled for problem zz_5125038959
finished samples sampling for zz_5125038959
 finished run 3 for problem zz_5125038959
 start run 4 for problem zz_5125038959
   start samplings 1000 for problem zz_5125038959
sampled for problem zz_5125038959
sampled for problem zz_5347903740
finished samples sampling for zz_5347903740
 finished run 3 for problem zz_5347903740
 start run 4 for problem zz_5347903740
   start samplings 1000 for problem zz_5347903740
sampled for problem zz_5347903740
sampled for problem zz_0437237586
finished samples sampling for zz_0437237586
 finished run 3 for problem zz_0437237586
 start run 4 for problem zz_0437237586
   start samplings 1000 for problem zz_0437237586
sampled for problem zz_0437237586
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
sampled for problem zz_4160526692
finished samples sampling for zz_4160526692
 finished run 3 for problem zz_4160526692
 start run 4 for problem zz_4160526692
   start samplings 1000 for problem zz_4160526692
sampled for problem zz_4160526692
_variables
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_9073880962
 start writing answer for problem {} zz_8821900078
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f79b855f410>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f79b855f410>
sampled for problem zz_0675013443
finished samples sampling for zz_0675013443
 finished run 4 for problem zz_0675013443
 start run 5 for problem zz_0675013443
   start samplings 1000 for problem zz_0675013443
sampled for problem zz_0675013443
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_1007359256
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_8355420116
finished samples sampling for zz_8355420116
 finished run 4 for problem zz_8355420116
 start run 5 for problem zz_8355420116
   start samplings 1000 for problem zz_8355420116
sampled for problem zz_8355420116
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4978626801
finished samples sampling for zz_4978626801
 finished run 4 for problem zz_4978626801
 start run 5 for problem zz_4978626801
   start samplings 1000 for problem zz_4978626801
sampled for problem zz_4978626801
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)]) <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_8486709234
finished samples sampling for zz_8486709234
 finished run 2 for problem zz_8486709234
 start run 3 for problem zz_8486709234
   start samplings 1000 for problem zz_8486709234
sampled for problem zz_8486709234
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 7, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_0229631392
finished samples sampling for zz_0229631392
 finished run 2 for problem zz_0229631392
 start run 3 for problem zz_0229631392
   start samplings 1000 for problem zz_0229631392
sampled for problem zz_0229631392
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_5919623735
finished samples sampling for zz_5919623735
 finished run 2 for problem zz_5919623735
 start run 3 for problem zz_5919623735
   start samplings 1000 for problem zz_5919623735
sampled for problem zz_5919623735
 finished writing answer for problem {} zz_9571001973
 start writing answer for problem {} zz_1728207492
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5860567680>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5860567680>
sampled for problem zz_2106543518
finished samples sampling for zz_2106543518
 finished run 2 for problem zz_2106543518
 start run 3 for problem zz_2106543518
   start samplings 1000 for problem zz_2106543518
sampled for problem zz_2106543518
 Queue sizes: problems_to_submit = 7, answers_to_write = 2
 Queue sizes: problems_to_submit = 7, answers_to_write = 2
 Queue sizes: problems_to_submit = 7, answers_to_write = 2
 Queue sizes: problems_to_submit = 7, answers_to_write = 2
 Queue sizes: problems_to_submit = 7, answers_to_write = 2
sampled for problem zz_0357328613
finished samples sampling for zz_0357328613
 finished run 3 for problem zz_0357328613
 start run 4 for problem zz_0357328613
   start samplings 1000 for problem zz_0357328613
sampled for problem zz_0357328613
sampled for problem zz_9456648355
finished samples sampling for zz_9456648355
 finished run 3 for problem zz_9456648355
 start run 4 for problem zz_9456648355
   start samplings 1000 for problem zz_9456648355
sampled for problem zz_9456648355
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 7, answers_to_write = 2
sampled for problem zz_5585617994
finished samples sampling for zz_5585617994
 finished run 3 for problem zz_5585617994
 start run 4 for problem zz_5585617994
   start samplings 1000 for problem zz_5585617994
sampled for problem zz_5585617994
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_2411961934
finished samples sampling for zz_2411961934
 finished run 3 for problem zz_2411961934
 start run 4 for problem zz_2411961934
   start samplings 1000 for problem zz_2411961934
sampled for problem zz_2411961934
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 7, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 7, answers_to_write = 3
sampled for problem zz_9812323767
finished samples sampling for zz_9812323767
 finished run 2 for problem zz_9812323767
 start run 3 for problem zz_9812323767
   start samplings 1000 for problem zz_9812323767
sampled for problem zz_9812323767
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_9188041178
 start writing answer for problem {} zz_5478785105
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5b4c182450>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5b4c182450>
 Queue sizes: problems_to_submit = 7, answers_to_write = 2
 Queue sizes: problems_to_submit = 7, answers_to_write = 2
sampled for problem zz_8705643469
finished samples sampling for zz_8705643469
 finished run 2 for problem zz_8705643469
 start run 3 for problem zz_8705643469
   start samplings 1000 for problem zz_8705643469
sampled for problem zz_8705643469
 Queue sizes: problems_to_submit = 7, answers_to_write = 2
sampled for problem zz_1183798611
finished samples sampling for zz_1183798611
 finished run 2 for problem zz_1183798611
 start run 3 for problem zz_1183798611
   start samplings 1000 for problem zz_1183798611
sampled for problem zz_1183798611
sampled for problem zz_6252892828
finished samples sampling for zz_6252892828
 finished run 2 for problem zz_6252892828
 start run 3 for problem zz_6252892828
   start samplings 1000 for problem zz_6252892828
sampled for problem zz_6252892828
sampled for problem zz_4337938137
finished samples sampling for zz_4337938137
 finished run 2 for problem zz_4337938137
 start run 3 for problem zz_4337938137
   start samplings 1000 for problem zz_4337938137
sampled for problem zz_4337938137
sampled for problem zz_8342877442
finished samples sampling for zz_8342877442
 finished run 2 for problem zz_8342877442
 start run 3 for problem zz_8342877442
   start samplings 1000 for problem zz_8342877442
sampled for problem zz_8342877442
 Queue sizes: problems_to_submit = 7, answers_to_write = 2
sampled for problem zz_1663139989
finished samples sampling for zz_1663139989
 finished run 2 for problem zz_1663139989
 start run 3 for problem zz_1663139989
   start samplings 1000 for problem zz_1663139989
sampled for problem zz_1663139989
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 7, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_5387552259
finished samples sampling for zz_5387552259
 finished run 3 for problem zz_5387552259
 start run 4 for problem zz_5387552259
   start samplings 1000 for problem zz_5387552259
 Queue sizes: problems_to_submit = 7, answers_to_write = 2
sampled for problem zz_5387552259
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_9027338350
 start writing answer for problem {} zz_7338686412
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5b4c148cb0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5b4c148cb0>
 Queue sizes: problems_to_submit = 7, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)]) <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_5309607385
 start writing answer for problem {} zz_5249775500
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4f8280440>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4f8280440>
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6514437321
finished samples sampling for zz_6514437321
 finished run 3 for problem zz_6514437321
 start run 4 for problem zz_6514437321
   start samplings 1000 for problem zz_6514437321
sampled for problem zz_6514437321
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_5096381632
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_8267963959
finished samples sampling for zz_8267963959
 finished run 4 for problem zz_8267963959
 start run 5 for problem zz_8267963959
   start samplings 1000 for problem zz_8267963959
sampled for problem zz_8267963959
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_0285172740
finished samples sampling for zz_0285172740
 finished run 7 for problem zz_0285172740
 start run 8 for problem zz_0285172740
   start samplings 1000 for problem zz_0285172740
sampled for problem zz_0285172740
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_7766207770
finished samples sampling for zz_7766207770
 finished run 8 for problem zz_7766207770
 start run 9 for problem zz_7766207770
   start samplings 1000 for problem zz_7766207770
sampled for problem zz_7766207770
sampled for problem zz_0458068226
finished samples sampling for zz_0458068226
 finished run 8 for problem zz_0458068226
 start run 9 for problem zz_0458068226
   start samplings 1000 for problem zz_0458068226
sampled for problem zz_0458068226
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_1726102831
finished samples sampling for zz_1726102831
 finished run 9 for problem zz_1726102831
 succesfully retrieved answer for problem {} zz_1726102831
 start working on problem zz_1534170724
 start writing answer for problem {} zz_1726102831
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb40c1e0440>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb40c1e0440>
 problem zz_1534170724 will take can be sampled with a single run
 problem zz_1534170724 will be solved 1 times per run
 start run 0 for problem zz_1534170724
   start samplings 1000 for problem zz_1534170724
sampled for problem zz_1534170724
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_7781104199
finished samples sampling for zz_7781104199
 finished run 8 for problem zz_7781104199
 start run 9 for problem zz_7781104199
   start samplings 1000 for problem zz_7781104199
sampled for problem zz_7781104199
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_7625459406
finished samples sampling for zz_7625459406
 finished run 9 for problem zz_7625459406
 succesfully retrieved answer for problem {} zz_7625459406
 start working on problem zz_7421375757
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_1726102831
 start writing answer for problem {} zz_7625459406
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb1be6a28d0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb1be6a28d0>
 problem zz_7421375757 will take can be sampled with a single run
 problem zz_7421375757 will be solved 1 times per run
 start run 0 for problem zz_7421375757
   start samplings 1000 for problem zz_7421375757
sampled for problem zz_7421375757
sampled for problem zz_2992420796
finished samples sampling for zz_2992420796
 finished run 8 for problem zz_2992420796
 start run 9 for problem zz_2992420796
   start samplings 1000 for problem zz_2992420796
sampled for problem zz_2992420796
 Queue sizes: problems_to_submit = 6, answers_to_write = 0
sampled for problem zz_4413425408
finished samples sampling for zz_4413425408
 finished run 8 for problem zz_4413425408
 start run 9 for problem zz_4413425408
   start samplings 1000 for problem zz_4413425408
sampled for problem zz_4413425408
 Queue sizes: problems_to_submit = 6, answers_to_write = 0
 Queue sizes: problems_to_submit = 6, answers_to_write = 0
sampled for problem zz_0285172740
finished samples sampling for zz_0285172740
 finished run 8 for problem zz_0285172740
 start run 9 for problem zz_0285172740
   start samplings 1000 for problem zz_0285172740
sampled for problem zz_0285172740
sampled for problem zz_7766207770
finished samples sampling for zz_7766207770
 finished run 9 for problem zz_7766207770
 succesfully retrieved answer for problem {} zz_7766207770
 start working on problem zz_4197625176
 start writing answer for problem {} zz_7766207770
 problem zz_4197625176 will take can be sampled with a single run
 problem zz_4197625176 will be solved 1 times per run
 start run 0 for problem zz_4197625176
   start samplings 1000 for problem zz_4197625176
sampled for problem zz_0458068226
finished samples sampling for zz_0458068226
 finished run 9 for problem zz_0458068226
sampled for problem zz_4197625176
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb227dec3b0>
 succesfully retrieved answer for problem {} zz_0458068226
 start working on problem zz_8229547046
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb227dec3b0>
 Queue sizes: problems_to_submit = 4, answers_to_write = 1
 problem zz_8229547046 will take can be sampled with a single run
 problem zz_8229547046 will be solved 1 times per run
 start run 0 for problem zz_8229547046
   start samplings 1000 for problem zz_8229547046
sampled for problem zz_8229547046
sampled for problem zz_1534170724
finished samples sampling for zz_1534170724
   start samplings 1000 for problem zz_1916212122
sampled for problem zz_1916212122
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_7619482988
finished samples sampling for zz_7619482988
 finished run 3 for problem zz_7619482988
 start run 4 for problem zz_7619482988
   start samplings 1000 for problem zz_7619482988
sampled for problem zz_7619482988
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0609764094
finished samples sampling for zz_0609764094
 finished run 4 for problem zz_0609764094
 start run 5 for problem zz_0609764094
   start samplings 1000 for problem zz_0609764094
sampled for problem zz_0609764094
sampled for problem zz_7629313757
finished samples sampling for zz_7629313757
 finished run 5 for problem zz_7629313757
 start run 6 for problem zz_7629313757
   start samplings 1000 for problem zz_7629313757
sampled for problem zz_7629313757
sampled for problem zz_5314019901
finished samples sampling for zz_5314019901
 finished run 4 for problem zz_5314019901
 start run 5 for problem zz_5314019901
   start samplings 1000 for problem zz_5314019901
sampled for problem zz_5314019901
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0651999763
finished samples sampling for zz_0651999763
 finished run 4 for problem zz_0651999763
 start run 5 for problem zz_0651999763
   start samplings 1000 for problem zz_0651999763
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0651999763
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4275832690
finished samples sampling for zz_4275832690
 finished run 5 for problem zz_4275832690
 start run 6 for problem zz_4275832690
   start samplings 1000 for problem zz_4275832690
sampled for problem zz_4275832690
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2868668091
finished samples sampling for zz_2868668091
 finished run 4 for problem zz_2868668091
 start run 5 for problem zz_2868668091
   start samplings 1000 for problem zz_2868668091
sampled for problem zz_2868668091
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_1916212122
finished samples sampling for zz_1916212122
 finished run 5 for problem zz_1916212122
 start run 6 for problem zz_1916212122
   start samplings 1000 for problem zz_1916212122
sampled for problem zz_1916212122
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_7619482988
finished samples sampling for zz_7619482988
 finished run 4 for problem zz_7619482988
 start run 5 for problem zz_7619482988
   start samplings 1000 for problem zz_7619482988
sampled for problem zz_7619482988
sampled for problem zz_0609764094
finished samples sampling for zz_0609764094
 finished run 5 for problem zz_0609764094
 start run 6 for problem zz_0609764094
   start samplings 1000 for problem zz_0609764094
sampled for problem zz_0609764094
sampled for problem zz_7629313757
finished samples sampling for zz_7629313757
 finished run 6 for problem zz_7629313757
 start run 7 for problem zz_7629313757
   start samplings 1000 for problem zz_7629313757
sampled for problem zz_7629313757
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_5314019901
finished samples sampling for zz_5314019901
 finished run 5 for problem zz_5314019901
 start run 6 for problem zz_5314019901
   start samplings 1000 for problem zz_5314019901
sampled for problem zz_5314019901
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0651999763
finished samples sampling for zz_0651999763
 finished run 5 for problem zz_0651999763
 start run 6 for problem zz_0651999763
   start samplings 1000 for problem zz_0651999763
sampled for problem zz_0651999763
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4275832690
finished samples sampling for zz_4275832690
 finished run 6 for problem zz_4275832690
 start run 7 for problem zz_4275832690
   start samplings 1000 for problem zz_4275832690
sampled for problem zz_4275832690
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2868668091
finished samples sampling for zz_2868668091
 finished run 5 for problem zz_2868668091
 start run 6 for problem zz_2868668091
   start samplings 1000 for problem zz_2868668091
sampled for problem zz_2868668091
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_1916212122
finished samples sampling for zz_1916212122
 finished run 6 for problem zz_1916212122
 start run 7 for problem zz_1916212122
   start samplings 1000 for problem zz_1916212122
sampled for problem zz_1916212122
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_7619482988
finished samples sampling for zz_7619482988
 finished run 5 for problem zz_7619482988
 start run 6 for problem zz_7619482988
   start samplings 1000 for problem zz_7619482988
sampled for problem zz_7619482988
sampled for problem zz_0609764094
finished samples sampling for zz_0609764094
 finished run 6 for problem zz_0609764094
 start run 7 for problem zz_0609764094
   start samplings 1000 for problem zz_0609764094
sampled for problem zz_0609764094
sampled for problem zz_7629313757
finished samples sampling for zz_7629313757
 finished run 7 for problem zz_7629313757
 start run 8 for problem zz_7629313757
   start samplings 1000 for problem zz_7629313757
sampled for problem zz_7629313757
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_5314019901
finished samples sampling for zz_5314019901
 finished run 6 for problem zz_5314019901
 start run 7 for problem zz_5314019901
   start samplings 1000 for problem zz_5314019901
sampled for problem zz_5314019901
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0651999763
finished samples sampling for zz_0651999763
 finished run 6 for problem zz_0651999763
 start run 7 for problem zz_0651999763
   start samplings 1000 for problem zz_0651999763
sampled for problem zz_0651999763
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4275832690
finished samples sampling for zz_4275832690
 finished run 7 for problem zz_4275832690
 start run 8 for problem zz_4275832690
   start samplings 1000 for problem zz_4275832690
sampled for problem zz_4275832690
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2868668091
finished samples sampling for zz_2868668091
 finished run 6 for problem zz_2868668091
 start run 7 for problem zz_2868668091
   start samplings 1000 for problem zz_2868668091
sampled for problem zz_2868668091
sampled for problem zz_1916212122
finished samples sampling for zz_1916212122
 finished run 7 for problem zz_1916212122
 start run 8 for problem zz_1916212122
   start samplings 1000 for problem zz_1916212122
sampled for problem zz_1916212122
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_7619482988
finished samples sampling for zz_7619482988
 finished run 6 for problem zz_7619482988
 start run 7 for problem zz_7619482988
   start samplings 1000 for problem zz_7619482988
sampled for problem zz_7619482988
sampled for problem zz_0609764094
finished samples sampling for zz_0609764094
 finished run 7 for problem zz_0609764094
 start run 8 for problem zz_0609764094
   start samplings 1000 for problem zz_0609764094
sampled for problem zz_0609764094
sampled for problem zz_7629313757
finished samples sampling for zz_7629313757
 finished run 8 for problem zz_7629313757
 start run 9 for problem zz_7629313757
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_3237559296
 start writing answer for problem {} zz_0960471698
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5860580530>
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_1728207492
 start writing answer for problem {} zz_3614144584
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f58605a4b60>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5860580530>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f58605a4b60>
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_8486709234
finished samples sampling for zz_8486709234
 finished run 3 for problem zz_8486709234
 start run 4 for problem zz_8486709234
   start samplings 1000 for problem zz_8486709234
sampled for problem zz_8486709234
sampled for problem zz_0229631392
finished samples sampling for zz_0229631392
 finished run 3 for problem zz_0229631392
 start run 4 for problem zz_0229631392
   start samplings 1000 for problem zz_0229631392
sampled for problem zz_0229631392
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_5919623735
finished samples sampling for zz_5919623735
 finished run 3 for problem zz_5919623735
 start run 4 for problem zz_5919623735
   start samplings 1000 for problem zz_5919623735
sampled for problem zz_2106543518
finished samples sampling for zz_2106543518
 finished run 3 for problem zz_2106543518
 start run 4 for problem zz_2106543518
   start samplings 1000 for problem zz_2106543518
sampled for problem zz_2106543518
sampled for problem zz_5919623735
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_0357328613
finished samples sampling for zz_0357328613
 finished run 4 for problem zz_0357328613
 start run 5 for problem zz_0357328613
   start samplings 1000 for problem zz_0357328613
sampled for problem zz_0357328613
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_9456648355
finished samples sampling for zz_9456648355
 finished run 4 for problem zz_9456648355
 start run 5 for problem zz_9456648355
   start samplings 1000 for problem zz_9456648355
sampled for problem zz_9456648355
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_3614144584
sampled for problem zz_5585617994
finished samples sampling for zz_5585617994
 finished run 4 for problem zz_5585617994
 start run 5 for problem zz_5585617994
   start samplings 1000 for problem zz_5585617994
sampled for problem zz_5585617994
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_2411961934
finished samples sampling for zz_2411961934
 finished run 4 for problem zz_2411961934
 start run 5 for problem zz_2411961934
   start samplings 1000 for problem zz_2411961934
sampled for problem zz_2411961934
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'>
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_5478785105
 start writing answer for problem {} zz_5060062432
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5b4c1bca10>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5b4c1bca10>
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_9812323767
finished samples sampling for zz_9812323767
 finished run 3 for problem zz_9812323767
 start run 4 for problem zz_9812323767
   start samplings 1000 for problem zz_9812323767
sampled for problem zz_9812323767
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_8705643469
finished samples sampling for zz_8705643469
 finished run 3 for problem zz_8705643469
 start run 4 for problem zz_8705643469
   start samplings 1000 for problem zz_8705643469
sampled for problem zz_8705643469
sampled for problem zz_1183798611
finished samples sampling for zz_1183798611
 finished run 3 for problem zz_1183798611
 start run 4 for problem zz_1183798611
   start samplings 1000 for problem zz_1183798611
sampled for problem zz_1183798611
sampled for problem zz_6252892828
finished samples sampling for zz_6252892828
 finished run 3 for problem zz_6252892828
 start run 4 for problem zz_6252892828
   start samplings 1000 for problem zz_6252892828
sampled for problem zz_6252892828
sampled for problem zz_4337938137
finished samples sampling for zz_4337938137
 finished run 3 for problem zz_4337938137
 start run 4 for problem zz_4337938137
   start samplings 1000 for problem zz_4337938137
sampled for problem zz_4337938137
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_8342877442
finished samples sampling for zz_8342877442
 finished run 3 for problem zz_8342877442
 start run 4 for problem zz_8342877442
   start samplings 1000 for problem zz_8342877442
sampled for problem zz_8342877442
sampled for problem zz_1663139989
finished samples sampling for zz_1663139989
 finished run 3 for problem zz_1663139989
 start run 4 for problem zz_1663139989
   start samplings 1000 for problem zz_1663139989
sampled for problem zz_1663139989
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_5387552259
finished samples sampling for zz_5387552259
 finished run 4 for problem zz_5387552259
 start run 5 for problem zz_5387552259
   start samplings 1000 for problem zz_5387552259
sampled for problem zz_5387552259
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_7338686412
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished run 0 for problem zz_1534170724
 start run 1 for problem zz_1534170724
   start samplings 1000 for problem zz_1534170724
sampled for problem zz_1534170724
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_7781104199
finished samples sampling for zz_7781104199
 finished run 9 for problem zz_7781104199
 succesfully retrieved answer for problem {} zz_7781104199
 start working on problem zz_8661404323
 Queue sizes: problems_to_submit = 3, answers_to_write = 2
 problem zz_8661404323 will take can be sampled with a single run
 problem zz_8661404323 will be solved 1 times per run
 start run 0 for problem zz_8661404323
   start samplings 1000 for problem zz_8661404323
sampled for problem zz_8661404323
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 3, answers_to_write = 2
 finished writing answer for problem {} zz_7625459406
 start writing answer for problem {} zz_0458068226
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb227bc5640>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb227bc5640>
 Queue sizes: problems_to_submit = 3, answers_to_write = 1
sampled for problem zz_7421375757
finished samples sampling for zz_7421375757
 finished run 0 for problem zz_7421375757
 start run 1 for problem zz_7421375757
   start samplings 1000 for problem zz_7421375757
sampled for problem zz_7421375757
sampled for problem zz_2992420796
finished samples sampling for zz_2992420796
 finished run 9 for problem zz_2992420796
 succesfully retrieved answer for problem {} zz_2992420796
 start working on problem zz_2290663268
 problem zz_2290663268 will take can be sampled with a single run
 problem zz_2290663268 will be solved 1 times per run
 start run 0 for problem zz_2290663268
   start samplings 1000 for problem zz_2290663268
sampled for problem zz_2290663268
 Queue sizes: problems_to_submit = 2, answers_to_write = 2
sampled for problem zz_4413425408
finished samples sampling for zz_4413425408
 finished run 9 for problem zz_4413425408
 succesfully retrieved answer for problem {} zz_4413425408
 start working on problem zz_0085220014
 problem zz_0085220014 will take can be sampled with a single run
 problem zz_0085220014 will be solved 1 times per run
 start run 0 for problem zz_0085220014
   start samplings 1000 for problem zz_0085220014
sampled for problem zz_0085220014
 Queue sizes: problems_to_submit = 1, answers_to_write = 3
 Queue sizes: problems_to_submit = 1, answers_to_write = 3
sampled for problem zz_0285172740
finished samples sampling for zz_0285172740
 finished run 9 for problem zz_0285172740
 succesfully retrieved answer for problem {} zz_0285172740
 start working on problem zz_7223102935
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 problem zz_7223102935 will take can be sampled with a single run
 problem zz_7223102935 will be solved 1 times per run
 start run 0 for problem zz_7223102935
   start samplings 1000 for problem zz_7223102935
sampled for problem zz_7223102935
sampled for problem zz_4197625176
finished samples sampling for zz_4197625176
 finished run 0 for problem zz_4197625176
 start run 1 for problem zz_4197625176
   start samplings 1000 for problem zz_4197625176
sampled for problem zz_4197625176
sampled for problem zz_1534170724
finished samples sampling for zz_1534170724
 finished run 1 for problem zz_1534170724
 start run 2 for problem zz_1534170724
   start samplings 1000 for problem zz_1534170724
sampled for problem zz_1534170724
sampled for problem zz_8229547046
finished samples sampling for zz_8229547046
 finished run 0 for problem zz_8229547046
 start run 1 for problem zz_8229547046
   start samplings 1000 for problem zz_8229547046
sampled for problem zz_8229547046
sampled for problem zz_8661404323
finished samples sampling for zz_8661404323
 finished run 0 for problem zz_8661404323
 start run 1 for problem zz_8661404323
   start samplings 1000 for problem zz_8661404323
sampled for problem zz_8661404323
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
sampled for problem zz_7421375757
finished samples sampling for zz_7421375757
 finished run 1 for problem zz_7421375757
 start run 2 for problem zz_7421375757
   start samplings 1000 for problem zz_7421375757
sampled for problem zz_7421375757
sampled for problem zz_2290663268
finished samples sampling for zz_2290663268
 finished run 0 for problem zz_2290663268
 start run 1 for problem zz_2290663268
   start samplings 1000 for problem zz_2290663268
sampled for problem zz_2290663268
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6118499488
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6935795118
finished samples sampling for zz_6935795118
 finished run 4 for problem zz_6935795118
 start run 5 for problem zz_6935795118
   start samplings 1000 for problem zz_6935795118
sampled for problem zz_6935795118
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_8530174265
finished samples sampling for zz_8530174265
 finished run 4 for problem zz_8530174265
 start run 5 for problem zz_8530174265
   start samplings 1000 for problem zz_8530174265
sampled for problem zz_8530174265
sampled for problem zz_6255233176
finished samples sampling for zz_6255233176
 finished run 4 for problem zz_6255233176
 start run 5 for problem zz_6255233176
   start samplings 1000 for problem zz_6255233176
sampled for problem zz_6255233176
sampled for problem zz_0140728978
finished samples sampling for zz_0140728978
 finished run 4 for problem zz_0140728978
 start run 5 for problem zz_0140728978
   start samplings 1000 for problem zz_0140728978
sampled for problem zz_0140728978
sampled for problem zz_2236080878
finished samples sampling for zz_2236080878
 finished run 4 for problem zz_2236080878
 start run 5 for problem zz_2236080878
   start samplings 1000 for problem zz_2236080878
sampled for problem zz_2236080878
sampled for problem zz_8100679620
finished samples sampling for zz_8100679620
 finished run 4 for problem zz_8100679620
 start run 5 for problem zz_8100679620
   start samplings 1000 for problem zz_8100679620
sampled for problem zz_8100679620
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0487520058
finished samples sampling for zz_0487520058
 finished run 5 for problem zz_0487520058
 start run 6 for problem zz_0487520058
   start samplings 1000 for problem zz_0487520058
sampled for problem zz_0487520058
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_1208695640
finished samples sampling for zz_1208695640
 finished run 5 for problem zz_1208695640
 start run 6 for problem zz_1208695640
   start samplings 1000 for problem zz_1208695640
sampled for problem zz_1208695640
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6935795118
finished samples sampling for zz_6935795118
 finished run 5 for problem zz_6935795118
 start run 6 for problem zz_6935795118
   start samplings 1000 for problem zz_6935795118
sampled for problem zz_6935795118
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_8530174265
finished samples sampling for zz_8530174265
 finished run 5 for problem zz_8530174265
 start run 6 for problem zz_8530174265
   start samplings 1000 for problem zz_8530174265
sampled for problem zz_8530174265
sampled for problem zz_6255233176
finished samples sampling for zz_6255233176
 finished run 5 for problem zz_6255233176
 start run 6 for problem zz_6255233176
   start samplings 1000 for problem zz_6255233176
sampled for problem zz_6255233176
sampled for problem zz_0140728978
finished samples sampling for zz_0140728978
 finished run 5 for problem zz_0140728978
 start run 6 for problem zz_0140728978
   start samplings 1000 for problem zz_0140728978
sampled for problem zz_0140728978
sampled for problem zz_2236080878
finished samples sampling for zz_2236080878
 finished run 5 for problem zz_2236080878
 start run 6 for problem zz_2236080878
   start samplings 1000 for problem zz_2236080878
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2236080878
sampled for problem zz_8100679620
finished samples sampling for zz_8100679620
 finished run 5 for problem zz_8100679620
 start run 6 for problem zz_8100679620
   start samplings 1000 for problem zz_8100679620
sampled for problem zz_8100679620
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0487520058
finished samples sampling for zz_0487520058
 finished run 6 for problem zz_0487520058
 start run 7 for problem zz_0487520058
   start samplings 1000 for problem zz_0487520058
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0487520058
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_1208695640
finished samples sampling for zz_1208695640
 finished run 6 for problem zz_1208695640
 start run 7 for problem zz_1208695640
   start samplings 1000 for problem zz_1208695640
sampled for problem zz_1208695640
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6935795118
finished samples sampling for zz_6935795118
 finished run 6 for problem zz_6935795118
 start run 7 for problem zz_6935795118
   start samplings 1000 for problem zz_6935795118
sampled for problem zz_6935795118
sampled for problem zz_8530174265
finished samples sampling for zz_8530174265
 finished run 6 for problem zz_8530174265
 start run 7 for problem zz_8530174265
   start samplings 1000 for problem zz_8530174265
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_8530174265
sampled for problem zz_6255233176
finished samples sampling for zz_6255233176
 finished run 6 for problem zz_6255233176
 start run 7 for problem zz_6255233176
   start samplings 1000 for problem zz_6255233176
sampled for problem zz_6255233176
sampled for problem zz_0140728978
finished samples sampling for zz_0140728978
 finished run 6 for problem zz_0140728978
 start run 7 for problem zz_0140728978
   start samplings 1000 for problem zz_0140728978
sampled for problem zz_0140728978
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2236080878
finished samples sampling for zz_2236080878
 finished run 6 for problem zz_2236080878
 start run 7 for problem zz_2236080878
   start samplings 1000 for problem zz_2236080878
sampled for problem zz_2236080878
sampled for problem zz_8100679620
finished samples sampling for zz_8100679620
 finished run 6 for problem zz_8100679620
 start run 7 for problem zz_8100679620
   start samplings 1000 for problem zz_8100679620
sampled for problem zz_8100679620
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0487520058
finished samples sampling for zz_0487520058
 finished run 7 for problem zz_0487520058
 start run 8 for problem zz_0487520058
   start samplings 1000 for problem zz_0487520058
sampled for problem zz_0487520058
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_1208695640
finished samples sampling for zz_1208695640
 finished run 7 for problem zz_1208695640
 start run 8 for problem zz_1208695640
   start samplings 1000 for problem zz_1208695640
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_1208695640
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6935795118
finished samples sampling for zz_6935795118
 finished run 7 for problem zz_6935795118
 start run 8 for problem zz_6935795118
   start samplings 1000 for problem zz_6935795118
sampled for problem zz_6935795118
sampled for problem zz_8530174265
   start samplings 1000 for problem zz_7629313757
sampled for problem zz_7629313757
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_5314019901
finished samples sampling for zz_5314019901
 finished run 7 for problem zz_5314019901
 start run 8 for problem zz_5314019901
   start samplings 1000 for problem zz_5314019901
sampled for problem zz_5314019901
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0651999763
finished samples sampling for zz_0651999763
 finished run 7 for problem zz_0651999763
 start run 8 for problem zz_0651999763
   start samplings 1000 for problem zz_0651999763
sampled for problem zz_0651999763
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4275832690
finished samples sampling for zz_4275832690
 finished run 8 for problem zz_4275832690
 start run 9 for problem zz_4275832690
   start samplings 1000 for problem zz_4275832690
sampled for problem zz_4275832690
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_2868668091
finished samples sampling for zz_2868668091
 finished run 7 for problem zz_2868668091
 start run 8 for problem zz_2868668091
   start samplings 1000 for problem zz_2868668091
sampled for problem zz_2868668091
sampled for problem zz_1916212122
finished samples sampling for zz_1916212122
 finished run 8 for problem zz_1916212122
 start run 9 for problem zz_1916212122
   start samplings 1000 for problem zz_1916212122
sampled for problem zz_1916212122
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_7619482988
finished samples sampling for zz_7619482988
 finished run 7 for problem zz_7619482988
 start run 8 for problem zz_7619482988
   start samplings 1000 for problem zz_7619482988
sampled for problem zz_7619482988
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0609764094
finished samples sampling for zz_0609764094
 finished run 8 for problem zz_0609764094
 start run 9 for problem zz_0609764094
   start samplings 1000 for problem zz_0609764094
sampled for problem zz_0609764094
sampled for problem zz_7629313757
finished samples sampling for zz_7629313757
 finished run 9 for problem zz_7629313757
 succesfully retrieved answer for problem {} zz_7629313757
 start working on problem zz_1566314580
 start writing answer for problem {} zz_7629313757
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f31e8265400>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f31e8265400>
 problem zz_1566314580 will take can be sampled with a single run
 problem zz_1566314580 will be solved 1 times per run
 start run 0 for problem zz_1566314580
   start samplings 1000 for problem zz_1566314580
sampled for problem zz_1566314580
sampled for problem zz_5314019901
finished samples sampling for zz_5314019901
 finished run 8 for problem zz_5314019901
 start run 9 for problem zz_5314019901
   start samplings 1000 for problem zz_5314019901
sampled for problem zz_5314019901
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_0651999763
finished samples sampling for zz_0651999763
 finished run 8 for problem zz_0651999763
 start run 9 for problem zz_0651999763
   start samplings 1000 for problem zz_0651999763
sampled for problem zz_0651999763
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_4275832690
finished samples sampling for zz_4275832690
 finished run 9 for problem zz_4275832690
 succesfully retrieved answer for problem {} zz_4275832690
 start working on problem zz_0984166701
 start writing answer for problem {} zz_4275832690
 Queue sizes: problems_to_submit = 6, answers_to_write = 0
 problem zz_0984166701 will take can be sampled with a single run
 problem zz_0984166701 will be solved 1 times per run
 start run 0 for problem zz_0984166701
   start samplings 1000 for problem zz_0984166701
sampled for problem zz_0984166701
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f3048367b30>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f3048367b30>
 Queue sizes: problems_to_submit = 6, answers_to_write = 0
sampled for problem zz_2868668091
finished samples sampling for zz_2868668091
 finished run 8 for problem zz_2868668091
 start run 9 for problem zz_2868668091
   start samplings 1000 for problem zz_2868668091
sampled for problem zz_2868668091
 Queue sizes: problems_to_submit = 6, answers_to_write = 0
sampled for problem zz_1916212122
finished samples sampling for zz_1916212122
 finished run 9 for problem zz_1916212122
 succesfully retrieved answer for problem {} zz_1916212122
 start working on problem zz_4213021836
 problem zz_4213021836 will take can be sampled with a single run
 problem zz_4213021836 will be solved 1 times per run
 start run 0 for problem zz_4213021836
   start samplings 1000 for problem zz_4213021836
sampled for problem zz_4213021836
 Queue sizes: problems_to_submit = 5, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_7766207770
 start writing answer for problem {} zz_7781104199
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb2267bd610>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb2267bd610>
sampled for problem zz_0085220014
finished samples sampling for zz_0085220014
 finished run 0 for problem zz_0085220014
 start run 1 for problem zz_0085220014
   start samplings 1000 for problem zz_0085220014
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_0085220014
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0458068226
 start writing answer for problem {} zz_2992420796
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb22671d6a0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb22671d6a0>
sampled for problem zz_7223102935
finished samples sampling for zz_7223102935
 finished run 0 for problem zz_7223102935
 start run 1 for problem zz_7223102935
   start samplings 1000 for problem zz_7223102935
sampled for problem zz_7223102935
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_4197625176
finished samples sampling for zz_4197625176
 finished run 1 for problem zz_4197625176
 start run 2 for problem zz_4197625176
   start samplings 1000 for problem zz_4197625176
sampled for problem zz_4197625176
sampled for problem zz_1534170724
finished samples sampling for zz_1534170724
 finished run 2 for problem zz_1534170724
 start run 3 for problem zz_1534170724
   start samplings 1000 for problem zz_1534170724
sampled for problem zz_1534170724
sampled for problem zz_8229547046
finished samples sampling for zz_8229547046
 finished run 1 for problem zz_8229547046
 start run 2 for problem zz_8229547046
   start samplings 1000 for problem zz_8229547046
sampled for problem zz_8229547046
sampled for problem zz_8661404323
finished samples sampling for zz_8661404323
 finished run 1 for problem zz_8661404323
 start run 2 for problem zz_8661404323
   start samplings 1000 for problem zz_8661404323
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_8661404323
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8821900078
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4874220685
finished samples sampling for zz_4874220685
 finished run 4 for problem zz_4874220685
 start run 5 for problem zz_4874220685
   start samplings 1000 for problem zz_4874220685
sampled for problem zz_4874220685
sampled for problem zz_6502573580
finished samples sampling for zz_6502573580
 finished run 4 for problem zz_6502573580
 start run 5 for problem zz_6502573580
   start samplings 1000 for problem zz_6502573580
sampled for problem zz_6502573580
sampled for problem zz_5860958113
finished samples sampling for zz_5860958113
 finished run 4 for problem zz_5860958113
 start run 5 for problem zz_5860958113
   start samplings 1000 for problem zz_5860958113
sampled for problem zz_5860958113
sampled for problem zz_0061234211
finished samples sampling for zz_0061234211
 finished run 4 for problem zz_0061234211
 start run 5 for problem zz_0061234211
   start samplings 1000 for problem zz_0061234211
sampled for problem zz_0061234211
sampled for problem zz_5775954040
finished samples sampling for zz_5775954040
 finished run 4 for problem zz_5775954040
 start run 5 for problem zz_5775954040
   start samplings 1000 for problem zz_5775954040
sampled for problem zz_5775954040
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0675013443
finished samples sampling for zz_0675013443
 finished run 5 for problem zz_0675013443
 start run 6 for problem zz_0675013443
   start samplings 1000 for problem zz_0675013443
sampled for problem zz_0675013443
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_8355420116
finished samples sampling for zz_8355420116
 finished run 5 for problem zz_8355420116
 start run 6 for problem zz_8355420116
   start samplings 1000 for problem zz_8355420116
sampled for problem zz_8355420116
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4978626801
finished samples sampling for zz_4978626801
 finished run 5 for problem zz_4978626801
 start run 6 for problem zz_4978626801
   start samplings 1000 for problem zz_4978626801
sampled for problem zz_4978626801
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4874220685
finished samples sampling for zz_4874220685
 finished run 5 for problem zz_4874220685
 start run 6 for problem zz_4874220685
   start samplings 1000 for problem zz_4874220685
sampled for problem zz_4874220685
sampled for problem zz_6502573580
finished samples sampling for zz_6502573580
 finished run 5 for problem zz_6502573580
 start run 6 for problem zz_6502573580
   start samplings 1000 for problem zz_6502573580
sampled for problem zz_6502573580
sampled for problem zz_5860958113
finished samples sampling for zz_5860958113
 finished run 5 for problem zz_5860958113
 start run 6 for problem zz_5860958113
   start samplings 1000 for problem zz_5860958113
sampled for problem zz_5860958113
sampled for problem zz_0061234211
finished samples sampling for zz_0061234211
 finished run 5 for problem zz_0061234211
 start run 6 for problem zz_0061234211
   start samplings 1000 for problem zz_0061234211
sampled for problem zz_0061234211
sampled for problem zz_5775954040
finished samples sampling for zz_5775954040
 finished run 5 for problem zz_5775954040
 start run 6 for problem zz_5775954040
   start samplings 1000 for problem zz_5775954040
sampled for problem zz_5775954040
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0675013443
finished samples sampling for zz_0675013443
 finished run 6 for problem zz_0675013443
 start run 7 for problem zz_0675013443
   start samplings 1000 for problem zz_0675013443
sampled for problem zz_0675013443
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_8355420116
finished samples sampling for zz_8355420116
 finished run 6 for problem zz_8355420116
 start run 7 for problem zz_8355420116
   start samplings 1000 for problem zz_8355420116
sampled for problem zz_8355420116
sampled for problem zz_4978626801
finished samples sampling for zz_4978626801
 finished run 6 for problem zz_4978626801
 start run 7 for problem zz_4978626801
   start samplings 1000 for problem zz_4978626801
sampled for problem zz_4978626801
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4874220685
finished samples sampling for zz_4874220685
 finished run 6 for problem zz_4874220685
 start run 7 for problem zz_4874220685
   start samplings 1000 for problem zz_4874220685
sampled for problem zz_4874220685
sampled for problem zz_6502573580
finished samples sampling for zz_6502573580
 finished run 6 for problem zz_6502573580
 start run 7 for problem zz_6502573580
   start samplings 1000 for problem zz_6502573580
sampled for problem zz_6502573580
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_5860958113
finished samples sampling for zz_5860958113
 finished run 6 for problem zz_5860958113
 start run 7 for problem zz_5860958113
   start samplings 1000 for problem zz_5860958113
sampled for problem zz_5860958113
sampled for problem zz_0061234211
finished samples sampling for zz_0061234211
 finished run 6 for problem zz_0061234211
 start run 7 for problem zz_0061234211
   start samplings 1000 for problem zz_0061234211
sampled for problem zz_0061234211
sampled for problem zz_5775954040
finished samples sampling for zz_5775954040
 finished run 6 for problem zz_5775954040
 start run 7 for problem zz_5775954040
   start samplings 1000 for problem zz_5775954040
sampled for problem zz_5775954040
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0675013443
finished samples sampling for zz_0675013443
 finished run 7 for problem zz_0675013443
 start run 8 for problem zz_0675013443
   start samplings 1000 for problem zz_0675013443
sampled for problem zz_0675013443
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_8355420116
finished samples sampling for zz_8355420116
 finished run 7 for problem zz_8355420116
 start run 8 for problem zz_8355420116
   start samplings 1000 for problem zz_8355420116
sampled for problem zz_8355420116
sampled for problem zz_4978626801
finished samples sampling for zz_4978626801
 finished run 7 for problem zz_4978626801
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_5249775500
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_3242687376
finished samples sampling for zz_3242687376
 finished run 4 for problem zz_3242687376
 start run 5 for problem zz_3242687376
   start samplings 1000 for problem zz_3242687376
sampled for problem zz_3242687376
sampled for problem zz_3451907868
finished samples sampling for zz_3451907868
 finished run 5 for problem zz_3451907868
 start run 6 for problem zz_3451907868
   start samplings 1000 for problem zz_3451907868
sampled for problem zz_3451907868
sampled for problem zz_5125038959
finished samples sampling for zz_5125038959
 finished run 4 for problem zz_5125038959
 start run 5 for problem zz_5125038959
   start samplings 1000 for problem zz_5125038959
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_5347903740
finished samples sampling for zz_5347903740
 finished run 4 for problem zz_5347903740
 start run 5 for problem zz_5347903740
   start samplings 1000 for problem zz_5347903740
sampled for problem zz_5125038959
sampled for problem zz_5347903740
sampled for problem zz_0437237586
finished samples sampling for zz_0437237586
 finished run 4 for problem zz_0437237586
 start run 5 for problem zz_0437237586
   start samplings 1000 for problem zz_0437237586
sampled for problem zz_0437237586
sampled for problem zz_4160526692
finished samples sampling for zz_4160526692
 finished run 4 for problem zz_4160526692
 start run 5 for problem zz_4160526692
   start samplings 1000 for problem zz_4160526692
sampled for problem zz_4160526692
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6514437321
finished samples sampling for zz_6514437321
 finished run 4 for problem zz_6514437321
 start run 5 for problem zz_6514437321
   start samplings 1000 for problem zz_6514437321
sampled for problem zz_6514437321
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_8267963959
finished samples sampling for zz_8267963959
 finished run 5 for problem zz_8267963959
 start run 6 for problem zz_8267963959
   start samplings 1000 for problem zz_8267963959
sampled for problem zz_8267963959
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_3242687376
finished samples sampling for zz_3242687376
 finished run 5 for problem zz_3242687376
 start run 6 for problem zz_3242687376
   start samplings 1000 for problem zz_3242687376
sampled for problem zz_3242687376
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_3451907868
finished samples sampling for zz_3451907868
 finished run 6 for problem zz_3451907868
 start run 7 for problem zz_3451907868
   start samplings 1000 for problem zz_3451907868
sampled for problem zz_3451907868
sampled for problem zz_5125038959
finished samples sampling for zz_5125038959
 finished run 5 for problem zz_5125038959
 start run 6 for problem zz_5125038959
   start samplings 1000 for problem zz_5125038959
sampled for problem zz_5125038959
sampled for problem zz_5347903740
finished samples sampling for zz_5347903740
 finished run 5 for problem zz_5347903740
 start run 6 for problem zz_5347903740
   start samplings 1000 for problem zz_5347903740
sampled for problem zz_5347903740
sampled for problem zz_0437237586
finished samples sampling for zz_0437237586
 finished run 5 for problem zz_0437237586
 start run 6 for problem zz_0437237586
   start samplings 1000 for problem zz_0437237586
sampled for problem zz_0437237586
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4160526692
finished samples sampling for zz_4160526692
 finished run 5 for problem zz_4160526692
 start run 6 for problem zz_4160526692
   start samplings 1000 for problem zz_4160526692
sampled for problem zz_4160526692
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6514437321
finished samples sampling for zz_6514437321
 finished run 5 for problem zz_6514437321
 start run 6 for problem zz_6514437321
   start samplings 1000 for problem zz_6514437321
sampled for problem zz_6514437321
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_8267963959
finished samples sampling for zz_8267963959
 finished run 6 for problem zz_8267963959
 start run 7 for problem zz_8267963959
   start samplings 1000 for problem zz_8267963959
sampled for problem zz_8267963959
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_3242687376
finished samples sampling for zz_3242687376
 finished run 6 for problem zz_3242687376
 start run 7 for problem zz_3242687376
   start samplings 1000 for problem zz_3242687376
sampled for problem zz_3242687376
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_3451907868
finished samples sampling for zz_3451907868
 finished run 7 for problem zz_3451907868
 start run 8 for problem zz_3451907868
   start samplings 1000 for problem zz_3451907868
sampled for problem zz_3451907868
sampled for problem zz_5125038959
finished samples sampling for zz_5125038959
 finished run 6 for problem zz_5125038959
 start run 7 for problem zz_5125038959
   start samplings 1000 for problem zz_5125038959
sampled for problem zz_5125038959
sampled for problem zz_5347903740
finished samples sampling for zz_5347903740
 finished run 6 for problem zz_5347903740
 start run 7 for problem zz_5347903740
   start samplings 1000 for problem zz_5347903740
sampled for problem zz_5347903740
sampled for problem zz_0437237586
finished samples sampling for zz_0437237586
 finished run 6 for problem zz_0437237586
 start run 7 for problem zz_0437237586
   start samplings 1000 for problem zz_0437237586
sampled for problem zz_0437237586
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4160526692
finished samples sampling for zz_4160526692
 finished run 6 for problem zz_4160526692
 start run 7 for problem zz_4160526692
   start samplings 1000 for problem zz_4160526692
sampled for problem zz_4160526692
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6514437321
finished samples sampling for zz_6514437321
 finished run 6 for problem zz_6514437321
 start run 7 for problem zz_6514437321
   start samplings 1000 for problem zz_6514437321
sampled for problem zz_6514437321
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_8267963959
finished samples sampling for zz_8267963959
 finished run 7 for problem zz_8267963959
 start run 8 for problem zz_8267963959
   start samplings 1000 for problem zz_8267963959
sampled for problem zz_8267963959
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_7421375757
finished samples sampling for zz_7421375757
 finished run 2 for problem zz_7421375757
 start run 3 for problem zz_7421375757
   start samplings 1000 for problem zz_7421375757
sampled for problem zz_7421375757
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_7781104199
 start writing answer for problem {} zz_4413425408
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb0f6edecf0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb0f6edecf0>
sampled for problem zz_2290663268
finished samples sampling for zz_2290663268
 finished run 1 for problem zz_2290663268
 start run 2 for problem zz_2290663268
   start samplings 1000 for problem zz_2290663268
sampled for problem zz_2290663268
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_0085220014
finished samples sampling for zz_0085220014
 finished run 1 for problem zz_0085220014
 start run 2 for problem zz_0085220014
   start samplings 1000 for problem zz_0085220014
sampled for problem zz_0085220014
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_7223102935
finished samples sampling for zz_7223102935
 finished run 1 for problem zz_7223102935
 start run 2 for problem zz_7223102935
   start samplings 1000 for problem zz_7223102935
sampled for problem zz_7223102935
sampled for problem zz_4197625176
finished samples sampling for zz_4197625176
 finished run 2 for problem zz_4197625176
 start run 3 for problem zz_4197625176
   start samplings 1000 for problem zz_4197625176
sampled for problem zz_4197625176
sampled for problem zz_1534170724
finished samples sampling for zz_1534170724
 finished run 3 for problem zz_1534170724
 start run 4 for problem zz_1534170724
   start samplings 1000 for problem zz_1534170724
sampled for problem zz_1534170724
sampled for problem zz_8229547046
finished samples sampling for zz_8229547046
 finished run 2 for problem zz_8229547046
 start run 3 for problem zz_8229547046
   start samplings 1000 for problem zz_8229547046
sampled for problem zz_8229547046
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_8661404323
finished samples sampling for zz_8661404323
 finished run 2 for problem zz_8661404323
 start run 3 for problem zz_8661404323
   start samplings 1000 for problem zz_8661404323
sampled for problem zz_8661404323
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)]) Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0960471698
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_8486709234
finished samples sampling for zz_8486709234
 finished run 4 for problem zz_8486709234
 start run 5 for problem zz_8486709234
   start samplings 1000 for problem zz_8486709234
sampled for problem zz_8486709234
sampled for problem zz_0229631392
finished samples sampling for zz_0229631392
 finished run 4 for problem zz_0229631392
 start run 5 for problem zz_0229631392
   start samplings 1000 for problem zz_0229631392
sampled for problem zz_0229631392
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_2106543518
finished samples sampling for zz_2106543518
 finished run 4 for problem zz_2106543518
 start run 5 for problem zz_2106543518
   start samplings 1000 for problem zz_2106543518
sampled for problem zz_2106543518
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_5919623735
finished samples sampling for zz_5919623735
 finished run 4 for problem zz_5919623735
 start run 5 for problem zz_5919623735
   start samplings 1000 for problem zz_5919623735
sampled for problem zz_5919623735
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_0357328613
finished samples sampling for zz_0357328613
 finished run 5 for problem zz_0357328613
 start run 6 for problem zz_0357328613
   start samplings 1000 for problem zz_0357328613
sampled for problem zz_0357328613
sampled for problem zz_9456648355
finished samples sampling for zz_9456648355
 finished run 5 for problem zz_9456648355
 start run 6 for problem zz_9456648355
   start samplings 1000 for problem zz_9456648355
sampled for problem zz_9456648355
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_5585617994
finished samples sampling for zz_5585617994
 finished run 5 for problem zz_5585617994
 start run 6 for problem zz_5585617994
   start samplings 1000 for problem zz_5585617994
sampled for problem zz_5585617994
sampled for problem zz_2411961934
finished samples sampling for zz_2411961934
 finished run 5 for problem zz_2411961934
 start run 6 for problem zz_2411961934
   start samplings 1000 for problem zz_2411961934
sampled for problem zz_2411961934
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_8486709234
finished samples sampling for zz_8486709234
 finished run 5 for problem zz_8486709234
 start run 6 for problem zz_8486709234
   start samplings 1000 for problem zz_8486709234
sampled for problem zz_8486709234
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_0229631392
finished samples sampling for zz_0229631392
 finished run 5 for problem zz_0229631392
 start run 6 for problem zz_0229631392
   start samplings 1000 for problem zz_0229631392
sampled for problem zz_0229631392
sampled for problem zz_2106543518
finished samples sampling for zz_2106543518
 finished run 5 for problem zz_2106543518
 start run 6 for problem zz_2106543518
   start samplings 1000 for problem zz_2106543518
sampled for problem zz_2106543518
sampled for problem zz_5919623735
finished samples sampling for zz_5919623735
 finished run 5 for problem zz_5919623735
 start run 6 for problem zz_5919623735
   start samplings 1000 for problem zz_5919623735
sampled for problem zz_5919623735
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_0357328613
finished samples sampling for zz_0357328613
 finished run 6 for problem zz_0357328613
 start run 7 for problem zz_0357328613
   start samplings 1000 for problem zz_0357328613
sampled for problem zz_0357328613
sampled for problem zz_9456648355
finished samples sampling for zz_9456648355
 finished run 6 for problem zz_9456648355
 start run 7 for problem zz_9456648355
   start samplings 1000 for problem zz_9456648355
sampled for problem zz_9456648355
sampled for problem zz_5585617994
finished samples sampling for zz_5585617994
 finished run 6 for problem zz_5585617994
 start run 7 for problem zz_5585617994
   start samplings 1000 for problem zz_5585617994
sampled for problem zz_5585617994
sampled for problem zz_2411961934
finished samples sampling for zz_2411961934
 finished run 6 for problem zz_2411961934
 start run 7 for problem zz_2411961934
   start samplings 1000 for problem zz_2411961934
sampled for problem zz_2411961934
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_8486709234
finished samples sampling for zz_8486709234
 finished run 6 for problem zz_8486709234
 start run 7 for problem zz_8486709234
   start samplings 1000 for problem zz_8486709234
sampled for problem zz_8486709234
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_0229631392
finished samples sampling for zz_0229631392
 finished run 6 for problem zz_0229631392
 start run 7 for problem zz_0229631392
   start samplings 1000 for problem zz_0229631392
sampled for problem zz_0229631392
sampled for problem zz_2106543518
finished samples sampling for zz_2106543518
 finished run 6 for problem zz_2106543518
 start run 7 for problem zz_2106543518
   start samplings 1000 for problem zz_2106543518
sampled for problem zz_2106543518
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_5919623735
finished samples sampling for zz_5919623735
 finished run 6 for problem zz_5919623735
 start run 7 for problem zz_5919623735
   start samplings 1000 for problem zz_5919623735
sampled for problem zz_5919623735
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_0357328613
finished samples sampling for zz_0357328613
 finished run 7 for problem zz_0357328613
 start run 8 for problem zz_0357328613
 finished writing answer for problem {} zz_7629313757
 start writing answer for problem {} zz_1916212122
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f3012f91fd0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f3012f91fd0>
 Queue sizes: problems_to_submit = 5, answers_to_write = 0
sampled for problem zz_7619482988
finished samples sampling for zz_7619482988
 finished run 8 for problem zz_7619482988
 start run 9 for problem zz_7619482988
   start samplings 1000 for problem zz_7619482988
sampled for problem zz_7619482988
 Queue sizes: problems_to_submit = 5, answers_to_write = 0
sampled for problem zz_0609764094
finished samples sampling for zz_0609764094
 finished run 9 for problem zz_0609764094
 succesfully retrieved answer for problem {} zz_0609764094
 start working on problem zz_9713990306
 Queue sizes: problems_to_submit = 4, answers_to_write = 1
 problem zz_9713990306 will take can be sampled with a single run
 problem zz_9713990306 will be solved 1 times per run
sampled for problem zz_1566314580
finished samples sampling for zz_1566314580
 finished run 0 for problem zz_1566314580
 start run 1 for problem zz_1566314580
   start samplings 1000 for problem zz_1566314580
sampled for problem zz_5314019901
finished samples sampling for zz_5314019901
 finished run 9 for problem zz_5314019901
sampled for problem zz_1566314580
sampled for problem zz_0651999763
finished samples sampling for zz_0651999763
 finished run 9 for problem zz_0651999763
 start run 0 for problem zz_9713990306
   start samplings 1000 for problem zz_9713990306
sampled for problem zz_9713990306
 succesfully retrieved answer for problem {} zz_5314019901
 start working on problem zz_7103584348
 succesfully retrieved answer for problem {} zz_0651999763
 start working on problem zz_1130858706
 problem zz_7103584348 will take can be sampled with a single run
 problem zz_7103584348 will be solved 1 times per run
 start run 0 for problem zz_7103584348
   start samplings 1000 for problem zz_7103584348
sampled for problem zz_7103584348
 Queue sizes: problems_to_submit = 2, answers_to_write = 3
 problem zz_1130858706 will take can be sampled with a single run
 problem zz_1130858706 will be solved 1 times per run
 start run 0 for problem zz_1130858706
   start samplings 1000 for problem zz_1130858706
sampled for problem zz_1130858706
sampled for problem zz_0984166701
finished samples sampling for zz_0984166701
 finished run 0 for problem zz_0984166701
 start run 1 for problem zz_0984166701
   start samplings 1000 for problem zz_0984166701
sampled for problem zz_0984166701
 Queue sizes: problems_to_submit = 2, answers_to_write = 3
sampled for problem zz_2868668091
finished samples sampling for zz_2868668091
 finished run 9 for problem zz_2868668091
 succesfully retrieved answer for problem {} zz_2868668091
 start working on problem zz_3657359779
 Queue sizes: problems_to_submit = 1, answers_to_write = 4
 problem zz_3657359779 will take can be sampled with a single run
 problem zz_3657359779 will be solved 1 times per run
 start run 0 for problem zz_3657359779
   start samplings 1000 for problem zz_3657359779
sampled for problem zz_3657359779
sampled for problem zz_4213021836
finished samples sampling for zz_4213021836
 finished run 0 for problem zz_4213021836
 start run 1 for problem zz_4213021836
   start samplings 1000 for problem zz_4213021836
sampled for problem zz_4213021836
 Queue sizes: problems_to_submit = 1, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_4275832690
 start writing answer for problem {} zz_0609764094
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f30281fa2a0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f30281fa2a0>
 Queue sizes: problems_to_submit = 1, answers_to_write = 3
sampled for problem zz_7619482988
finished samples sampling for zz_7619482988
 finished run 9 for problem zz_7619482988
 succesfully retrieved answer for problem {} zz_7619482988
 start working on problem zz_2835206639
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 problem zz_2835206639 will take can be sampled with a single run
 problem zz_2835206639 will be solved 1 times per run
 start run 0 for problem zz_2835206639
   start samplings 1000 for problem zz_2835206639
sampled for problem zz_2835206639
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_5060062432
sampled for problem zz_9812323767
finished samples sampling for zz_9812323767
 finished run 4 for problem zz_9812323767
 start run 5 for problem zz_9812323767
   start samplings 1000 for problem zz_9812323767
sampled for problem zz_9812323767
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_8705643469
finished samples sampling for zz_8705643469
 finished run 4 for problem zz_8705643469
 start run 5 for problem zz_8705643469
   start samplings 1000 for problem zz_8705643469
sampled for problem zz_8705643469
sampled for problem zz_1183798611
finished samples sampling for zz_1183798611
 finished run 4 for problem zz_1183798611
 start run 5 for problem zz_1183798611
   start samplings 1000 for problem zz_1183798611
sampled for problem zz_1183798611
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_6252892828
finished samples sampling for zz_6252892828
 finished run 4 for problem zz_6252892828
 start run 5 for problem zz_6252892828
   start samplings 1000 for problem zz_6252892828
sampled for problem zz_6252892828
sampled for problem zz_4337938137
finished samples sampling for zz_4337938137
 finished run 4 for problem zz_4337938137
 start run 5 for problem zz_4337938137
   start samplings 1000 for problem zz_4337938137
sampled for problem zz_4337938137
sampled for problem zz_8342877442
finished samples sampling for zz_8342877442
 finished run 4 for problem zz_8342877442
 start run 5 for problem zz_8342877442
   start samplings 1000 for problem zz_8342877442
sampled for problem zz_8342877442
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_1663139989
finished samples sampling for zz_1663139989
 finished run 4 for problem zz_1663139989
 start run 5 for problem zz_1663139989
   start samplings 1000 for problem zz_1663139989
sampled for problem zz_1663139989
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_5387552259
finished samples sampling for zz_5387552259
 finished run 5 for problem zz_5387552259
 start run 6 for problem zz_5387552259
   start samplings 1000 for problem zz_5387552259
sampled for problem zz_5387552259
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_9812323767
finished samples sampling for zz_9812323767
 finished run 5 for problem zz_9812323767
 start run 6 for problem zz_9812323767
   start samplings 1000 for problem zz_9812323767
sampled for problem zz_9812323767
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_8705643469
finished samples sampling for zz_8705643469
 finished run 5 for problem zz_8705643469
 start run 6 for problem zz_8705643469
   start samplings 1000 for problem zz_8705643469
sampled for problem zz_8705643469
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_1183798611
finished samples sampling for zz_1183798611
 finished run 5 for problem zz_1183798611
 start run 6 for problem zz_1183798611
   start samplings 1000 for problem zz_1183798611
sampled for problem zz_1183798611
sampled for problem zz_6252892828
finished samples sampling for zz_6252892828
 finished run 5 for problem zz_6252892828
 start run 6 for problem zz_6252892828
   start samplings 1000 for problem zz_6252892828
sampled for problem zz_6252892828
sampled for problem zz_8342877442
finished samples sampling for zz_8342877442
 finished run 5 for problem zz_8342877442
 start run 6 for problem zz_8342877442
   start samplings 1000 for problem zz_8342877442
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_8342877442
sampled for problem zz_4337938137
finished samples sampling for zz_4337938137
 finished run 5 for problem zz_4337938137
 start run 6 for problem zz_4337938137
   start samplings 1000 for problem zz_4337938137
sampled for problem zz_4337938137
sampled for problem zz_1663139989
finished samples sampling for zz_1663139989
 finished run 5 for problem zz_1663139989
 start run 6 for problem zz_1663139989
   start samplings 1000 for problem zz_1663139989
sampled for problem zz_1663139989
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_5387552259
finished samples sampling for zz_5387552259
 finished run 6 for problem zz_5387552259
 start run 7 for problem zz_5387552259
   start samplings 1000 for problem zz_5387552259
sampled for problem zz_5387552259
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_9812323767
finished samples sampling for zz_9812323767
 finished run 6 for problem zz_9812323767
 start run 7 for problem zz_9812323767
   start samplings 1000 for problem zz_9812323767
sampled for problem zz_9812323767
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_1183798611
finished samples sampling for zz_1183798611
 finished run 6 for problem zz_1183798611
 start run 7 for problem zz_1183798611
   start samplings 1000 for problem zz_1183798611
sampled for problem zz_1183798611
sampled for problem zz_8705643469
finished samples sampling for zz_8705643469
 finished run 6 for problem zz_8705643469
 start run 7 for problem zz_8705643469
   start samplings 1000 for problem zz_8705643469
sampled for problem zz_8705643469
sampled for problem zz_8342877442
finished samples sampling for zz_8342877442
 finished run 6 for problem zz_8342877442
 start run 7 for problem zz_8342877442
   start samplings 1000 for problem zz_8342877442
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_8342877442
sampled for problem zz_6252892828
finished samples sampling for zz_6252892828
 finished run 6 for problem zz_6252892828
 start run 7 for problem zz_6252892828
   start samplings 1000 for problem zz_6252892828
sampled for problem zz_6252892828
sampled for problem zz_4337938137
finished samples sampling for zz_4337938137
 finished run 6 for problem zz_4337938137
 start run 7 for problem zz_4337938137
   start samplings 1000 for problem zz_4337938137
sampled for problem zz_4337938137
sampled for problem zz_1663139989
finished samples sampling for zz_1663139989
 finished run 6 for problem zz_1663139989
 start run 7 for problem zz_1663139989
   start samplings 1000 for problem zz_1663139989
sampled for problem zz_1663139989
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_5387552259
finished samples sampling for zz_5387552259
 finished run 7 for problem zz_5387552259
 start run 8 for problem zz_5387552259
   start samplings 1000 for problem zz_5387552259
sampled for problem zz_5387552259
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_9812323767
finished samples sampling for zz_9812323767
finished samples sampling for zz_8530174265
 finished run 7 for problem zz_8530174265
 start run 8 for problem zz_8530174265
   start samplings 1000 for problem zz_8530174265
sampled for problem zz_8530174265
sampled for problem zz_6255233176
finished samples sampling for zz_6255233176
 finished run 7 for problem zz_6255233176
 start run 8 for problem zz_6255233176
   start samplings 1000 for problem zz_6255233176
sampled for problem zz_6255233176
sampled for problem zz_2236080878
finished samples sampling for zz_2236080878
 finished run 7 for problem zz_2236080878
 start run 8 for problem zz_2236080878
   start samplings 1000 for problem zz_2236080878
sampled for problem zz_2236080878
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0140728978
finished samples sampling for zz_0140728978
 finished run 7 for problem zz_0140728978
 start run 8 for problem zz_0140728978
   start samplings 1000 for problem zz_0140728978
sampled for problem zz_0140728978
sampled for problem zz_8100679620
finished samples sampling for zz_8100679620
 finished run 7 for problem zz_8100679620
 start run 8 for problem zz_8100679620
   start samplings 1000 for problem zz_8100679620
sampled for problem zz_8100679620
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0487520058
finished samples sampling for zz_0487520058
 finished run 8 for problem zz_0487520058
 start run 9 for problem zz_0487520058
   start samplings 1000 for problem zz_0487520058
sampled for problem zz_0487520058
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_1208695640
finished samples sampling for zz_1208695640
 finished run 8 for problem zz_1208695640
 start run 9 for problem zz_1208695640
   start samplings 1000 for problem zz_1208695640
sampled for problem zz_1208695640
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6935795118
finished samples sampling for zz_6935795118
 finished run 8 for problem zz_6935795118
 start run 9 for problem zz_6935795118
   start samplings 1000 for problem zz_6935795118
sampled for problem zz_6935795118
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_8530174265
finished samples sampling for zz_8530174265
 finished run 8 for problem zz_8530174265
 start run 9 for problem zz_8530174265
   start samplings 1000 for problem zz_8530174265
sampled for problem zz_8530174265
sampled for problem zz_6255233176
finished samples sampling for zz_6255233176
 finished run 8 for problem zz_6255233176
 start run 9 for problem zz_6255233176
   start samplings 1000 for problem zz_6255233176
sampled for problem zz_6255233176
sampled for problem zz_2236080878
finished samples sampling for zz_2236080878
 finished run 8 for problem zz_2236080878
 start run 9 for problem zz_2236080878
   start samplings 1000 for problem zz_2236080878
sampled for problem zz_2236080878
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0140728978
finished samples sampling for zz_0140728978
 finished run 8 for problem zz_0140728978
 start run 9 for problem zz_0140728978
   start samplings 1000 for problem zz_0140728978
sampled for problem zz_0140728978
sampled for problem zz_8100679620
finished samples sampling for zz_8100679620
 finished run 8 for problem zz_8100679620
 start run 9 for problem zz_8100679620
   start samplings 1000 for problem zz_8100679620
sampled for problem zz_8100679620
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0487520058
finished samples sampling for zz_0487520058
 finished run 9 for problem zz_0487520058
 succesfully retrieved answer for problem {} zz_0487520058
 start working on problem zz_0446214293
 start writing answer for problem {} zz_0487520058
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd6983f2540>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd6983f2540>
 problem zz_0446214293 will take can be sampled with a single run
 problem zz_0446214293 will be solved 1 times per run
 start run 0 for problem zz_0446214293
   start samplings 1000 for problem zz_0446214293
sampled for problem zz_0446214293
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_1208695640
finished samples sampling for zz_1208695640
 finished run 9 for problem zz_1208695640
 succesfully retrieved answer for problem {} zz_1208695640
 start working on problem zz_2497804221
 start writing answer for problem {} zz_1208695640
 Queue sizes: problems_to_submit = 6, answers_to_write = 0
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd4d89d8200>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd4d89d8200>
 problem zz_2497804221 will take can be sampled with a single run
 problem zz_2497804221 will be solved 1 times per run
 Queue sizes: problems_to_submit = 6, answers_to_write = 0
 start run 0 for problem zz_2497804221
   start samplings 1000 for problem zz_2497804221
sampled for problem zz_2497804221
sampled for problem zz_6935795118
finished samples sampling for zz_6935795118
 finished run 9 for problem zz_6935795118
sampled for problem zz_8530174265
finished samples sampling for zz_8530174265
 finished run 9 for problem zz_8530174265
sampled for problem zz_6255233176
finished samples sampling for zz_6255233176
 finished run 9 for problem zz_6255233176
 succesfully retrieved answer for problem {} zz_6935795118
 start working on problem zz_0318641083
 Queue sizes: problems_to_submit = 5, answers_to_write = 1
sampled for problem zz_2236080878
finished samples sampling for zz_2236080878
 finished run 9 for problem zz_2236080878
 succesfully retrieved answer for problem {} zz_8530174265
 start working on problem zz_9818300553
sampled for problem zz_0140728978
finished samples sampling for zz_0140728978
 finished run 9 for problem zz_0140728978
 succesfully retrieved answer for problem {} zz_6255233176
 start working on problem zz_6269837941
 problem zz_0318641083 will take can be sampled with a single run
 problem zz_0318641083 will be solved 1 times per run
sampled for problem zz_8100679620
finished samples sampling for zz_8100679620
 finished run 9 for problem zz_8100679620
 succesfully retrieved answer for problem {} zz_2236080878
 start working on problem zz_3559114144
 succesfully retrieved answer for problem {} zz_0140728978
 start working on problem zz_8129357418
 Queue sizes: problems_to_submit = 1, answers_to_write = 5
 problem zz_9818300553 will take can be sampled with a single run
 problem zz_9818300553 will be solved 1 times per run
 start run 0 for problem zz_0318641083
   start samplings 1000 for problem zz_0318641083
sampled for problem zz_0318641083
 problem zz_6269837941 will take can be sampled with a single run
 problem zz_6269837941 will be solved 1 times per run
 problem zz_3559114144 will take can be sampled with a single run
 problem zz_3559114144 will be solved 1 times per run
 Queue sizes: problems_to_submit = 1, answers_to_write = 5
 problem zz_8129357418 will take can be sampled with a single run
 problem zz_8129357418 will be solved 1 times per run
 succesfully retrieved answer for problem {} zz_8100679620
 start working on problem zz_0180383007
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
 problem zz_0180383007 will take can be sampled with a single run
 problem zz_0180383007 will be solved 1 times per run
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
sampled for problem zz_1566314580
finished samples sampling for zz_1566314580
 finished run 1 for problem zz_1566314580
 start run 2 for problem zz_1566314580
   start samplings 1000 for problem zz_1566314580
sampled for problem zz_1566314580
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_9713990306
finished samples sampling for zz_9713990306
 finished run 0 for problem zz_9713990306
 start run 1 for problem zz_9713990306
   start samplings 1000 for problem zz_9713990306
sampled for problem zz_9713990306
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_1916212122
 start writing answer for problem {} zz_5314019901
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f3012510260>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f3012510260>
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_7103584348
finished samples sampling for zz_7103584348
 finished run 0 for problem zz_7103584348
 start run 1 for problem zz_7103584348
   start samplings 1000 for problem zz_7103584348
sampled for problem zz_7103584348
sampled for problem zz_1130858706
finished samples sampling for zz_1130858706
 finished run 0 for problem zz_1130858706
 start run 1 for problem zz_1130858706
   start samplings 1000 for problem zz_1130858706
sampled for problem zz_1130858706
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_0984166701
finished samples sampling for zz_0984166701
 finished run 1 for problem zz_0984166701
 start run 2 for problem zz_0984166701
   start samplings 1000 for problem zz_0984166701
sampled for problem zz_0984166701
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_3657359779
finished samples sampling for zz_3657359779
 finished run 0 for problem zz_3657359779
 start run 1 for problem zz_3657359779
   start samplings 1000 for problem zz_3657359779
sampled for problem zz_3657359779
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_4213021836
finished samples sampling for zz_4213021836
 finished run 1 for problem zz_4213021836
 start run 2 for problem zz_4213021836
   start samplings 1000 for problem zz_4213021836
sampled for problem zz_4213021836
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_2835206639
finished samples sampling for zz_2835206639
 finished run 0 for problem zz_2835206639
 start run 1 for problem zz_2835206639
   start samplings 1000 for problem zz_2835206639
sampled for problem zz_2835206639
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_5314019901
 start writing answer for problem {} zz_0651999763
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f3011c06ea0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f3011c06ea0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_1566314580
finished samples sampling for zz_1566314580
 finished run 2 for problem zz_1566314580
 start run 3 for problem zz_1566314580
   start samplings 1000 for problem zz_1566314580
sampled for problem zz_1566314580
sampled for problem zz_9713990306
finished samples sampling for zz_9713990306
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_3242687376
finished samples sampling for zz_3242687376
 finished run 7 for problem zz_3242687376
 start run 8 for problem zz_3242687376
   start samplings 1000 for problem zz_3242687376
sampled for problem zz_3242687376
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_3451907868
finished samples sampling for zz_3451907868
 finished run 8 for problem zz_3451907868
 start run 9 for problem zz_3451907868
   start samplings 1000 for problem zz_3451907868
sampled for problem zz_3451907868
sampled for problem zz_5125038959
finished samples sampling for zz_5125038959
 finished run 7 for problem zz_5125038959
 start run 8 for problem zz_5125038959
   start samplings 1000 for problem zz_5125038959
sampled for problem zz_5125038959
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_5347903740
finished samples sampling for zz_5347903740
 finished run 7 for problem zz_5347903740
 start run 8 for problem zz_5347903740
   start samplings 1000 for problem zz_5347903740
sampled for problem zz_5347903740
sampled for problem zz_0437237586
finished samples sampling for zz_0437237586
 finished run 7 for problem zz_0437237586
 start run 8 for problem zz_0437237586
   start samplings 1000 for problem zz_0437237586
sampled for problem zz_0437237586
sampled for problem zz_4160526692
finished samples sampling for zz_4160526692
 finished run 7 for problem zz_4160526692
 start run 8 for problem zz_4160526692
   start samplings 1000 for problem zz_4160526692
sampled for problem zz_4160526692
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_6514437321
finished samples sampling for zz_6514437321
 finished run 7 for problem zz_6514437321
 start run 8 for problem zz_6514437321
   start samplings 1000 for problem zz_6514437321
sampled for problem zz_6514437321
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_8267963959
finished samples sampling for zz_8267963959
 finished run 8 for problem zz_8267963959
 start run 9 for problem zz_8267963959
   start samplings 1000 for problem zz_8267963959
sampled for problem zz_8267963959
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_3242687376
finished samples sampling for zz_3242687376
 finished run 8 for problem zz_3242687376
 start run 9 for problem zz_3242687376
   start samplings 1000 for problem zz_3242687376
sampled for problem zz_3242687376
sampled for problem zz_3451907868
finished samples sampling for zz_3451907868
 finished run 9 for problem zz_3451907868
 succesfully retrieved answer for problem {} zz_3451907868
 start working on problem zz_7975579866
sampled for problem zz_5125038959
finished samples sampling for zz_5125038959
 finished run 8 for problem zz_5125038959
 start run 9 for problem zz_5125038959
   start samplings 1000 for problem zz_5125038959
sampled for problem zz_5125038959
 start writing answer for problem {} zz_3451907868
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe49c3e1f70>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe49c3e1f70>
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 problem zz_7975579866 will take can be sampled with a single run
 problem zz_7975579866 will be solved 1 times per run
sampled for problem zz_5347903740
finished samples sampling for zz_5347903740
 finished run 8 for problem zz_5347903740
 start run 9 for problem zz_5347903740
   start samplings 1000 for problem zz_5347903740
sampled for problem zz_5347903740
sampled for problem zz_0437237586
finished samples sampling for zz_0437237586
 finished run 8 for problem zz_0437237586
 start run 9 for problem zz_0437237586
   start samplings 1000 for problem zz_0437237586
sampled for problem zz_0437237586
sampled for problem zz_4160526692
finished samples sampling for zz_4160526692
 finished run 8 for problem zz_4160526692
 start run 9 for problem zz_4160526692
   start samplings 1000 for problem zz_4160526692
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_4160526692
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_6514437321
finished samples sampling for zz_6514437321
 finished run 8 for problem zz_6514437321
 start run 9 for problem zz_6514437321
   start samplings 1000 for problem zz_6514437321
sampled for problem zz_6514437321
 start run 0 for problem zz_7975579866
   start samplings 1000 for problem zz_7975579866
sampled for problem zz_7975579866
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_3451907868
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_8267963959
finished samples sampling for zz_8267963959
 finished run 9 for problem zz_8267963959
 succesfully retrieved answer for problem {} zz_8267963959
 start working on problem zz_2752062414
 start writing answer for problem {} zz_8267963959
 problem zz_2752062414 will take can be sampled with a single run
 problem zz_2752062414 will be solved 1 times per run
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_2992420796
 start writing answer for problem {} zz_0285172740
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb22693b830>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb22693b830>
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_4413425408
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7421375757
finished samples sampling for zz_7421375757
 finished run 3 for problem zz_7421375757
 start run 4 for problem zz_7421375757
   start samplings 1000 for problem zz_7421375757
sampled for problem zz_7421375757
sampled for problem zz_2290663268
finished samples sampling for zz_2290663268
 finished run 2 for problem zz_2290663268
 start run 3 for problem zz_2290663268
   start samplings 1000 for problem zz_2290663268
sampled for problem zz_2290663268
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0085220014
finished samples sampling for zz_0085220014
 finished run 2 for problem zz_0085220014
 start run 3 for problem zz_0085220014
   start samplings 1000 for problem zz_0085220014
sampled for problem zz_0085220014
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0285172740
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7223102935
finished samples sampling for zz_7223102935
 finished run 2 for problem zz_7223102935
 start run 3 for problem zz_7223102935
   start samplings 1000 for problem zz_7223102935
sampled for problem zz_7223102935
sampled for problem zz_1534170724
finished samples sampling for zz_1534170724
 finished run 4 for problem zz_1534170724
 start run 5 for problem zz_1534170724
   start samplings 1000 for problem zz_1534170724
sampled for problem zz_1534170724
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_4197625176
finished samples sampling for zz_4197625176
 finished run 3 for problem zz_4197625176
 start run 4 for problem zz_4197625176
   start samplings 1000 for problem zz_4197625176
sampled for problem zz_4197625176
sampled for problem zz_8229547046
finished samples sampling for zz_8229547046
 finished run 3 for problem zz_8229547046
 start run 4 for problem zz_8229547046
   start samplings 1000 for problem zz_8229547046
sampled for problem zz_8229547046
sampled for problem zz_8661404323
finished samples sampling for zz_8661404323
 finished run 3 for problem zz_8661404323
 start run 4 for problem zz_8661404323
   start samplings 1000 for problem zz_8661404323
sampled for problem zz_8661404323
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7421375757
finished samples sampling for zz_7421375757
 finished run 4 for problem zz_7421375757
 start run 5 for problem zz_7421375757
   start samplings 1000 for problem zz_7421375757
sampled for problem zz_7421375757
sampled for problem zz_2290663268
finished samples sampling for zz_2290663268
 finished run 3 for problem zz_2290663268
 start run 4 for problem zz_2290663268
   start samplings 1000 for problem zz_2290663268
sampled for problem zz_2290663268
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0085220014
finished samples sampling for zz_0085220014
 finished run 3 for problem zz_0085220014
 start run 4 for problem zz_0085220014
   start samplings 1000 for problem zz_0085220014
sampled for problem zz_0085220014
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1534170724
finished samples sampling for zz_1534170724
 finished run 5 for problem zz_1534170724
 start run 6 for problem zz_1534170724
   start samplings 1000 for problem zz_1534170724
 start run 8 for problem zz_4978626801
   start samplings 1000 for problem zz_4978626801
sampled for problem zz_4978626801
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4874220685
finished samples sampling for zz_4874220685
 finished run 7 for problem zz_4874220685
 start run 8 for problem zz_4874220685
   start samplings 1000 for problem zz_4874220685
sampled for problem zz_4874220685
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_5860958113
finished samples sampling for zz_5860958113
 finished run 7 for problem zz_5860958113
 start run 8 for problem zz_5860958113
   start samplings 1000 for problem zz_5860958113
sampled for problem zz_5860958113
sampled for problem zz_6502573580
finished samples sampling for zz_6502573580
 finished run 7 for problem zz_6502573580
 start run 8 for problem zz_6502573580
   start samplings 1000 for problem zz_6502573580
sampled for problem zz_6502573580
sampled for problem zz_0061234211
finished samples sampling for zz_0061234211
 finished run 7 for problem zz_0061234211
 start run 8 for problem zz_0061234211
   start samplings 1000 for problem zz_0061234211
sampled for problem zz_0061234211
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_5775954040
finished samples sampling for zz_5775954040
 finished run 7 for problem zz_5775954040
 start run 8 for problem zz_5775954040
   start samplings 1000 for problem zz_5775954040
sampled for problem zz_5775954040
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0675013443
finished samples sampling for zz_0675013443
 finished run 8 for problem zz_0675013443
 start run 9 for problem zz_0675013443
   start samplings 1000 for problem zz_0675013443
sampled for problem zz_0675013443
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_8355420116
finished samples sampling for zz_8355420116
 finished run 8 for problem zz_8355420116
 start run 9 for problem zz_8355420116
   start samplings 1000 for problem zz_8355420116
sampled for problem zz_8355420116
sampled for problem zz_4978626801
finished samples sampling for zz_4978626801
 finished run 8 for problem zz_4978626801
 start run 9 for problem zz_4978626801
   start samplings 1000 for problem zz_4978626801
sampled for problem zz_4978626801
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_4874220685
finished samples sampling for zz_4874220685
 finished run 8 for problem zz_4874220685
 start run 9 for problem zz_4874220685
   start samplings 1000 for problem zz_4874220685
sampled for problem zz_4874220685
sampled for problem zz_5860958113
finished samples sampling for zz_5860958113
 finished run 8 for problem zz_5860958113
 start run 9 for problem zz_5860958113
   start samplings 1000 for problem zz_5860958113
sampled for problem zz_5860958113
sampled for problem zz_6502573580
finished samples sampling for zz_6502573580
 finished run 8 for problem zz_6502573580
 start run 9 for problem zz_6502573580
   start samplings 1000 for problem zz_6502573580
sampled for problem zz_6502573580
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0061234211
finished samples sampling for zz_0061234211
 finished run 8 for problem zz_0061234211
 start run 9 for problem zz_0061234211
   start samplings 1000 for problem zz_0061234211
sampled for problem zz_0061234211
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_5775954040
finished samples sampling for zz_5775954040
 finished run 8 for problem zz_5775954040
 start run 9 for problem zz_5775954040
   start samplings 1000 for problem zz_5775954040
sampled for problem zz_5775954040
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
 Queue sizes: problems_to_submit = 8, answers_to_write = 0
sampled for problem zz_0675013443
finished samples sampling for zz_0675013443
 finished run 9 for problem zz_0675013443
 succesfully retrieved answer for problem {} zz_0675013443
 start working on problem zz_3172680174
 start writing answer for problem {} zz_0675013443
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f78b82f7ef0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f78b82f7ef0>
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 problem zz_3172680174 will take can be sampled with a single run
 problem zz_3172680174 will be solved 1 times per run
sampled for problem zz_4978626801
finished samples sampling for zz_4978626801
 finished run 9 for problem zz_4978626801
sampled for problem zz_8355420116
finished samples sampling for zz_8355420116
 finished run 9 for problem zz_8355420116
 start run 0 for problem zz_3172680174
   start samplings 1000 for problem zz_3172680174
sampled for problem zz_3172680174
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_4874220685
finished samples sampling for zz_4874220685
 finished run 9 for problem zz_4874220685
 succesfully retrieved answer for problem {} zz_4978626801
 start working on problem zz_7137191291
 succesfully retrieved answer for problem {} zz_8355420116
 start working on problem zz_5044724301
 succesfully retrieved answer for problem {} zz_4874220685
 start writing answer for problem {} zz_4978626801
 start working on problem zz_3454216945
 problem zz_7137191291 will take can be sampled with a single run
 problem zz_7137191291 will be solved 1 times per run
 start run 0 for problem zz_7137191291
   start samplings 1000 for problem zz_7137191291
sampled for problem zz_7137191291
 Queue sizes: problems_to_submit = 4, answers_to_write = 2
sampled for problem zz_6502573580
finished samples sampling for zz_6502573580
 finished run 9 for problem zz_6502573580
sampled for problem zz_5860958113
finished samples sampling for zz_5860958113
 finished run 9 for problem zz_5860958113
 problem zz_3454216945 will take can be sampled with a single run
 problem zz_3454216945 will be solved 1 times per run
sampled for problem zz_0061234211
finished samples sampling for zz_0061234211
 finished run 9 for problem zz_0061234211
 problem zz_5044724301 will take can be sampled with a single run
 problem zz_5044724301 will be solved 1 times per run
 succesfully retrieved answer for problem {} zz_6502573580
 start working on problem zz_8611608945
sampled for problem zz_5775954040
finished samples sampling for zz_5775954040
 finished run 9 for problem zz_5775954040
 succesfully retrieved answer for problem {} zz_5860958113
 start working on problem zz_1357117085
 start run 0 for problem zz_3454216945
   start samplings 1000 for problem zz_3454216945
sampled for problem zz_3454216945
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f770036e990>
 succesfully retrieved answer for problem {} zz_0061234211
 start working on problem zz_8281893723
 problem zz_8611608945 will take can be sampled with a single run
 problem zz_8611608945 will be solved 1 times per run
 start run 0 for problem zz_5044724301
   start samplings 1000 for problem zz_5044724301
sampled for problem zz_5044724301
 succesfully retrieved answer for problem {} zz_5775954040
 start working on problem zz_0616570644
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
 problem zz_1357117085 will take can be sampled with a single run
 problem zz_1357117085 will be solved 1 times per run
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
 start run 0 for problem zz_8611608945
   start samplings 1000 for problem zz_8611608945
 problem zz_8281893723 will take can be sampled with a single run
 finished run 7 for problem zz_9812323767
 start run 8 for problem zz_9812323767
   start samplings 1000 for problem zz_9812323767
sampled for problem zz_9812323767
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_1183798611
finished samples sampling for zz_1183798611
 finished run 7 for problem zz_1183798611
 start run 8 for problem zz_1183798611
   start samplings 1000 for problem zz_1183798611
sampled for problem zz_1183798611
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_8705643469
finished samples sampling for zz_8705643469
 finished run 7 for problem zz_8705643469
 start run 8 for problem zz_8705643469
   start samplings 1000 for problem zz_8705643469
sampled for problem zz_8705643469
sampled for problem zz_8342877442
finished samples sampling for zz_8342877442
 finished run 7 for problem zz_8342877442
 start run 8 for problem zz_8342877442
   start samplings 1000 for problem zz_8342877442
sampled for problem zz_8342877442
sampled for problem zz_6252892828
finished samples sampling for zz_6252892828
 finished run 7 for problem zz_6252892828
 start run 8 for problem zz_6252892828
   start samplings 1000 for problem zz_6252892828
sampled for problem zz_6252892828
sampled for problem zz_4337938137
finished samples sampling for zz_4337938137
 finished run 7 for problem zz_4337938137
 start run 8 for problem zz_4337938137
   start samplings 1000 for problem zz_4337938137
sampled for problem zz_4337938137
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_1663139989
finished samples sampling for zz_1663139989
 finished run 7 for problem zz_1663139989
 start run 8 for problem zz_1663139989
   start samplings 1000 for problem zz_1663139989
sampled for problem zz_1663139989
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_5387552259
finished samples sampling for zz_5387552259
 finished run 8 for problem zz_5387552259
 start run 9 for problem zz_5387552259
   start samplings 1000 for problem zz_5387552259
sampled for problem zz_5387552259
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_9812323767
finished samples sampling for zz_9812323767
 finished run 8 for problem zz_9812323767
 start run 9 for problem zz_9812323767
   start samplings 1000 for problem zz_9812323767
sampled for problem zz_9812323767
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_1183798611
finished samples sampling for zz_1183798611
 finished run 8 for problem zz_1183798611
 start run 9 for problem zz_1183798611
   start samplings 1000 for problem zz_1183798611
sampled for problem zz_1183798611
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_8705643469
finished samples sampling for zz_8705643469
 finished run 8 for problem zz_8705643469
 start run 9 for problem zz_8705643469
   start samplings 1000 for problem zz_8705643469
sampled for problem zz_8705643469
sampled for problem zz_8342877442
finished samples sampling for zz_8342877442
 finished run 8 for problem zz_8342877442
 start run 9 for problem zz_8342877442
   start samplings 1000 for problem zz_8342877442
sampled for problem zz_8342877442
sampled for problem zz_6252892828
finished samples sampling for zz_6252892828
 finished run 8 for problem zz_6252892828
 start run 9 for problem zz_6252892828
   start samplings 1000 for problem zz_6252892828
sampled for problem zz_6252892828
sampled for problem zz_4337938137
finished samples sampling for zz_4337938137
 finished run 8 for problem zz_4337938137
 start run 9 for problem zz_4337938137
   start samplings 1000 for problem zz_4337938137
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_4337938137
sampled for problem zz_1663139989
finished samples sampling for zz_1663139989
 finished run 8 for problem zz_1663139989
 start run 9 for problem zz_1663139989
   start samplings 1000 for problem zz_1663139989
sampled for problem zz_1663139989
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_5387552259
finished samples sampling for zz_5387552259
 finished run 9 for problem zz_5387552259
 succesfully retrieved answer for problem {} zz_5387552259
 start working on problem zz_3002816115
 start writing answer for problem {} zz_5387552259
 Queue sizes: problems_to_submit = 6, answers_to_write = 0
 problem zz_3002816115 will take can be sampled with a single run
 problem zz_3002816115 will be solved 1 times per run
 start run 0 for problem zz_3002816115
   start samplings 1000 for problem zz_3002816115
sampled for problem zz_3002816115
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5af02f6c00>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5af02f6c00>
 Queue sizes: problems_to_submit = 6, answers_to_write = 0
 Queue sizes: problems_to_submit = 6, answers_to_write = 0
sampled for problem zz_9812323767
finished samples sampling for zz_9812323767
 finished run 9 for problem zz_9812323767
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_5387552259
 start run 0 for problem zz_9818300553
   start samplings 1000 for problem zz_9818300553
sampled for problem zz_9818300553
sampled for problem zz_0446214293
finished samples sampling for zz_0446214293
 finished run 0 for problem zz_0446214293
 start run 1 for problem zz_0446214293
   start samplings 1000 for problem zz_0446214293
sampled for problem zz_0446214293
 start run 0 for problem zz_6269837941
   start samplings 1000 for problem zz_6269837941
sampled for problem zz_6269837941
 start run 0 for problem zz_3559114144
   start samplings 1000 for problem zz_3559114144
sampled for problem zz_3559114144
 start run 0 for problem zz_8129357418
   start samplings 1000 for problem zz_8129357418
sampled for problem zz_8129357418
 start run 0 for problem zz_0180383007
   start samplings 1000 for problem zz_0180383007
sampled for problem zz_0180383007
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
sampled for problem zz_2497804221
finished samples sampling for zz_2497804221
 finished run 0 for problem zz_2497804221
 start run 1 for problem zz_2497804221
   start samplings 1000 for problem zz_2497804221
sampled for problem zz_2497804221
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0487520058
 start writing answer for problem {} zz_6935795118
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd4d7fe23c0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd4d7fe23c0>
sampled for problem zz_0318641083
finished samples sampling for zz_0318641083
 finished run 0 for problem zz_0318641083
 start run 1 for problem zz_0318641083
   start samplings 1000 for problem zz_0318641083
sampled for problem zz_0318641083
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
sampled for problem zz_9818300553
finished samples sampling for zz_9818300553
 finished run 0 for problem zz_9818300553
 start run 1 for problem zz_9818300553
   start samplings 1000 for problem zz_9818300553
sampled for problem zz_9818300553
sampled for problem zz_0446214293
finished samples sampling for zz_0446214293
 finished run 1 for problem zz_0446214293
 start run 2 for problem zz_0446214293
   start samplings 1000 for problem zz_0446214293
sampled for problem zz_0446214293
sampled for problem zz_6269837941
finished samples sampling for zz_6269837941
 finished run 0 for problem zz_6269837941
 start run 1 for problem zz_6269837941
   start samplings 1000 for problem zz_6269837941
sampled for problem zz_6269837941
sampled for problem zz_3559114144
finished samples sampling for zz_3559114144
 finished run 0 for problem zz_3559114144
 start run 1 for problem zz_3559114144
   start samplings 1000 for problem zz_3559114144
sampled for problem zz_3559114144
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
sampled for problem zz_8129357418
finished samples sampling for zz_8129357418
 finished run 0 for problem zz_8129357418
 start run 1 for problem zz_8129357418
   start samplings 1000 for problem zz_8129357418
sampled for problem zz_8129357418
sampled for problem zz_0180383007
finished samples sampling for zz_0180383007
 finished run 0 for problem zz_0180383007
 start run 1 for problem zz_0180383007
   start samplings 1000 for problem zz_0180383007
sampled for problem zz_0180383007
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
sampled for problem zz_2497804221
finished samples sampling for zz_2497804221
 finished run 1 for problem zz_2497804221
 start run 2 for problem zz_2497804221
   start samplings 1000 for problem zz_2497804221
sampled for problem zz_2497804221
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished run 1 for problem zz_9713990306
 start run 2 for problem zz_9713990306
   start samplings 1000 for problem zz_9713990306
sampled for problem zz_9713990306
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_7103584348
finished samples sampling for zz_7103584348
 finished run 1 for problem zz_7103584348
 start run 2 for problem zz_7103584348
   start samplings 1000 for problem zz_7103584348
sampled for problem zz_7103584348
sampled for problem zz_1130858706
finished samples sampling for zz_1130858706
 finished run 1 for problem zz_1130858706
 start run 2 for problem zz_1130858706
   start samplings 1000 for problem zz_1130858706
sampled for problem zz_1130858706
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_0984166701
finished samples sampling for zz_0984166701
 finished run 2 for problem zz_0984166701
 start run 3 for problem zz_0984166701
   start samplings 1000 for problem zz_0984166701
sampled for problem zz_0984166701
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0609764094
 start writing answer for problem {} zz_2868668091
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f3010258410>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f3010258410>
sampled for problem zz_3657359779
finished samples sampling for zz_3657359779
 finished run 1 for problem zz_3657359779
 start run 2 for problem zz_3657359779
   start samplings 1000 for problem zz_3657359779
sampled for problem zz_3657359779
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_4213021836
finished samples sampling for zz_4213021836
 finished run 2 for problem zz_4213021836
 start run 3 for problem zz_4213021836
   start samplings 1000 for problem zz_4213021836
sampled for problem zz_4213021836
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_2835206639
finished samples sampling for zz_2835206639
 finished run 1 for problem zz_2835206639
 start run 2 for problem zz_2835206639
   start samplings 1000 for problem zz_2835206639
sampled for problem zz_2835206639
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_1566314580
finished samples sampling for zz_1566314580
 finished run 3 for problem zz_1566314580
 start run 4 for problem zz_1566314580
   start samplings 1000 for problem zz_1566314580
sampled for problem zz_1566314580
sampled for problem zz_9713990306
finished samples sampling for zz_9713990306
 finished run 2 for problem zz_9713990306
 start run 3 for problem zz_9713990306
   start samplings 1000 for problem zz_9713990306
sampled for problem zz_9713990306
sampled for problem zz_7103584348
finished samples sampling for zz_7103584348
 finished run 2 for problem zz_7103584348
 start run 3 for problem zz_7103584348
   start samplings 1000 for problem zz_7103584348
sampled for problem zz_7103584348
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_1130858706
finished samples sampling for zz_1130858706
 finished run 2 for problem zz_1130858706
 start run 3 for problem zz_1130858706
   start samplings 1000 for problem zz_1130858706
sampled for problem zz_1130858706
sampled for problem zz_0984166701
finished samples sampling for zz_0984166701
 finished run 3 for problem zz_0984166701
 start run 4 for problem zz_0984166701
   start samplings 1000 for problem zz_0984166701
sampled for problem zz_0984166701
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_3657359779
finished samples sampling for zz_3657359779
 finished run 2 for problem zz_3657359779
 start run 3 for problem zz_3657359779
   start samplings 1000 for problem zz_3657359779
sampled for problem zz_3657359779
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
   start samplings 1000 for problem zz_0357328613
sampled for problem zz_0357328613
sampled for problem zz_9456648355
finished samples sampling for zz_9456648355
 finished run 7 for problem zz_9456648355
 start run 8 for problem zz_9456648355
   start samplings 1000 for problem zz_9456648355
sampled for problem zz_9456648355
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_5585617994
finished samples sampling for zz_5585617994
 finished run 7 for problem zz_5585617994
 start run 8 for problem zz_5585617994
   start samplings 1000 for problem zz_5585617994
sampled for problem zz_5585617994
sampled for problem zz_2411961934
finished samples sampling for zz_2411961934
 finished run 7 for problem zz_2411961934
 start run 8 for problem zz_2411961934
   start samplings 1000 for problem zz_2411961934
sampled for problem zz_2411961934
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_8486709234
finished samples sampling for zz_8486709234
 finished run 7 for problem zz_8486709234
 start run 8 for problem zz_8486709234
   start samplings 1000 for problem zz_8486709234
sampled for problem zz_8486709234
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_0229631392
finished samples sampling for zz_0229631392
 finished run 7 for problem zz_0229631392
 start run 8 for problem zz_0229631392
   start samplings 1000 for problem zz_0229631392
sampled for problem zz_0229631392
sampled for problem zz_2106543518
finished samples sampling for zz_2106543518
 finished run 7 for problem zz_2106543518
 start run 8 for problem zz_2106543518
   start samplings 1000 for problem zz_2106543518
sampled for problem zz_2106543518
sampled for problem zz_5919623735
finished samples sampling for zz_5919623735
 finished run 7 for problem zz_5919623735
 start run 8 for problem zz_5919623735
   start samplings 1000 for problem zz_5919623735
sampled for problem zz_5919623735
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_0357328613
finished samples sampling for zz_0357328613
 finished run 8 for problem zz_0357328613
 start run 9 for problem zz_0357328613
   start samplings 1000 for problem zz_0357328613
sampled for problem zz_0357328613
sampled for problem zz_9456648355
finished samples sampling for zz_9456648355
 finished run 8 for problem zz_9456648355
 start run 9 for problem zz_9456648355
   start samplings 1000 for problem zz_9456648355
sampled for problem zz_9456648355
sampled for problem zz_5585617994
finished samples sampling for zz_5585617994
 finished run 8 for problem zz_5585617994
 start run 9 for problem zz_5585617994
   start samplings 1000 for problem zz_5585617994
sampled for problem zz_5585617994
sampled for problem zz_2411961934
finished samples sampling for zz_2411961934
 finished run 8 for problem zz_2411961934
 start run 9 for problem zz_2411961934
   start samplings 1000 for problem zz_2411961934
sampled for problem zz_2411961934
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_8486709234
finished samples sampling for zz_8486709234
 finished run 8 for problem zz_8486709234
 start run 9 for problem zz_8486709234
   start samplings 1000 for problem zz_8486709234
sampled for problem zz_8486709234
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_0229631392
finished samples sampling for zz_0229631392
 finished run 8 for problem zz_0229631392
 start run 9 for problem zz_0229631392
   start samplings 1000 for problem zz_0229631392
sampled for problem zz_0229631392
sampled for problem zz_2106543518
finished samples sampling for zz_2106543518
 finished run 8 for problem zz_2106543518
 start run 9 for problem zz_2106543518
   start samplings 1000 for problem zz_2106543518
sampled for problem zz_2106543518
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_5919623735
finished samples sampling for zz_5919623735
 finished run 8 for problem zz_5919623735
 start run 9 for problem zz_5919623735
   start samplings 1000 for problem zz_5919623735
sampled for problem zz_5919623735
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
 Queue sizes: problems_to_submit = 7, answers_to_write = 0
sampled for problem zz_0357328613
finished samples sampling for zz_0357328613
 finished run 9 for problem zz_0357328613
 succesfully retrieved answer for problem {} zz_0357328613
 start working on problem zz_4790003576
 start writing answer for problem {} zz_0357328613
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f56429cd2e0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f56429cd2e0>
 Queue sizes: problems_to_submit = 6, answers_to_write = 0
 problem zz_4790003576 will take can be sampled with a single run
 problem zz_4790003576 will be solved 1 times per run
sampled for problem zz_9456648355
finished samples sampling for zz_9456648355
 finished run 9 for problem zz_9456648355
 start run 0 for problem zz_4790003576
   start samplings 1000 for problem zz_4790003576
sampled for problem zz_4790003576
sampled for problem zz_5585617994
finished samples sampling for zz_5585617994
 finished run 9 for problem zz_5585617994
sampled for problem zz_2411961934
finished samples sampling for zz_2411961934
 finished run 9 for problem zz_2411961934
 succesfully retrieved answer for problem {} zz_9456648355
 start working on problem zz_5768432036
 succesfully retrieved answer for problem {} zz_5585617994
 start working on problem zz_8770741114
 succesfully retrieved answer for problem {} zz_2411961934
 start working on problem zz_0167361147
 start writing answer for problem {} zz_9456648355
 Queue sizes: problems_to_submit = 3, answers_to_write = 2
 problem zz_5768432036 will take can be sampled with a single run
 problem zz_5768432036 will be solved 1 times per run
 problem zz_8770741114 will take can be sampled with a single run
 problem zz_8770741114 will be solved 1 times per run
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f57685e2690>
sampled for problem zz_8486709234
finished samples sampling for zz_8486709234
 finished run 9 for problem zz_8486709234
 Queue sizes: problems_to_submit = 3, answers_to_write = 2
 problem zz_0167361147 will take can be sampled with a single run
 problem zz_0167361147 will be solved 1 times per run
sampled for problem zz_0229631392
finished samples sampling for zz_0229631392
 finished run 9 for problem zz_0229631392
 start run 0 for problem zz_5768432036
   start samplings 1000 for problem zz_5768432036
sampled for problem zz_5768432036
sampled for problem zz_2106543518
finished samples sampling for zz_2106543518
 finished run 9 for problem zz_2106543518
sampled for problem zz_5919623735
finished samples sampling for zz_5919623735
 finished run 9 for problem zz_5919623735
 start run 0 for problem zz_8770741114
   start samplings 1000 for problem zz_8770741114
sampled for problem zz_8770741114
 succesfully retrieved answer for problem {} zz_8486709234
 start working on problem zz_0857212263
 start run 0 for problem zz_0167361147
   start samplings 1000 for problem zz_0167361147
sampled for problem zz_0167361147
 Queue sizes: problems_to_submit = 2, answers_to_write = 3
 succesfully retrieved answer for problem {} zz_0229631392
 start working on problem zz_9009261444
 problem zz_0857212263 will take can be sampled with a single run
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_4213021836
finished samples sampling for zz_4213021836
 finished run 3 for problem zz_4213021836
 start run 4 for problem zz_4213021836
   start samplings 1000 for problem zz_4213021836
sampled for problem zz_4213021836
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_2868668091
 start writing answer for problem {} zz_7619482988
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f3010a7b620>
 finished writing answer for problem {} zz_0651999763
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f3010a7b620>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2835206639
finished samples sampling for zz_2835206639
 finished run 2 for problem zz_2835206639
 start run 3 for problem zz_2835206639
   start samplings 1000 for problem zz_2835206639
sampled for problem zz_2835206639
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_7619482988
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1566314580
finished samples sampling for zz_1566314580
 finished run 4 for problem zz_1566314580
 start run 5 for problem zz_1566314580
   start samplings 1000 for problem zz_1566314580
sampled for problem zz_1566314580
sampled for problem zz_9713990306
finished samples sampling for zz_9713990306
 finished run 3 for problem zz_9713990306
 start run 4 for problem zz_9713990306
   start samplings 1000 for problem zz_9713990306
sampled for problem zz_9713990306
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7103584348
 problem zz_8281893723 will be solved 1 times per run
sampled for problem zz_8611608945
 start run 0 for problem zz_1357117085
   start samplings 1000 for problem zz_1357117085
sampled for problem zz_1357117085
 start run 0 for problem zz_8281893723
   start samplings 1000 for problem zz_8281893723
 problem zz_0616570644 will take can be sampled with a single run
 problem zz_0616570644 will be solved 1 times per run
sampled for problem zz_8281893723
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f770036e990>
 start run 0 for problem zz_0616570644
   start samplings 1000 for problem zz_0616570644
sampled for problem zz_0616570644
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
sampled for problem zz_3172680174
finished samples sampling for zz_3172680174
 finished run 0 for problem zz_3172680174
 start run 1 for problem zz_3172680174
   start samplings 1000 for problem zz_3172680174
sampled for problem zz_3172680174
sampled for problem zz_7137191291
finished samples sampling for zz_7137191291
 finished run 0 for problem zz_7137191291
 start run 1 for problem zz_7137191291
   start samplings 1000 for problem zz_7137191291
sampled for problem zz_7137191291
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
sampled for problem zz_3454216945
finished samples sampling for zz_3454216945
 finished run 0 for problem zz_3454216945
 start run 1 for problem zz_3454216945
   start samplings 1000 for problem zz_3454216945
sampled for problem zz_3454216945
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
sampled for problem zz_5044724301
finished samples sampling for zz_5044724301
 finished run 0 for problem zz_5044724301
 start run 1 for problem zz_5044724301
   start samplings 1000 for problem zz_5044724301
sampled for problem zz_5044724301
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_8611608945
finished samples sampling for zz_8611608945
 finished run 0 for problem zz_8611608945
 start run 1 for problem zz_8611608945
   start samplings 1000 for problem zz_8611608945
sampled for problem zz_8611608945
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
sampled for problem zz_1357117085
finished samples sampling for zz_1357117085
 finished run 0 for problem zz_1357117085
 start run 1 for problem zz_1357117085
   start samplings 1000 for problem zz_1357117085
sampled for problem zz_1357117085
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_8281893723
finished samples sampling for zz_8281893723
 finished run 0 for problem zz_8281893723
 start run 1 for problem zz_8281893723
   start samplings 1000 for problem zz_8281893723
sampled for problem zz_8281893723
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_0616570644
finished samples sampling for zz_0616570644
 finished run 0 for problem zz_0616570644
 start run 1 for problem zz_0616570644
   start samplings 1000 for problem zz_0616570644
sampled for problem zz_0616570644
 finished writing answer for problem {} zz_0675013443
 start writing answer for problem {} zz_8355420116
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f78b82f6b10>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f78b82f6b10>
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
sampled for problem zz_3172680174
finished samples sampling for zz_3172680174
 finished run 1 for problem zz_3172680174
 start run 2 for problem zz_3172680174
   start samplings 1000 for problem zz_3172680174
sampled for problem zz_3172680174
sampled for problem zz_7137191291
finished samples sampling for zz_7137191291
 finished run 1 for problem zz_7137191291
 start run 2 for problem zz_7137191291
   start samplings 1000 for problem zz_7137191291
sampled for problem zz_7137191291
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
sampled for problem zz_3454216945
finished samples sampling for zz_3454216945
 finished run 1 for problem zz_3454216945
 start run 2 for problem zz_3454216945
   start samplings 1000 for problem zz_3454216945
sampled for problem zz_3454216945
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_5044724301
finished samples sampling for zz_5044724301
 finished run 1 for problem zz_5044724301
 start run 2 for problem zz_5044724301
   start samplings 1000 for problem zz_5044724301
sampled for problem zz_5044724301
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 6, answers_to_write = 0
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe43c7502c0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe43c7502c0>
sampled for problem zz_3242687376
finished samples sampling for zz_3242687376
 finished run 9 for problem zz_3242687376
sampled for problem zz_5125038959
finished samples sampling for zz_5125038959
 finished run 9 for problem zz_5125038959
 Queue sizes: problems_to_submit = 6, answers_to_write = 0
sampled for problem zz_5347903740
finished samples sampling for zz_5347903740
 finished run 9 for problem zz_5347903740
 start run 0 for problem zz_2752062414
   start samplings 1000 for problem zz_2752062414
sampled for problem zz_2752062414
 succesfully retrieved answer for problem {} zz_3242687376
 start working on problem zz_5325823637
 start writing answer for problem {} zz_3242687376
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2e5f73aa0>
 problem zz_5325823637 will take can be sampled with a single run
 problem zz_5325823637 will be solved 1 times per run
 succesfully retrieved answer for problem {} zz_5125038959
 start working on problem zz_0244546704
sampled for problem zz_0437237586
finished samples sampling for zz_0437237586
 finished run 9 for problem zz_0437237586
 succesfully retrieved answer for problem {} zz_5347903740
 start working on problem zz_8557696436
 start run 0 for problem zz_5325823637
   start samplings 1000 for problem zz_5325823637
sampled for problem zz_5325823637
 Queue sizes: problems_to_submit = 3, answers_to_write = 2
 problem zz_0244546704 will take can be sampled with a single run
 problem zz_0244546704 will be solved 1 times per run
sampled for problem zz_4160526692
finished samples sampling for zz_4160526692
 finished run 9 for problem zz_4160526692
 succesfully retrieved answer for problem {} zz_0437237586
 start working on problem zz_4820464946
 problem zz_8557696436 will take can be sampled with a single run
 problem zz_8557696436 will be solved 1 times per run
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2e5f73aa0>
 start run 0 for problem zz_0244546704
   start samplings 1000 for problem zz_0244546704
sampled for problem zz_0244546704
 succesfully retrieved answer for problem {} zz_4160526692
 start working on problem zz_1047118313
 problem zz_4820464946 will take can be sampled with a single run
 problem zz_4820464946 will be solved 1 times per run
sampled for problem zz_6514437321
finished samples sampling for zz_6514437321
 finished run 9 for problem zz_6514437321
 start run 0 for problem zz_8557696436
   start samplings 1000 for problem zz_8557696436
sampled for problem zz_8557696436
 start run 0 for problem zz_4820464946
   start samplings 1000 for problem zz_4820464946
 Queue sizes: problems_to_submit = 1, answers_to_write = 4
sampled for problem zz_4820464946
 succesfully retrieved answer for problem {} zz_6514437321
 start working on problem zz_8965497403
 problem zz_1047118313 will take can be sampled with a single run
 problem zz_1047118313 will be solved 1 times per run
sampled for problem zz_7975579866
finished samples sampling for zz_7975579866
 finished run 0 for problem zz_7975579866
 start run 1 for problem zz_7975579866
   start samplings 1000 for problem zz_7975579866
sampled for problem zz_7975579866
 start run 0 for problem zz_1047118313
   start samplings 1000 for problem zz_1047118313
sampled for problem zz_1047118313
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 problem zz_8965497403 will take can be sampled with a single run
 problem zz_8965497403 will be solved 1 times per run
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 start run 0 for problem zz_8965497403
   start samplings 1000 for problem zz_8965497403
sampled for problem zz_8965497403
sampled for problem zz_2752062414
finished samples sampling for zz_2752062414
 finished run 0 for problem zz_2752062414
 start run 1 for problem zz_2752062414
   start samplings 1000 for problem zz_2752062414
sampled for problem zz_2752062414
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
sampled for problem zz_5325823637
finished samples sampling for zz_5325823637
 finished run 0 for problem zz_5325823637
 start run 1 for problem zz_5325823637
   start samplings 1000 for problem zz_5325823637
sampled for problem zz_5325823637
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
sampled for problem zz_0244546704
finished samples sampling for zz_0244546704
 finished run 0 for problem zz_0244546704
 start run 1 for problem zz_0244546704
   start samplings 1000 for problem zz_0244546704
sampled for problem zz_0244546704
sampled for problem zz_8557696436
finished samples sampling for zz_8557696436
 finished run 0 for problem zz_8557696436
 start run 1 for problem zz_8557696436
   start samplings 1000 for problem zz_8557696436
sampled for problem zz_8557696436
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
sampled for problem zz_4820464946
finished samples sampling for zz_4820464946
 finished run 0 for problem zz_4820464946
 start run 1 for problem zz_4820464946
   start samplings 1000 for problem zz_4820464946
sampled for problem zz_4820464946
sampled for problem zz_7975579866
finished samples sampling for zz_7975579866
 finished run 1 for problem zz_7975579866
 start run 2 for problem zz_7975579866
   start samplings 1000 for problem zz_7975579866
sampled for problem zz_7975579866
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
sampled for problem zz_1047118313
finished samples sampling for zz_1047118313
 finished run 0 for problem zz_1047118313
 start run 1 for problem zz_1047118313
   start samplings 1000 for problem zz_1047118313
sampled for problem zz_1047118313
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_1208695640
 start writing answer for problem {} zz_8530174265
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd4d75e82f0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd4d75e82f0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
sampled for problem zz_0318641083
finished samples sampling for zz_0318641083
 finished run 1 for problem zz_0318641083
 start run 2 for problem zz_0318641083
   start samplings 1000 for problem zz_0318641083
sampled for problem zz_0318641083
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6935795118
 start writing answer for problem {} zz_6255233176
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd4d75a7e30>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd4d75a7e30>
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_9818300553
finished samples sampling for zz_9818300553
 finished run 1 for problem zz_9818300553
 start run 2 for problem zz_9818300553
   start samplings 1000 for problem zz_9818300553
sampled for problem zz_9818300553
sampled for problem zz_0446214293
finished samples sampling for zz_0446214293
 finished run 2 for problem zz_0446214293
 start run 3 for problem zz_0446214293
   start samplings 1000 for problem zz_0446214293
sampled for problem zz_0446214293
sampled for problem zz_6269837941
finished samples sampling for zz_6269837941
 finished run 1 for problem zz_6269837941
 start run 2 for problem zz_6269837941
   start samplings 1000 for problem zz_6269837941
sampled for problem zz_6269837941
sampled for problem zz_3559114144
finished samples sampling for zz_3559114144
 finished run 1 for problem zz_3559114144
 start run 2 for problem zz_3559114144
   start samplings 1000 for problem zz_3559114144
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_3559114144
sampled for problem zz_8129357418
finished samples sampling for zz_8129357418
 finished run 1 for problem zz_8129357418
 start run 2 for problem zz_8129357418
   start samplings 1000 for problem zz_8129357418
sampled for problem zz_8129357418
sampled for problem zz_0180383007
finished samples sampling for zz_0180383007
 finished run 1 for problem zz_0180383007
 start run 2 for problem zz_0180383007
   start samplings 1000 for problem zz_0180383007
sampled for problem zz_0180383007
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_2497804221
finished samples sampling for zz_2497804221
 finished run 2 for problem zz_2497804221
 start run 3 for problem zz_2497804221
   start samplings 1000 for problem zz_2497804221
sampled for problem zz_2497804221
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_0318641083
finished samples sampling for zz_0318641083
 finished run 2 for problem zz_0318641083
 start run 3 for problem zz_0318641083
   start samplings 1000 for problem zz_0318641083
sampled for problem zz_0318641083
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_9818300553
finished samples sampling for zz_9818300553
 finished run 2 for problem zz_9818300553
 start run 3 for problem zz_9818300553
   start samplings 1000 for problem zz_9818300553
sampled for problem zz_9818300553
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_0446214293
finished samples sampling for zz_0446214293
 finished run 3 for problem zz_0446214293
 start run 4 for problem zz_0446214293
   start samplings 1000 for problem zz_0446214293
sampled for problem zz_0446214293
sampled for problem zz_6269837941
finished samples sampling for zz_6269837941
 finished run 2 for problem zz_6269837941
 start run 3 for problem zz_6269837941
   start samplings 1000 for problem zz_6269837941
 problem zz_0857212263 will be solved 1 times per run
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f57685e2690>
 succesfully retrieved answer for problem {} zz_2106543518
 start working on problem zz_3593098853
 problem zz_9009261444 will take can be sampled with a single run
 problem zz_9009261444 will be solved 1 times per run
 succesfully retrieved answer for problem {} zz_5919623735
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start run 0 for problem zz_0857212263
   start samplings 1000 for problem zz_0857212263
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
sampled for problem zz_0857212263
 problem zz_3593098853 will take can be sampled with a single run
 problem zz_3593098853 will be solved 1 times per run
 start run 0 for problem zz_9009261444
   start samplings 1000 for problem zz_9009261444
sampled for problem zz_9009261444
 start run 0 for problem zz_3593098853
   start samplings 1000 for problem zz_3593098853
sampled for problem zz_3593098853
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
sampled for problem zz_4790003576
finished samples sampling for zz_4790003576
 finished run 0 for problem zz_4790003576
 start run 1 for problem zz_4790003576
   start samplings 1000 for problem zz_4790003576
sampled for problem zz_4790003576
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
sampled for problem zz_8770741114
finished samples sampling for zz_8770741114
 finished run 0 for problem zz_8770741114
 start run 1 for problem zz_8770741114
   start samplings 1000 for problem zz_8770741114
sampled for problem zz_8770741114
sampled for problem zz_5768432036
finished samples sampling for zz_5768432036
 finished run 0 for problem zz_5768432036
 start run 1 for problem zz_5768432036
   start samplings 1000 for problem zz_5768432036
sampled for problem zz_5768432036
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
sampled for problem zz_0167361147
finished samples sampling for zz_0167361147
 finished run 0 for problem zz_0167361147
 start run 1 for problem zz_0167361147
   start samplings 1000 for problem zz_0167361147
sampled for problem zz_0167361147
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
sampled for problem zz_0857212263
finished samples sampling for zz_0857212263
 finished run 0 for problem zz_0857212263
 start run 1 for problem zz_0857212263
   start samplings 1000 for problem zz_0857212263
sampled for problem zz_0857212263
sampled for problem zz_3593098853
finished samples sampling for zz_3593098853
 finished run 0 for problem zz_3593098853
 start run 1 for problem zz_3593098853
   start samplings 1000 for problem zz_3593098853
sampled for problem zz_3593098853
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
sampled for problem zz_9009261444
finished samples sampling for zz_9009261444
 finished run 0 for problem zz_9009261444
 start run 1 for problem zz_9009261444
   start samplings 1000 for problem zz_9009261444
sampled for problem zz_9009261444
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_9456648355
 start writing answer for problem {} zz_5585617994
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5643c25d90>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5643c25d90>
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
sampled for problem zz_4790003576
finished samples sampling for zz_4790003576
 finished run 1 for problem zz_4790003576
 start run 2 for problem zz_4790003576
   start samplings 1000 for problem zz_4790003576
sampled for problem zz_4790003576
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'>
 Queue sizes: problems_to_submit = 6, answers_to_write = 0
 succesfully retrieved answer for problem {} zz_9812323767
 start working on problem zz_8979952804
 Queue sizes: problems_to_submit = 5, answers_to_write = 1
 start writing answer for problem {} zz_9812323767
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f59216dd3a0>
 problem zz_8979952804 will take can be sampled with a single run
 problem zz_8979952804 will be solved 1 times per run
 Queue sizes: problems_to_submit = 5, answers_to_write = 0
sampled for problem zz_1183798611
finished samples sampling for zz_1183798611
 finished run 9 for problem zz_1183798611
 start run 0 for problem zz_8979952804
   start samplings 1000 for problem zz_8979952804
sampled for problem zz_8979952804
 succesfully retrieved answer for problem {} zz_1183798611
 start working on problem zz_6214128419
sampled for problem zz_8705643469
finished samples sampling for zz_8705643469
 finished run 9 for problem zz_8705643469
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f59216dd3a0>
 succesfully retrieved answer for problem {} zz_8705643469
 start working on problem zz_5988593358
 start writing answer for problem {} zz_1183798611
sampled for problem zz_8342877442
finished samples sampling for zz_8342877442
 finished run 9 for problem zz_8342877442
sampled for problem zz_6252892828
finished samples sampling for zz_6252892828
 finished run 9 for problem zz_6252892828
 problem zz_6214128419 will take can be sampled with a single run
 problem zz_6214128419 will be solved 1 times per run
sampled for problem zz_4337938137
finished samples sampling for zz_4337938137
 finished run 9 for problem zz_4337938137
sampled for problem zz_1663139989
finished samples sampling for zz_1663139989
 finished run 9 for problem zz_1663139989
 Queue sizes: problems_to_submit = 3, answers_to_write = 1
 problem zz_5988593358 will take can be sampled with a single run
 problem zz_5988593358 will be solved 1 times per run
 succesfully retrieved answer for problem {} zz_8342877442
 start working on problem zz_9085162316
 succesfully retrieved answer for problem {} zz_6252892828
 start working on problem zz_0991124024
 start run 0 for problem zz_6214128419
   start samplings 1000 for problem zz_6214128419
sampled for problem zz_6214128419
 succesfully retrieved answer for problem {} zz_4337938137
 start working on problem zz_2486085441
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 problem zz_0991124024 will take can be sampled with a single run
 problem zz_0991124024 will be solved 1 times per run
 problem zz_9085162316 will take can be sampled with a single run
 problem zz_9085162316 will be solved 1 times per run
sampled for problem zz_3002816115
finished samples sampling for zz_3002816115
 finished run 0 for problem zz_3002816115
 start run 1 for problem zz_3002816115
   start samplings 1000 for problem zz_3002816115
sampled for problem zz_3002816115
 succesfully retrieved answer for problem {} zz_1663139989
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start run 0 for problem zz_5988593358
   start samplings 1000 for problem zz_5988593358
sampled for problem zz_5988593358
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f59f0523e60>
 start run 0 for problem zz_0991124024
   start samplings 1000 for problem zz_0991124024
sampled for problem zz_0991124024
 start run 0 for problem zz_9085162316
   start samplings 1000 for problem zz_9085162316
sampled for problem zz_9085162316
 problem zz_2486085441 will take can be sampled with a single run
 problem zz_2486085441 will be solved 1 times per run
 start run 0 for problem zz_2486085441
   start samplings 1000 for problem zz_2486085441
sampled for problem zz_2486085441
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f59f0523e60>
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
sampled for problem zz_8979952804
finished samples sampling for zz_8979952804
 finished run 0 for problem zz_8979952804
 start run 1 for problem zz_8979952804
   start samplings 1000 for problem zz_8979952804
sampled for problem zz_8979952804
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
sampled for problem zz_6214128419
finished samples sampling for zz_6214128419
 finished run 0 for problem zz_6214128419
 start run 1 for problem zz_6214128419
   start samplings 1000 for problem zz_6214128419
sampled for problem zz_6214128419
sampled for problem zz_3002816115
finished samples sampling for zz_3002816115
 finished run 1 for problem zz_3002816115
 start run 2 for problem zz_3002816115
   start samplings 1000 for problem zz_3002816115
sampled for problem zz_3002816115
sampled for problem zz_5988593358
finished samples sampling for zz_5988593358
 finished run 0 for problem zz_5988593358
 start run 1 for problem zz_5988593358
   start samplings 1000 for problem zz_5988593358
sampled for problem zz_5988593358
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_0991124024
finished samples sampling for zz_0991124024
 finished run 0 for problem zz_0991124024
 start run 1 for problem zz_0991124024
   start samplings 1000 for problem zz_0991124024
sampled for problem zz_0991124024
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_9085162316
finished samples sampling for zz_9085162316
 finished run 0 for problem zz_9085162316
 start run 1 for problem zz_9085162316
   start samplings 1000 for problem zz_9085162316
sampled for problem zz_9085162316
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_2486085441
finished samples sampling for zz_2486085441
 finished run 0 for problem zz_2486085441
 start run 1 for problem zz_2486085441
   start samplings 1000 for problem zz_2486085441
sampled for problem zz_2486085441
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8267963959
 start writing answer for problem {} zz_5125038959
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2e6add5e0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2e6add5e0>
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_8965497403
finished samples sampling for zz_8965497403
 finished run 0 for problem zz_8965497403
 start run 1 for problem zz_8965497403
   start samplings 1000 for problem zz_8965497403
sampled for problem zz_8965497403
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
sampled for problem zz_2752062414
finished samples sampling for zz_2752062414
 finished run 1 for problem zz_2752062414
 start run 2 for problem zz_2752062414
   start samplings 1000 for problem zz_2752062414
sampled for problem zz_2752062414
 finished writing answer for problem {} zz_3242687376
 start writing answer for problem {} zz_5347903740
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2e6abdaf0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2e6abdaf0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_5325823637
finished samples sampling for zz_5325823637
 finished run 1 for problem zz_5325823637
 start run 2 for problem zz_5325823637
   start samplings 1000 for problem zz_5325823637
sampled for problem zz_5325823637
sampled for problem zz_0244546704
finished samples sampling for zz_0244546704
 finished run 1 for problem zz_0244546704
 start run 2 for problem zz_0244546704
   start samplings 1000 for problem zz_0244546704
sampled for problem zz_0244546704
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_8557696436
finished samples sampling for zz_8557696436
 finished run 1 for problem zz_8557696436
 start run 2 for problem zz_8557696436
   start samplings 1000 for problem zz_8557696436
sampled for problem zz_8557696436
sampled for problem zz_4820464946
finished samples sampling for zz_4820464946
 finished run 1 for problem zz_4820464946
 start run 2 for problem zz_4820464946
   start samplings 1000 for problem zz_4820464946
sampled for problem zz_4820464946
sampled for problem zz_7975579866
finished samples sampling for zz_7975579866
 finished run 2 for problem zz_7975579866
 start run 3 for problem zz_7975579866
   start samplings 1000 for problem zz_7975579866
sampled for problem zz_7975579866
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_1047118313
finished samples sampling for zz_1047118313
 finished run 1 for problem zz_1047118313
 start run 2 for problem zz_1047118313
   start samplings 1000 for problem zz_1047118313
sampled for problem zz_1047118313
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_1534170724
sampled for problem zz_7223102935
finished samples sampling for zz_7223102935
 finished run 3 for problem zz_7223102935
 start run 4 for problem zz_7223102935
   start samplings 1000 for problem zz_7223102935
sampled for problem zz_7223102935
sampled for problem zz_4197625176
finished samples sampling for zz_4197625176
 finished run 4 for problem zz_4197625176
 start run 5 for problem zz_4197625176
   start samplings 1000 for problem zz_4197625176
sampled for problem zz_4197625176
sampled for problem zz_8229547046
finished samples sampling for zz_8229547046
 finished run 4 for problem zz_8229547046
 start run 5 for problem zz_8229547046
   start samplings 1000 for problem zz_8229547046
sampled for problem zz_8229547046
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8661404323
finished samples sampling for zz_8661404323
 finished run 4 for problem zz_8661404323
 start run 5 for problem zz_8661404323
   start samplings 1000 for problem zz_8661404323
sampled for problem zz_8661404323
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7421375757
finished samples sampling for zz_7421375757
 finished run 5 for problem zz_7421375757
 start run 6 for problem zz_7421375757
   start samplings 1000 for problem zz_7421375757
sampled for problem zz_7421375757
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2290663268
finished samples sampling for zz_2290663268
 finished run 4 for problem zz_2290663268
 start run 5 for problem zz_2290663268
   start samplings 1000 for problem zz_2290663268
sampled for problem zz_2290663268
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0085220014
finished samples sampling for zz_0085220014
 finished run 4 for problem zz_0085220014
 start run 5 for problem zz_0085220014
   start samplings 1000 for problem zz_0085220014
sampled for problem zz_0085220014
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1534170724
finished samples sampling for zz_1534170724
 finished run 6 for problem zz_1534170724
 start run 7 for problem zz_1534170724
   start samplings 1000 for problem zz_1534170724
sampled for problem zz_1534170724
sampled for problem zz_7223102935
finished samples sampling for zz_7223102935
 finished run 4 for problem zz_7223102935
 start run 5 for problem zz_7223102935
   start samplings 1000 for problem zz_7223102935
sampled for problem zz_7223102935
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_4197625176
finished samples sampling for zz_4197625176
 finished run 5 for problem zz_4197625176
 start run 6 for problem zz_4197625176
   start samplings 1000 for problem zz_4197625176
sampled for problem zz_4197625176
sampled for problem zz_8229547046
finished samples sampling for zz_8229547046
 finished run 5 for problem zz_8229547046
 start run 6 for problem zz_8229547046
   start samplings 1000 for problem zz_8229547046
sampled for problem zz_8229547046
sampled for problem zz_8661404323
finished samples sampling for zz_8661404323
 finished run 5 for problem zz_8661404323
 start run 6 for problem zz_8661404323
   start samplings 1000 for problem zz_8661404323
sampled for problem zz_8661404323
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7421375757
finished samples sampling for zz_7421375757
 finished run 6 for problem zz_7421375757
 start run 7 for problem zz_7421375757
   start samplings 1000 for problem zz_7421375757
sampled for problem zz_7421375757
sampled for problem zz_2290663268
finished samples sampling for zz_2290663268
 finished run 5 for problem zz_2290663268
 start run 6 for problem zz_2290663268
   start samplings 1000 for problem zz_2290663268
sampled for problem zz_2290663268
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0085220014
finished samples sampling for zz_0085220014
 finished run 5 for problem zz_0085220014
 start run 6 for problem zz_0085220014
   start samplings 1000 for problem zz_0085220014
sampled for problem zz_0085220014
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1534170724
finished samples sampling for zz_1534170724
 finished run 7 for problem zz_1534170724
 start run 8 for problem zz_1534170724
   start samplings 1000 for problem zz_1534170724
sampled for problem zz_1534170724
sampled for problem zz_7223102935
finished samples sampling for zz_7223102935
 finished run 5 for problem zz_7223102935
 start run 6 for problem zz_7223102935
   start samplings 1000 for problem zz_7223102935
sampled for problem zz_7223102935
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_4197625176
finished samples sampling for zz_4197625176
 finished run 6 for problem zz_4197625176
 start run 7 for problem zz_4197625176
   start samplings 1000 for problem zz_4197625176
sampled for problem zz_4197625176
sampled for problem zz_8229547046
finished samples sampling for zz_8229547046
 finished run 6 for problem zz_8229547046
 start run 7 for problem zz_8229547046
   start samplings 1000 for problem zz_8229547046
sampled for problem zz_8229547046
sampled for problem zz_8661404323
finished samples sampling for zz_8661404323
 finished run 6 for problem zz_8661404323
 start run 7 for problem zz_8661404323
   start samplings 1000 for problem zz_8661404323
sampled for problem zz_8661404323
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7421375757
finished samples sampling for zz_7421375757
 finished run 7 for problem zz_7421375757
 start run 8 for problem zz_7421375757
   start samplings 1000 for problem zz_7421375757
sampled for problem zz_7421375757
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2290663268
finished samples sampling for zz_2290663268
 finished run 6 for problem zz_2290663268
 start run 7 for problem zz_2290663268
   start samplings 1000 for problem zz_2290663268
sampled for problem zz_2290663268
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0085220014
finished samples sampling for zz_0085220014
 finished run 6 for problem zz_0085220014
 start run 7 for problem zz_0085220014
   start samplings 1000 for problem zz_0085220014
sampled for problem zz_0085220014
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1534170724
finished samples sampling for zz_1534170724
 finished run 8 for problem zz_1534170724
 start run 9 for problem zz_1534170724
   start samplings 1000 for problem zz_1534170724
sampled for problem zz_1534170724
sampled for problem zz_7223102935
finished samples sampling for zz_7223102935
 finished run 6 for problem zz_7223102935
 start run 7 for problem zz_7223102935
   start samplings 1000 for problem zz_7223102935
sampled for problem zz_7223102935
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_4197625176
finished samples sampling for zz_4197625176
 finished run 7 for problem zz_4197625176
 start run 8 for problem zz_4197625176
   start samplings 1000 for problem zz_4197625176
sampled for problem zz_4197625176
sampled for problem zz_8229547046
finished samples sampling for zz_8229547046
 finished run 7 for problem zz_8229547046
 start run 8 for problem zz_8229547046
   start samplings 1000 for problem zz_8229547046
sampled for problem zz_8229547046
sampled for problem zz_8661404323
finished samples sampling for zz_8661404323
 finished run 7 for problem zz_8661404323
 start run 8 for problem zz_8661404323
   start samplings 1000 for problem zz_8661404323
sampled for problem zz_8661404323
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_4978626801
 start writing answer for problem {} zz_4874220685
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f77aa30c3b0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f77aa30c3b0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
sampled for problem zz_8611608945
finished samples sampling for zz_8611608945
 finished run 1 for problem zz_8611608945
 start run 2 for problem zz_8611608945
   start samplings 1000 for problem zz_8611608945
sampled for problem zz_8611608945
sampled for problem zz_1357117085
finished samples sampling for zz_1357117085
 finished run 1 for problem zz_1357117085
 start run 2 for problem zz_1357117085
   start samplings 1000 for problem zz_1357117085
sampled for problem zz_1357117085
sampled for problem zz_8281893723
finished samples sampling for zz_8281893723
 finished run 1 for problem zz_8281893723
 start run 2 for problem zz_8281893723
   start samplings 1000 for problem zz_8281893723
sampled for problem zz_8281893723
sampled for problem zz_0616570644
finished samples sampling for zz_0616570644
 finished run 1 for problem zz_0616570644
 start run 2 for problem zz_0616570644
   start samplings 1000 for problem zz_0616570644
sampled for problem zz_0616570644
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8355420116
 start writing answer for problem {} zz_6502573580
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f77a983f320>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f77a983f320>
sampled for problem zz_3172680174
finished samples sampling for zz_3172680174
 finished run 2 for problem zz_3172680174
 start run 3 for problem zz_3172680174
   start samplings 1000 for problem zz_3172680174
sampled for problem zz_3172680174
sampled for problem zz_7137191291
finished samples sampling for zz_7137191291
 finished run 2 for problem zz_7137191291
 start run 3 for problem zz_7137191291
   start samplings 1000 for problem zz_7137191291
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_7137191291
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_3454216945
finished samples sampling for zz_3454216945
 finished run 2 for problem zz_3454216945
 start run 3 for problem zz_3454216945
   start samplings 1000 for problem zz_3454216945
sampled for problem zz_3454216945
sampled for problem zz_5044724301
finished samples sampling for zz_5044724301
 finished run 2 for problem zz_5044724301
 start run 3 for problem zz_5044724301
   start samplings 1000 for problem zz_5044724301
sampled for problem zz_5044724301
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_6269837941
sampled for problem zz_3559114144
finished samples sampling for zz_3559114144
 finished run 2 for problem zz_3559114144
 start run 3 for problem zz_3559114144
   start samplings 1000 for problem zz_3559114144
sampled for problem zz_3559114144
sampled for problem zz_8129357418
finished samples sampling for zz_8129357418
 finished run 2 for problem zz_8129357418
 start run 3 for problem zz_8129357418
   start samplings 1000 for problem zz_8129357418
sampled for problem zz_8129357418
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_0180383007
finished samples sampling for zz_0180383007
 finished run 2 for problem zz_0180383007
 start run 3 for problem zz_0180383007
   start samplings 1000 for problem zz_0180383007
sampled for problem zz_0180383007
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8530174265
 start writing answer for problem {} zz_2236080878
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd4d76ce090>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd4d76ce090>
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_2497804221
finished samples sampling for zz_2497804221
 finished run 3 for problem zz_2497804221
 start run 4 for problem zz_2497804221
   start samplings 1000 for problem zz_2497804221
sampled for problem zz_2497804221
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6255233176
 start writing answer for problem {} zz_0140728978
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd558516870>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd558516870>
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_0318641083
finished samples sampling for zz_0318641083
 finished run 3 for problem zz_0318641083
 start run 4 for problem zz_0318641083
   start samplings 1000 for problem zz_0318641083
sampled for problem zz_0318641083
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_9818300553
finished samples sampling for zz_9818300553
 finished run 3 for problem zz_9818300553
 start run 4 for problem zz_9818300553
   start samplings 1000 for problem zz_9818300553
sampled for problem zz_9818300553
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_0446214293
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_1183798611
 start writing answer for problem {} zz_8705643469
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f59f0799eb0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f59f0799eb0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_9812323767
 start writing answer for problem {} zz_8342877442
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f57e1829490>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f57e1829490>
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_8979952804
finished samples sampling for zz_8979952804
 finished run 1 for problem zz_8979952804
 start run 2 for problem zz_8979952804
   start samplings 1000 for problem zz_8979952804
sampled for problem zz_8979952804
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_6214128419
finished samples sampling for zz_6214128419
 finished run 1 for problem zz_6214128419
 start run 2 for problem zz_6214128419
   start samplings 1000 for problem zz_6214128419
sampled for problem zz_6214128419
sampled for problem zz_3002816115
finished samples sampling for zz_3002816115
 finished run 2 for problem zz_3002816115
 start run 3 for problem zz_3002816115
   start samplings 1000 for problem zz_3002816115
sampled for problem zz_3002816115
sampled for problem zz_5988593358
finished samples sampling for zz_5988593358
 finished run 1 for problem zz_5988593358
 start run 2 for problem zz_5988593358
   start samplings 1000 for problem zz_5988593358
sampled for problem zz_5988593358
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_0991124024
finished samples sampling for zz_0991124024
 finished run 1 for problem zz_0991124024
 start run 2 for problem zz_0991124024
   start samplings 1000 for problem zz_0991124024
sampled for problem zz_0991124024
sampled for problem zz_9085162316
finished samples sampling for zz_9085162316
 finished run 1 for problem zz_9085162316
 start run 2 for problem zz_9085162316
   start samplings 1000 for problem zz_9085162316
sampled for problem zz_9085162316
sampled for problem zz_2486085441
finished samples sampling for zz_2486085441
 finished run 1 for problem zz_2486085441
 start run 2 for problem zz_2486085441
   start samplings 1000 for problem zz_2486085441
sampled for problem zz_2486085441
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_8611608945
finished samples sampling for zz_8611608945
 finished run 2 for problem zz_8611608945
 start run 3 for problem zz_8611608945
   start samplings 1000 for problem zz_8611608945
sampled for problem zz_8611608945
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_1357117085
finished samples sampling for zz_1357117085
 finished run 2 for problem zz_1357117085
 start run 3 for problem zz_1357117085
   start samplings 1000 for problem zz_1357117085
sampled for problem zz_1357117085
sampled for problem zz_8281893723
finished samples sampling for zz_8281893723
 finished run 2 for problem zz_8281893723
 start run 3 for problem zz_8281893723
   start samplings 1000 for problem zz_8281893723
sampled for problem zz_8281893723
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_0616570644
finished samples sampling for zz_0616570644
 finished run 2 for problem zz_0616570644
 start run 3 for problem zz_0616570644
   start samplings 1000 for problem zz_0616570644
sampled for problem zz_0616570644
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_4874220685
 start writing answer for problem {} zz_5860958113
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f7a2fe45700>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f7a2fe45700>
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_3172680174
finished samples sampling for zz_3172680174
 finished run 3 for problem zz_3172680174
 start run 4 for problem zz_3172680174
   start samplings 1000 for problem zz_3172680174
sampled for problem zz_3172680174
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_7137191291
finished samples sampling for zz_7137191291
 finished run 3 for problem zz_7137191291
 start run 4 for problem zz_7137191291
   start samplings 1000 for problem zz_7137191291
sampled for problem zz_7137191291
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_3454216945
finished samples sampling for zz_3454216945
 finished run 3 for problem zz_3454216945
 start run 4 for problem zz_3454216945
   start samplings 1000 for problem zz_3454216945
sampled for problem zz_3454216945
sampled for problem zz_5044724301
finished samples sampling for zz_5044724301
 finished run 3 for problem zz_5044724301
 start run 4 for problem zz_5044724301
   start samplings 1000 for problem zz_5044724301
sampled for problem zz_5044724301
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6502573580
 start writing answer for problem {} zz_0061234211
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f77b85e6570>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0357328613
 start writing answer for problem {} zz_2411961934
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5643c3c140>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5643c3c140>
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
sampled for problem zz_8770741114
finished samples sampling for zz_8770741114
 finished run 1 for problem zz_8770741114
 start run 2 for problem zz_8770741114
   start samplings 1000 for problem zz_8770741114
sampled for problem zz_8770741114
sampled for problem zz_5768432036
finished samples sampling for zz_5768432036
 finished run 1 for problem zz_5768432036
 start run 2 for problem zz_5768432036
   start samplings 1000 for problem zz_5768432036
sampled for problem zz_5768432036
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
sampled for problem zz_0167361147
finished samples sampling for zz_0167361147
 finished run 1 for problem zz_0167361147
 start run 2 for problem zz_0167361147
   start samplings 1000 for problem zz_0167361147
sampled for problem zz_0167361147
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
sampled for problem zz_0857212263
finished samples sampling for zz_0857212263
 finished run 1 for problem zz_0857212263
 start run 2 for problem zz_0857212263
   start samplings 1000 for problem zz_0857212263
sampled for problem zz_0857212263
sampled for problem zz_3593098853
finished samples sampling for zz_3593098853
 finished run 1 for problem zz_3593098853
 start run 2 for problem zz_3593098853
   start samplings 1000 for problem zz_3593098853
sampled for problem zz_3593098853
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
sampled for problem zz_9009261444
finished samples sampling for zz_9009261444
 finished run 1 for problem zz_9009261444
 start run 2 for problem zz_9009261444
   start samplings 1000 for problem zz_9009261444
sampled for problem zz_9009261444
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_5585617994
 start writing answer for problem {} zz_8486709234
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5649303500>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5649303500>
sampled for problem zz_4790003576
finished samples sampling for zz_4790003576
 finished run 2 for problem zz_4790003576
 start run 3 for problem zz_4790003576
   start samplings 1000 for problem zz_4790003576
sampled for problem zz_4790003576
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_8770741114
finished samples sampling for zz_8770741114
 finished run 2 for problem zz_8770741114
 start run 3 for problem zz_8770741114
   start samplings 1000 for problem zz_8770741114
sampled for problem zz_8770741114
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_5768432036
finished samples sampling for zz_5768432036
 finished run 2 for problem zz_5768432036
 start run 3 for problem zz_5768432036
   start samplings 1000 for problem zz_5768432036
sampled for problem zz_5768432036
sampled for problem zz_0167361147
finished samples sampling for zz_0167361147
 finished run 2 for problem zz_0167361147
 start run 3 for problem zz_0167361147
   start samplings 1000 for problem zz_0167361147
sampled for problem zz_0167361147
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_5125038959
 start writing answer for problem {} zz_0437237586
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2e68e6060>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2e68e6060>
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_8965497403
finished samples sampling for zz_8965497403
 finished run 1 for problem zz_8965497403
 start run 2 for problem zz_8965497403
   start samplings 1000 for problem zz_8965497403
sampled for problem zz_8965497403
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_2752062414
finished samples sampling for zz_2752062414
 finished run 2 for problem zz_2752062414
 start run 3 for problem zz_2752062414
   start samplings 1000 for problem zz_2752062414
sampled for problem zz_2752062414
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_5325823637
finished samples sampling for zz_5325823637
 finished run 2 for problem zz_5325823637
 start run 3 for problem zz_5325823637
   start samplings 1000 for problem zz_5325823637
sampled for problem zz_5325823637
sampled for problem zz_0244546704
finished samples sampling for zz_0244546704
 finished run 2 for problem zz_0244546704
 start run 3 for problem zz_0244546704
   start samplings 1000 for problem zz_0244546704
sampled for problem zz_0244546704
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_8557696436
finished samples sampling for zz_8557696436
 finished run 2 for problem zz_8557696436
 start run 3 for problem zz_8557696436
   start samplings 1000 for problem zz_8557696436
sampled for problem zz_8557696436
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_5347903740
 start writing answer for problem {} zz_4160526692
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe1af649940>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe1af649940>
sampled for problem zz_4820464946
finished samples sampling for zz_4820464946
 finished run 2 for problem zz_4820464946
 start run 3 for problem zz_4820464946
   start samplings 1000 for problem zz_4820464946
sampled for problem zz_4820464946
sampled for problem zz_7975579866
finished samples sampling for zz_7975579866
 finished run 3 for problem zz_7975579866
 start run 4 for problem zz_7975579866
   start samplings 1000 for problem zz_7975579866
sampled for problem zz_7975579866
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_1047118313
finished samples sampling for zz_1047118313
 finished run 2 for problem zz_1047118313
 start run 3 for problem zz_1047118313
   start samplings 1000 for problem zz_1047118313
sampled for problem zz_1047118313
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_8965497403
finished samples sampling for zz_8965497403
 finished run 2 for problem zz_8965497403
 start run 3 for problem zz_8965497403
   start samplings 1000 for problem zz_8965497403
sampled for problem zz_8965497403
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_2752062414
finished samples sampling for zz_2752062414
 finished run 3 for problem zz_2752062414
 start run 4 for problem zz_2752062414
   start samplings 1000 for problem zz_2752062414
sampled for problem zz_2752062414
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_5325823637
finished samples sampling for zz_5325823637
 finished run 3 for problem zz_5325823637
 start run 4 for problem zz_5325823637
   start samplings 1000 for problem zz_5325823637
sampled for problem zz_5325823637
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
finished samples sampling for zz_0446214293
 finished run 4 for problem zz_0446214293
 start run 5 for problem zz_0446214293
   start samplings 1000 for problem zz_0446214293
sampled for problem zz_0446214293
sampled for problem zz_6269837941
finished samples sampling for zz_6269837941
 finished run 3 for problem zz_6269837941
 start run 4 for problem zz_6269837941
   start samplings 1000 for problem zz_6269837941
sampled for problem zz_6269837941
sampled for problem zz_3559114144
finished samples sampling for zz_3559114144
 finished run 3 for problem zz_3559114144
 start run 4 for problem zz_3559114144
   start samplings 1000 for problem zz_3559114144
sampled for problem zz_3559114144
sampled for problem zz_8129357418
finished samples sampling for zz_8129357418
 finished run 3 for problem zz_8129357418
 start run 4 for problem zz_8129357418
   start samplings 1000 for problem zz_8129357418
sampled for problem zz_8129357418
sampled for problem zz_0180383007
finished samples sampling for zz_0180383007
 finished run 3 for problem zz_0180383007
 start run 4 for problem zz_0180383007
   start samplings 1000 for problem zz_0180383007
sampled for problem zz_0180383007
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_2497804221
finished samples sampling for zz_2497804221
 finished run 4 for problem zz_2497804221
 start run 5 for problem zz_2497804221
   start samplings 1000 for problem zz_2497804221
sampled for problem zz_2497804221
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 finished writing answer for problem {} zz_2236080878
 start writing answer for problem {} zz_8100679620
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd395735310>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd395735310>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0318641083
finished samples sampling for zz_0318641083
 finished run 4 for problem zz_0318641083
 start run 5 for problem zz_0318641083
   start samplings 1000 for problem zz_0318641083
sampled for problem zz_0318641083
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0140728978
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7421375757
finished samples sampling for zz_7421375757
 finished run 8 for problem zz_7421375757
 start run 9 for problem zz_7421375757
   start samplings 1000 for problem zz_7421375757
sampled for problem zz_7421375757
sampled for problem zz_2290663268
finished samples sampling for zz_2290663268
 finished run 7 for problem zz_2290663268
 start run 8 for problem zz_2290663268
   start samplings 1000 for problem zz_2290663268
sampled for problem zz_2290663268
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0085220014
finished samples sampling for zz_0085220014
 finished run 7 for problem zz_0085220014
 start run 8 for problem zz_0085220014
   start samplings 1000 for problem zz_0085220014
sampled for problem zz_0085220014
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1534170724
finished samples sampling for zz_1534170724
 finished run 9 for problem zz_1534170724
 succesfully retrieved answer for problem {} zz_1534170724
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_1534170724
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb0df4fa120>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb0df4fa120>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7223102935
finished samples sampling for zz_7223102935
 finished run 7 for problem zz_7223102935
 start run 8 for problem zz_7223102935
   start samplings 1000 for problem zz_7223102935
sampled for problem zz_7223102935
sampled for problem zz_4197625176
finished samples sampling for zz_4197625176
 finished run 8 for problem zz_4197625176
 start run 9 for problem zz_4197625176
   start samplings 1000 for problem zz_4197625176
sampled for problem zz_4197625176
sampled for problem zz_8229547046
finished samples sampling for zz_8229547046
 finished run 8 for problem zz_8229547046
 start run 9 for problem zz_8229547046
   start samplings 1000 for problem zz_8229547046
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8229547046
sampled for problem zz_8661404323
finished samples sampling for zz_8661404323
 finished run 8 for problem zz_8661404323
 start run 9 for problem zz_8661404323
   start samplings 1000 for problem zz_8661404323
sampled for problem zz_8661404323
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7421375757
finished samples sampling for zz_7421375757
 finished run 9 for problem zz_7421375757
 succesfully retrieved answer for problem {} zz_7421375757
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_7421375757
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb36c489e20>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb36c489e20>
sampled for problem zz_2290663268
finished samples sampling for zz_2290663268
 finished run 8 for problem zz_2290663268
 start run 9 for problem zz_2290663268
   start samplings 1000 for problem zz_2290663268
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2290663268
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0085220014
finished samples sampling for zz_0085220014
 finished run 8 for problem zz_0085220014
 start run 9 for problem zz_0085220014
   start samplings 1000 for problem zz_0085220014
sampled for problem zz_0085220014
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_1534170724
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables 
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_0244546704
finished samples sampling for zz_0244546704
 finished run 3 for problem zz_0244546704
 start run 4 for problem zz_0244546704
   start samplings 1000 for problem zz_0244546704
sampled for problem zz_0244546704
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 finished writing answer for problem {} zz_0437237586
 start writing answer for problem {} zz_6514437321
sampled for problem zz_8557696436
finished samples sampling for zz_8557696436
 finished run 3 for problem zz_8557696436
 start run 4 for problem zz_8557696436
   start samplings 1000 for problem zz_8557696436
sampled for problem zz_8557696436
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2e4f05760>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2e4f05760>
sampled for problem zz_4820464946
finished samples sampling for zz_4820464946
 finished run 3 for problem zz_4820464946
 start run 4 for problem zz_4820464946
   start samplings 1000 for problem zz_4820464946
sampled for problem zz_4820464946
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7975579866
finished samples sampling for zz_7975579866
 finished run 4 for problem zz_7975579866
 start run 5 for problem zz_7975579866
   start samplings 1000 for problem zz_7975579866
sampled for problem zz_7975579866
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_4160526692
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1047118313
finished samples sampling for zz_1047118313
 finished run 3 for problem zz_1047118313
 start run 4 for problem zz_1047118313
   start samplings 1000 for problem zz_1047118313
sampled for problem zz_1047118313
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
finished samples sampling for zz_7103584348
 finished run 3 for problem zz_7103584348
 start run 4 for problem zz_7103584348
   start samplings 1000 for problem zz_7103584348
sampled for problem zz_7103584348
sampled for problem zz_1130858706
finished samples sampling for zz_1130858706
 finished run 3 for problem zz_1130858706
 start run 4 for problem zz_1130858706
   start samplings 1000 for problem zz_1130858706
sampled for problem zz_1130858706
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0984166701
finished samples sampling for zz_0984166701
 finished run 4 for problem zz_0984166701
 start run 5 for problem zz_0984166701
   start samplings 1000 for problem zz_0984166701
sampled for problem zz_0984166701
sampled for problem zz_3657359779
finished samples sampling for zz_3657359779
 finished run 3 for problem zz_3657359779
 start run 4 for problem zz_3657359779
   start samplings 1000 for problem zz_3657359779
sampled for problem zz_3657359779
sampled for problem zz_4213021836
finished samples sampling for zz_4213021836
 finished run 4 for problem zz_4213021836
 start run 5 for problem zz_4213021836
   start samplings 1000 for problem zz_4213021836
sampled for problem zz_4213021836
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2835206639
finished samples sampling for zz_2835206639
 finished run 3 for problem zz_2835206639
 start run 4 for problem zz_2835206639
   start samplings 1000 for problem zz_2835206639
sampled for problem zz_2835206639
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1566314580
finished samples sampling for zz_1566314580
 finished run 5 for problem zz_1566314580
 start run 6 for problem zz_1566314580
   start samplings 1000 for problem zz_1566314580
sampled for problem zz_1566314580
sampled for problem zz_9713990306
finished samples sampling for zz_9713990306
 finished run 4 for problem zz_9713990306
 start run 5 for problem zz_9713990306
   start samplings 1000 for problem zz_9713990306
sampled for problem zz_9713990306
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7103584348
finished samples sampling for zz_7103584348
 finished run 4 for problem zz_7103584348
 start run 5 for problem zz_7103584348
   start samplings 1000 for problem zz_7103584348
sampled for problem zz_7103584348
sampled for problem zz_1130858706
finished samples sampling for zz_1130858706
 finished run 4 for problem zz_1130858706
 start run 5 for problem zz_1130858706
   start samplings 1000 for problem zz_1130858706
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1130858706
sampled for problem zz_0984166701
finished samples sampling for zz_0984166701
 finished run 5 for problem zz_0984166701
 start run 6 for problem zz_0984166701
   start samplings 1000 for problem zz_0984166701
sampled for problem zz_0984166701
sampled for problem zz_3657359779
finished samples sampling for zz_3657359779
 finished run 4 for problem zz_3657359779
 start run 5 for problem zz_3657359779
   start samplings 1000 for problem zz_3657359779
sampled for problem zz_3657359779
sampled for problem zz_4213021836
finished samples sampling for zz_4213021836
 finished run 5 for problem zz_4213021836
 start run 6 for problem zz_4213021836
   start samplings 1000 for problem zz_4213021836
sampled for problem zz_4213021836
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2835206639
finished samples sampling for zz_2835206639
 finished run 4 for problem zz_2835206639
 start run 5 for problem zz_2835206639
   start samplings 1000 for problem zz_2835206639
sampled for problem zz_2835206639
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1566314580
finished samples sampling for zz_1566314580
 finished run 6 for problem zz_1566314580
 start run 7 for problem zz_1566314580
   start samplings 1000 for problem zz_1566314580
sampled for problem zz_1566314580
sampled for problem zz_9713990306
finished samples sampling for zz_9713990306
 finished run 5 for problem zz_9713990306
 start run 6 for problem zz_9713990306
   start samplings 1000 for problem zz_9713990306
sampled for problem zz_9713990306
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7103584348
finished samples sampling for zz_7103584348
 finished run 5 for problem zz_7103584348
 start run 6 for problem zz_7103584348
   start samplings 1000 for problem zz_7103584348
sampled for problem zz_7103584348
sampled for problem zz_1130858706
finished samples sampling for zz_1130858706
 finished run 5 for problem zz_1130858706
 start run 6 for problem zz_1130858706
   start samplings 1000 for problem zz_1130858706
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1130858706
sampled for problem zz_0984166701
finished samples sampling for zz_0984166701
 finished run 6 for problem zz_0984166701
 start run 7 for problem zz_0984166701
   start samplings 1000 for problem zz_0984166701
sampled for problem zz_0984166701
sampled for problem zz_3657359779
finished samples sampling for zz_3657359779
 finished run 5 for problem zz_3657359779
 start run 6 for problem zz_3657359779
   start samplings 1000 for problem zz_3657359779
sampled for problem zz_3657359779
sampled for problem zz_4213021836
finished samples sampling for zz_4213021836
 finished run 6 for problem zz_4213021836
 start run 7 for problem zz_4213021836
   start samplings 1000 for problem zz_4213021836
sampled for problem zz_4213021836
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2835206639
finished samples sampling for zz_2835206639
 finished run 5 for problem zz_2835206639
 start run 6 for problem zz_2835206639
   start samplings 1000 for problem zz_2835206639
sampled for problem zz_2835206639
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1566314580
finished samples sampling for zz_1566314580
 finished run 7 for problem zz_1566314580
 start run 8 for problem zz_1566314580
   start samplings 1000 for problem zz_1566314580
sampled for problem zz_1566314580
sampled for problem zz_9713990306
finished samples sampling for zz_9713990306
 finished run 6 for problem zz_9713990306
 start run 7 for problem zz_9713990306
   start samplings 1000 for problem zz_9713990306
sampled for problem zz_9713990306
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7103584348
finished samples sampling for zz_7103584348
 finished run 6 for problem zz_7103584348
 start run 7 for problem zz_7103584348
   start samplings 1000 for problem zz_7103584348
sampled for problem zz_7103584348
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1130858706
finished samples sampling for zz_1130858706
 finished run 6 for problem zz_1130858706
 start run 7 for problem zz_1130858706
   start samplings 1000 for problem zz_1130858706
sampled for problem zz_1130858706
sampled for problem zz_0984166701
finished samples sampling for zz_0984166701
 finished run 7 for problem zz_0984166701
 start run 8 for problem zz_0984166701
   start samplings 1000 for problem zz_0984166701
sampled for problem zz_0984166701
sampled for problem zz_3657359779
finished samples sampling for zz_3657359779
 finished run 6 for problem zz_3657359779
 start run 7 for problem zz_3657359779
   start samplings 1000 for problem zz_3657359779
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8342877442
 start writing answer for problem {} zz_6252892828
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5923326330>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5923326330>
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8705643469
 start writing answer for problem {} zz_4337938137
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f59222f44a0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f59222f44a0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_8979952804
finished samples sampling for zz_8979952804
 finished run 2 for problem zz_8979952804
 start run 3 for problem zz_8979952804
   start samplings 1000 for problem zz_8979952804
sampled for problem zz_8979952804
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_6214128419
finished samples sampling for zz_6214128419
 finished run 2 for problem zz_6214128419
 start run 3 for problem zz_6214128419
   start samplings 1000 for problem zz_6214128419
sampled for problem zz_6214128419
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_3002816115
finished samples sampling for zz_3002816115
 finished run 3 for problem zz_3002816115
 start run 4 for problem zz_3002816115
   start samplings 1000 for problem zz_3002816115
sampled for problem zz_3002816115
sampled for problem zz_5988593358
finished samples sampling for zz_5988593358
 finished run 2 for problem zz_5988593358
 start run 3 for problem zz_5988593358
   start samplings 1000 for problem zz_5988593358
sampled for problem zz_5988593358
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_0991124024
finished samples sampling for zz_0991124024
 finished run 2 for problem zz_0991124024
 start run 3 for problem zz_0991124024
   start samplings 1000 for problem zz_0991124024
sampled for problem zz_0991124024
sampled for problem zz_9085162316
finished samples sampling for zz_9085162316
 finished run 2 for problem zz_9085162316
 start run 3 for problem zz_9085162316
   start samplings 1000 for problem zz_9085162316
sampled for problem zz_9085162316
sampled for problem zz_2486085441
finished samples sampling for zz_2486085441
 finished run 2 for problem zz_2486085441
 start run 3 for problem zz_2486085441
   start samplings 1000 for problem zz_2486085441
sampled for problem zz_2486085441
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_0857212263
finished samples sampling for zz_0857212263
 finished run 2 for problem zz_0857212263
 start run 3 for problem zz_0857212263
   start samplings 1000 for problem zz_0857212263
sampled for problem zz_0857212263
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_2411961934
 start writing answer for problem {} zz_0229631392
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5643aed8b0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5643aed8b0>
sampled for problem zz_3593098853
finished samples sampling for zz_3593098853
 finished run 2 for problem zz_3593098853
 start run 3 for problem zz_3593098853
   start samplings 1000 for problem zz_3593098853
sampled for problem zz_3593098853
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_9009261444
finished samples sampling for zz_9009261444
 finished run 2 for problem zz_9009261444
 start run 3 for problem zz_9009261444
   start samplings 1000 for problem zz_9009261444
sampled for problem zz_9009261444
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_4790003576
finished samples sampling for zz_4790003576
 finished run 3 for problem zz_4790003576
 start run 4 for problem zz_4790003576
   start samplings 1000 for problem zz_4790003576
sampled for problem zz_4790003576
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8486709234
 start writing answer for problem {} zz_2106543518
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5642b2e870>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5642b2e870>
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_8770741114
finished samples sampling for zz_8770741114
 finished run 3 for problem zz_8770741114
 start run 4 for problem zz_8770741114
   start samplings 1000 for problem zz_8770741114
sampled for problem zz_8770741114
sampled for problem zz_5768432036
finished samples sampling for zz_5768432036
 finished run 3 for problem zz_5768432036
 start run 4 for problem zz_5768432036
   start samplings 1000 for problem zz_5768432036
sampled for problem zz_5768432036
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_0167361147
finished samples sampling for zz_0167361147
 finished run 3 for problem zz_0167361147
 start run 4 for problem zz_0167361147
   start samplings 1000 for problem zz_0167361147
sampled for problem zz_0167361147
sampled for problem zz_0857212263
finished samples sampling for zz_0857212263 <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f77b85e6570>
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_8611608945
finished samples sampling for zz_8611608945
 finished run 3 for problem zz_8611608945
 start run 4 for problem zz_8611608945
   start samplings 1000 for problem zz_8611608945
sampled for problem zz_8611608945
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_1357117085
finished samples sampling for zz_1357117085
 finished run 3 for problem zz_1357117085
 start run 4 for problem zz_1357117085
   start samplings 1000 for problem zz_1357117085
sampled for problem zz_1357117085
sampled for problem zz_8281893723
finished samples sampling for zz_8281893723
 finished run 3 for problem zz_8281893723
 start run 4 for problem zz_8281893723
   start samplings 1000 for problem zz_8281893723
sampled for problem zz_0616570644
finished samples sampling for zz_0616570644
 finished run 3 for problem zz_0616570644
 start run 4 for problem zz_0616570644
   start samplings 1000 for problem zz_0616570644
sampled for problem zz_8281893723
sampled for problem zz_0616570644
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_5860958113
 start writing answer for problem {} zz_5775954040
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f77a91e5a60>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f77a91e5a60>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_3172680174
finished samples sampling for zz_3172680174
 finished run 4 for problem zz_3172680174
 start run 5 for problem zz_3172680174
   start samplings 1000 for problem zz_3172680174
sampled for problem zz_3172680174
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7137191291
finished samples sampling for zz_7137191291
 finished run 4 for problem zz_7137191291
 start run 5 for problem zz_7137191291
   start samplings 1000 for problem zz_7137191291
sampled for problem zz_7137191291
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_3454216945
finished samples sampling for zz_3454216945
 finished run 4 for problem zz_3454216945
 start run 5 for problem zz_3454216945
   start samplings 1000 for problem zz_3454216945
sampled for problem zz_3454216945
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_5044724301
finished samples sampling for zz_5044724301
 finished run 4 for problem zz_5044724301
 start run 5 for problem zz_5044724301
   start samplings 1000 for problem zz_5044724301
sampled for problem zz_5044724301
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8611608945
finished samples sampling for zz_8611608945
 finished run 4 for problem zz_8611608945
 start run 5 for problem zz_8611608945
   start samplings 1000 for problem zz_8611608945
sampled for problem zz_8611608945
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_1357117085
finished samples sampling for zz_1357117085
 finished run 4 for problem zz_1357117085
 start run 5 for problem zz_1357117085
   start samplings 1000 for problem zz_1357117085
sampled for problem zz_1357117085
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_8281893723
finished samples sampling for zz_8281893723
 finished run 4 for problem zz_8281893723
 start run 5 for problem zz_8281893723
   start samplings 1000 for problem zz_8281893723
sampled for problem zz_8281893723
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0616570644
finished samples sampling for zz_0616570644
 finished run 4 for problem zz_0616570644
 start run 5 for problem zz_0616570644
   start samplings 1000 for problem zz_0616570644
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_4337938137
 start writing answer for problem {} zz_1663139989
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f59222f57f0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f59222f57f0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_8979952804
finished samples sampling for zz_8979952804
 finished run 3 for problem zz_8979952804
 start run 4 for problem zz_8979952804
   start samplings 1000 for problem zz_8979952804
sampled for problem zz_8979952804
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6252892828
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_1663139989
sampled for problem zz_6214128419
finished samples sampling for zz_6214128419
 finished run 3 for problem zz_6214128419
 start run 4 for problem zz_6214128419
   start samplings 1000 for problem zz_6214128419
sampled for problem zz_6214128419
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_3002816115
finished samples sampling for zz_3002816115
 finished run 4 for problem zz_3002816115
 start run 5 for problem zz_3002816115
   start samplings 1000 for problem zz_3002816115
sampled for problem zz_3002816115
sampled for problem zz_5988593358
finished samples sampling for zz_5988593358
 finished run 3 for problem zz_5988593358
 start run 4 for problem zz_5988593358
   start samplings 1000 for problem zz_5988593358
sampled for problem zz_5988593358
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0991124024<class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_7421375757
sampled for problem zz_7223102935
finished samples sampling for zz_7223102935
 finished run 8 for problem zz_7223102935
 start run 9 for problem zz_7223102935
   start samplings 1000 for problem zz_7223102935
sampled for problem zz_7223102935
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_4197625176
finished samples sampling for zz_4197625176
 finished run 9 for problem zz_4197625176
 succesfully retrieved answer for problem {} zz_4197625176
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_4197625176
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb2267be270>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb2267be270>
sampled for problem zz_8229547046
finished samples sampling for zz_8229547046
 finished run 9 for problem zz_8229547046
 succesfully retrieved answer for problem {} zz_8229547046
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_8229547046
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8661404323
finished samples sampling for zz_8661404323
 finished run 9 for problem zz_8661404323
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb22765ede0>
 succesfully retrieved answer for problem {} zz_8661404323
 submitter queue is empty, will wait at barrier for all submitters to finish.
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb22765ede0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_2290663268
finished samples sampling for zz_2290663268
 finished run 9 for problem zz_2290663268
 succesfully retrieved answer for problem {} zz_2290663268
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_0085220014
finished samples sampling for zz_0085220014
 finished run 9 for problem zz_0085220014
 succesfully retrieved answer for problem {} zz_0085220014
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8229547046
 start writing answer for problem {} zz_8661404323
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb2278e4290>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb2278e4290>
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_7223102935
finished samples sampling for zz_7223102935
 finished run 9 for problem zz_7223102935
 succesfully retrieved answer for problem {} zz_7223102935
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Joined all submitter threads.
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished run 3 for problem zz_0857212263
 start run 4 for problem zz_0857212263
   start samplings 1000 for problem zz_0857212263
sampled for problem zz_0857212263
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_3593098853
finished samples sampling for zz_3593098853
 finished run 3 for problem zz_3593098853
 start run 4 for problem zz_3593098853
   start samplings 1000 for problem zz_3593098853
sampled for problem zz_3593098853
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_9009261444
finished samples sampling for zz_9009261444
 finished run 3 for problem zz_9009261444
 start run 4 for problem zz_9009261444
   start samplings 1000 for problem zz_9009261444
sampled for problem zz_9009261444
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0229631392
 start writing answer for problem {} zz_5919623735
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5642955670>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5642955670>
sampled for problem zz_4790003576
finished samples sampling for zz_4790003576
 finished run 4 for problem zz_4790003576
 start run 5 for problem zz_4790003576
   start samplings 1000 for problem zz_4790003576
sampled for problem zz_4790003576
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8770741114
finished samples sampling for zz_8770741114
 finished run 4 for problem zz_8770741114
 start run 5 for problem zz_8770741114
   start samplings 1000 for problem zz_8770741114
sampled for problem zz_8770741114
sampled for problem zz_5768432036
finished samples sampling for zz_5768432036
 finished run 4 for problem zz_5768432036
 start run 5 for problem zz_5768432036
   start samplings 1000 for problem zz_5768432036
sampled for problem zz_5768432036
sampled for problem zz_0167361147
finished samples sampling for zz_0167361147
 finished run 4 for problem zz_0167361147
 start run 5 for problem zz_0167361147
   start samplings 1000 for problem zz_0167361147
sampled for problem zz_0167361147
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0857212263
finished samples sampling for zz_0857212263
 finished run 4 for problem zz_0857212263
 start run 5 for problem zz_0857212263
   start samplings 1000 for problem zz_0857212263
sampled for problem zz_0857212263
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_3593098853
finished samples sampling for zz_3593098853
 finished run 4 for problem zz_3593098853
 start run 5 for problem zz_3593098853
   start samplings 1000 for problem zz_3593098853
sampled for problem zz_3593098853
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8100679620
sampled for problem zz_9818300553
finished samples sampling for zz_9818300553
 finished run 4 for problem zz_9818300553
 start run 5 for problem zz_9818300553
   start samplings 1000 for problem zz_9818300553
sampled for problem zz_9818300553
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0446214293
finished samples sampling for zz_0446214293
 finished run 5 for problem zz_0446214293
 start run 6 for problem zz_0446214293
   start samplings 1000 for problem zz_0446214293
sampled for problem zz_0446214293
sampled for problem zz_6269837941
finished samples sampling for zz_6269837941
 finished run 4 for problem zz_6269837941
 start run 5 for problem zz_6269837941
   start samplings 1000 for problem zz_6269837941
sampled for problem zz_6269837941
sampled for problem zz_3559114144
finished samples sampling for zz_3559114144
 finished run 4 for problem zz_3559114144
 start run 5 for problem zz_3559114144
   start samplings 1000 for problem zz_3559114144
sampled for problem zz_3559114144
sampled for problem zz_8129357418
finished samples sampling for zz_8129357418
 finished run 4 for problem zz_8129357418
 start run 5 for problem zz_8129357418
   start samplings 1000 for problem zz_8129357418
sampled for problem zz_8129357418
sampled for problem zz_0180383007
finished samples sampling for zz_0180383007
 finished run 4 for problem zz_0180383007
 start run 5 for problem zz_0180383007
   start samplings 1000 for problem zz_0180383007
sampled for problem zz_0180383007
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2497804221
finished samples sampling for zz_2497804221
 finished run 5 for problem zz_2497804221
 start run 6 for problem zz_2497804221
   start samplings 1000 for problem zz_2497804221
sampled for problem zz_2497804221
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0318641083
finished samples sampling for zz_0318641083
 finished run 5 for problem zz_0318641083
 start run 6 for problem zz_0318641083
   start samplings 1000 for problem zz_0318641083
sampled for problem zz_0318641083
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_9818300553
finished samples sampling for zz_9818300553
 finished run 5 for problem zz_9818300553
 start run 6 for problem zz_9818300553
   start samplings 1000 for problem zz_9818300553
sampled for problem zz_9818300553
sampled for problem zz_0446214293
finished samples sampling for zz_0446214293
 finished run 6 for problem zz_0446214293
 start run 7 for problem zz_0446214293
   start samplings 1000 for problem zz_0446214293
sampled for problem zz_0446214293
sampled for problem zz_6269837941
finished samples sampling for zz_6269837941
 finished run 5 for problem zz_6269837941
 start run 6 for problem zz_6269837941
   start samplings 1000 for problem zz_6269837941
sampled for problem zz_6269837941
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_3559114144
finished samples sampling for zz_3559114144
 finished run 5 for problem zz_3559114144
 start run 6 for problem zz_3559114144
   start samplings 1000 for problem zz_3559114144
sampled for problem zz_3559114144
sampled for problem zz_8129357418
finished samples sampling for zz_8129357418
 finished run 5 for problem zz_8129357418
 start run 6 for problem zz_8129357418
   start samplings 1000 for problem zz_8129357418
sampled for problem zz_8129357418
sampled for problem zz_0180383007
finished samples sampling for zz_0180383007
 finished run 5 for problem zz_0180383007
 start run 6 for problem zz_0180383007
   start samplings 1000 for problem zz_0180383007
sampled for problem zz_0180383007
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2497804221
finished samples sampling for zz_2497804221
 finished run 6 for problem zz_2497804221
 start run 7 for problem zz_2497804221
   start samplings 1000 for problem zz_2497804221
sampled for problem zz_2497804221
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0318641083
finished samples sampling for zz_0318641083
 finished run 6 for problem zz_0318641083
 start run 7 for problem zz_0318641083
   start samplings 1000 for problem zz_0318641083
sampled for problem zz_0318641083
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_9818300553
finished samples sampling for zz_9818300553
 finished run 6 for problem zz_9818300553
 start run 7 for problem zz_9818300553
   start samplings 1000 for problem zz_9818300553
sampled for problem zz_9818300553
sampled for problem zz_0446214293
finished samples sampling for zz_0446214293
 finished run 7 for problem zz_0446214293
 start run 8 for problem zz_0446214293
   start samplings 1000 for problem zz_0446214293
sampled for problem zz_0446214293
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_6269837941
finished samples sampling for zz_6269837941
 finished run 6 for problem zz_6269837941
 start run 7 for problem zz_6269837941
   start samplings 1000 for problem zz_6269837941
sampled for problem zz_6269837941
sampled for problem zz_3559114144
finished samples sampling for zz_3559114144
 finished run 6 for problem zz_3559114144
 start run 7 for problem zz_3559114144
   start samplings 1000 for problem zz_3559114144
sampled for problem zz_3559114144
sampled for problem zz_8129357418
finished samples sampling for zz_8129357418
 finished run 6 for problem zz_8129357418
 start run 7 for problem zz_8129357418
   start samplings 1000 for problem zz_8129357418
sampled for problem zz_8129357418
sampled for problem zz_0180383007
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_4197625176
 start writing answer for problem {} zz_2290663268
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb226e987a0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb226e987a0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_2290663268
 start writing answer for problem {} zz_0085220014
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb226ff4c20>
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb226ff4c20>
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_0616570644
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0061234211
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_5775954040
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_3172680174
finished samples sampling for zz_3172680174
 finished run 5 for problem zz_3172680174
 start run 6 for problem zz_3172680174
   start samplings 1000 for problem zz_3172680174
sampled for problem zz_3172680174
sampled for problem zz_7137191291
finished samples sampling for zz_7137191291
 finished run 5 for problem zz_7137191291
 start run 6 for problem zz_7137191291
   start samplings 1000 for problem zz_7137191291
sampled for problem zz_7137191291
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_3454216945
finished samples sampling for zz_3454216945
 finished run 5 for problem zz_3454216945
 start run 6 for problem zz_3454216945
   start samplings 1000 for problem zz_3454216945
sampled for problem zz_3454216945
sampled for problem zz_5044724301
finished samples sampling for zz_5044724301
 finished run 5 for problem zz_5044724301
 start run 6 for problem zz_5044724301
   start samplings 1000 for problem zz_5044724301
sampled for problem zz_5044724301
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8611608945
finished samples sampling for zz_8611608945
 finished run 5 for problem zz_8611608945
 start run 6 for problem zz_8611608945
   start samplings 1000 for problem zz_8611608945
sampled for problem zz_8611608945
sampled for problem zz_1357117085
finished samples sampling for zz_1357117085
 finished run 5 for problem zz_1357117085
 start run 6 for problem zz_1357117085
   start samplings 1000 for problem zz_1357117085
sampled for problem zz_1357117085
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8281893723
finished samples sampling for zz_8281893723
 finished run 5 for problem zz_8281893723
 start run 6 for problem zz_8281893723
   start samplings 1000 for problem zz_8281893723
sampled for problem zz_8281893723
sampled for problem zz_0616570644
finished samples sampling for zz_0616570644
 finished run 5 for problem zz_0616570644
 start run 6 for problem zz_0616570644
   start samplings 1000 for problem zz_0616570644
sampled for problem zz_0616570644
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_3172680174
finished samples sampling for zz_3172680174
 finished run 6 for problem zz_3172680174
 start run 7 for problem zz_3172680174
   start samplings 1000 for problem zz_3172680174
sampled for problem zz_3172680174
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7137191291
finished samples sampling for zz_7137191291
 finished run 6 for problem zz_7137191291
 start run 7 for problem zz_7137191291
   start samplings 1000 for problem zz_7137191291
sampled for problem zz_7137191291
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_3454216945
finished samples sampling for zz_3454216945
 finished run 6 for problem zz_3454216945
 start run 7 for problem zz_3454216945
   start samplings 1000 for problem zz_3454216945
sampled for problem zz_3454216945
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_5044724301
finished samples sampling for zz_5044724301
 finished run 6 for problem zz_5044724301
 start run 7 for problem zz_5044724301
   start samplings 1000 for problem zz_5044724301
sampled for problem zz_5044724301
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8611608945
finished samples sampling for zz_8611608945
 finished run 6 for problem zz_8611608945
 start run 7 for problem zz_8611608945
   start samplings 1000 for problem zz_8611608945
sampled for problem zz_8611608945
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1357117085
finished samples sampling for zz_1357117085
 finished run 6 for problem zz_1357117085
 start run 7 for problem zz_1357117085
   start samplings 1000 for problem zz_1357117085
sampled for problem zz_1357117085
sampled for problem zz_8281893723
finished samples sampling for zz_8281893723
 finished run 6 for problem zz_8281893723
 start run 7 for problem zz_8281893723
   start samplings 1000 for problem zz_8281893723
sampled for problem zz_3657359779
sampled for problem zz_4213021836
finished samples sampling for zz_4213021836
 finished run 7 for problem zz_4213021836
 start run 8 for problem zz_4213021836
   start samplings 1000 for problem zz_4213021836
sampled for problem zz_4213021836
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2835206639
finished samples sampling for zz_2835206639
 finished run 6 for problem zz_2835206639
 start run 7 for problem zz_2835206639
   start samplings 1000 for problem zz_2835206639
sampled for problem zz_2835206639
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1566314580
finished samples sampling for zz_1566314580
 finished run 8 for problem zz_1566314580
 start run 9 for problem zz_1566314580
   start samplings 1000 for problem zz_1566314580
sampled for problem zz_1566314580
sampled for problem zz_9713990306
finished samples sampling for zz_9713990306
 finished run 7 for problem zz_9713990306
 start run 8 for problem zz_9713990306
   start samplings 1000 for problem zz_9713990306
sampled for problem zz_9713990306
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7103584348
finished samples sampling for zz_7103584348
 finished run 7 for problem zz_7103584348
 start run 8 for problem zz_7103584348
   start samplings 1000 for problem zz_7103584348
sampled for problem zz_7103584348
sampled for problem zz_1130858706
finished samples sampling for zz_1130858706
 finished run 7 for problem zz_1130858706
 start run 8 for problem zz_1130858706
   start samplings 1000 for problem zz_1130858706
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1130858706
sampled for problem zz_0984166701
finished samples sampling for zz_0984166701
 finished run 8 for problem zz_0984166701
 start run 9 for problem zz_0984166701
   start samplings 1000 for problem zz_0984166701
sampled for problem zz_0984166701
sampled for problem zz_3657359779
finished samples sampling for zz_3657359779
 finished run 7 for problem zz_3657359779
 start run 8 for problem zz_3657359779
   start samplings 1000 for problem zz_3657359779
sampled for problem zz_3657359779
sampled for problem zz_4213021836
finished samples sampling for zz_4213021836
 finished run 8 for problem zz_4213021836
 start run 9 for problem zz_4213021836
   start samplings 1000 for problem zz_4213021836
sampled for problem zz_4213021836
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2835206639
finished samples sampling for zz_2835206639
 finished run 7 for problem zz_2835206639
 start run 8 for problem zz_2835206639
   start samplings 1000 for problem zz_2835206639
sampled for problem zz_2835206639
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1566314580
finished samples sampling for zz_1566314580
 finished run 9 for problem zz_1566314580
 succesfully retrieved answer for problem {} zz_1566314580
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_1566314580
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f31c837ede0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f31c837ede0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_9713990306
finished samples sampling for zz_9713990306
 finished run 8 for problem zz_9713990306
 start run 9 for problem zz_9713990306
   start samplings 1000 for problem zz_9713990306
sampled for problem zz_9713990306
sampled for problem zz_7103584348
finished samples sampling for zz_7103584348
 finished run 8 for problem zz_7103584348
 start run 9 for problem zz_7103584348
   start samplings 1000 for problem zz_7103584348
sampled for problem zz_7103584348
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1130858706
finished samples sampling for zz_1130858706
 finished run 8 for problem zz_1130858706
 start run 9 for problem zz_1130858706
   start samplings 1000 for problem zz_1130858706
sampled for problem zz_1130858706
sampled for problem zz_0984166701
finished samples sampling for zz_0984166701
 finished run 9 for problem zz_0984166701
sampled for problem zz_3657359779
finished samples sampling for zz_3657359779
 finished run 8 for problem zz_3657359779
 start run 9 for problem zz_3657359779
   start samplings 1000 for problem zz_3657359779
sampled for problem zz_3657359779
 succesfully retrieved answer for problem {} zz_0984166701
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_0984166701
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f30286cc350>
sampled for problem zz_4213021836
finished samples sampling for zz_4213021836
 finished run 9 for problem zz_4213021836
 succesfully retrieved answer for problem {} zz_4213021836
 submitter queue is empty, will wait at barrier for all submitters to finish.
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f30286cc350>
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_2835206639
finished samples sampling for zz_2835206639
 finished run 8 for problem zz_2835206639
 start run 9 for problem zz_2835206639
   start samplings 1000 for problem zz_2835206639
sampled for problem zz_2835206639
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8661404323
 start writing answer for problem {} zz_7223102935
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb05e6da0f0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fb05e6da0f0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_7223102935
 writer queue is empty and event_flag_submitters_should_work is not set (all submitters should have finished by now), so writer will also finish.
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0085220014
 writer queue is empty and event_flag_submitters_should_work is not set (all submitters should have finished by now), so writer will also finish.
 Joined all writer threads.
 Is queue_problems_to_submit empty: True
 Is queue_answers_to_write empty: True
Execution finished.

_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6514437321
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8965497403
finished samples sampling for zz_8965497403
 finished run 3 for problem zz_8965497403
 start run 4 for problem zz_8965497403
   start samplings 1000 for problem zz_8965497403
sampled for problem zz_8965497403
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2752062414
finished samples sampling for zz_2752062414
 finished run 4 for problem zz_2752062414
 start run 5 for problem zz_2752062414
   start samplings 1000 for problem zz_2752062414
sampled for problem zz_2752062414
sampled for problem zz_5325823637
finished samples sampling for zz_5325823637
 finished run 4 for problem zz_5325823637
 start run 5 for problem zz_5325823637
   start samplings 1000 for problem zz_5325823637
sampled for problem zz_5325823637
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0244546704
finished samples sampling for zz_0244546704
 finished run 4 for problem zz_0244546704
 start run 5 for problem zz_0244546704
   start samplings 1000 for problem zz_0244546704
sampled for problem zz_0244546704
sampled for problem zz_8557696436
finished samples sampling for zz_8557696436
 finished run 4 for problem zz_8557696436
 start run 5 for problem zz_8557696436
   start samplings 1000 for problem zz_8557696436
sampled for problem zz_8557696436
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_4820464946
finished samples sampling for zz_4820464946
 finished run 4 for problem zz_4820464946
 start run 5 for problem zz_4820464946
   start samplings 1000 for problem zz_4820464946
sampled for problem zz_4820464946
sampled for problem zz_7975579866
finished samples sampling for zz_7975579866
 finished run 5 for problem zz_7975579866
 start run 6 for problem zz_7975579866
   start samplings 1000 for problem zz_7975579866
sampled for problem zz_7975579866
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1047118313
finished samples sampling for zz_1047118313
 finished run 4 for problem zz_1047118313
 start run 5 for problem zz_1047118313
   start samplings 1000 for problem zz_1047118313
sampled for problem zz_1047118313
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8965497403
finished samples sampling for zz_8965497403
 finished run 4 for problem zz_8965497403
 start run 5 for problem zz_8965497403
   start samplings 1000 for problem zz_8965497403
sampled for problem zz_8965497403
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2752062414
finished samples sampling for zz_2752062414
 finished run 5 for problem zz_2752062414
 start run 6 for problem zz_2752062414
   start samplings 1000 for problem zz_2752062414
sampled for problem zz_2752062414
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_5325823637
finished samples sampling for zz_5325823637
 finished run 5 for problem zz_5325823637
 start run 6 for problem zz_5325823637
   start samplings 1000 for problem zz_5325823637
sampled for problem zz_5325823637
sampled for problem zz_0244546704
finished samples sampling for zz_0244546704
 finished run 5 for problem zz_0244546704
 start run 6 for problem zz_0244546704
   start samplings 1000 for problem zz_0244546704
sampled for problem zz_0244546704
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8557696436
finished samples sampling for zz_8557696436
 finished run 5 for problem zz_8557696436
 start run 6 for problem zz_8557696436
   start samplings 1000 for problem zz_8557696436
sampled for problem zz_8557696436
sampled for problem zz_4820464946
finished samples sampling for zz_4820464946
 finished run 5 for problem zz_4820464946
 start run 6 for problem zz_4820464946
   start samplings 1000 for problem zz_4820464946
sampled for problem zz_4820464946
sampled for problem zz_7975579866
finished samples sampling for zz_7975579866
 finished run 6 for problem zz_7975579866
 start run 7 for problem zz_7975579866
   start samplings 1000 for problem zz_7975579866
sampled for problem zz_7975579866
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1047118313
finished samples sampling for zz_1047118313
 finished run 5 for problem zz_1047118313
 start run 6 for problem zz_1047118313
   start samplings 1000 for problem zz_1047118313
sampled for problem zz_1047118313
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8965497403
finished samples sampling for zz_8965497403
 finished run 5 for problem zz_8965497403
 start run 6 for problem zz_8965497403
   start samplings 1000 for problem zz_8965497403
sampled for problem zz_8965497403
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2752062414
finished samples sampling for zz_2752062414
 finished run 6 for problem zz_2752062414
 start run 7 for problem zz_2752062414
   start samplings 1000 for problem zz_2752062414
sampled for problem zz_2752062414
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_5325823637
finished samples sampling for zz_5325823637
 finished run 6 for problem zz_5325823637
 start run 7 for problem zz_5325823637
   start samplings 1000 for problem zz_5325823637
sampled for problem zz_5325823637
sampled for problem zz_0244546704
finished samples sampling for zz_0244546704
 finished run 6 for problem zz_0244546704
 start run 7 for problem zz_0244546704
   start samplings 1000 for problem zz_0244546704
sampled for problem zz_0244546704
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8557696436
finished samples sampling for zz_8557696436
 finished run 6 for problem zz_8557696436
 start run 7 for problem zz_8557696436
   start samplings 1000 for problem zz_8557696436
sampled for problem zz_8557696436
sampled for problem zz_4820464946
finished samples sampling for zz_4820464946
 finished run 6 for problem zz_4820464946
 start run 7 for problem zz_4820464946
   start samplings 1000 for problem zz_4820464946
sampled for problem zz_4820464946
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_7975579866
finished samples sampling for zz_7975579866
 finished run 7 for problem zz_7975579866
 start run 8 for problem zz_7975579866
   start samplings 1000 for problem zz_7975579866
sampled for problem zz_7975579866
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1047118313
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_1566314580
 start writing answer for problem {} zz_4213021836
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f3012b9a1e0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f3012b9a1e0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_9713990306
finished samples sampling for zz_9713990306
 finished run 9 for problem zz_9713990306
 succesfully retrieved answer for problem {} zz_9713990306
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_7103584348
finished samples sampling for zz_7103584348
 finished run 9 for problem zz_7103584348
 succesfully retrieved answer for problem {} zz_7103584348
 submitter queue is empty, will wait at barrier for all submitters to finish.
sampled for problem zz_1130858706
finished samples sampling for zz_1130858706
 finished run 9 for problem zz_1130858706
 succesfully retrieved answer for problem {} zz_1130858706
 submitter queue is empty, will wait at barrier for all submitters to finish.
sampled for problem zz_3657359779
finished samples sampling for zz_3657359779
 finished run 9 for problem zz_3657359779
 succesfully retrieved answer for problem {} zz_3657359779
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_4213021836
 start writing answer for problem {} zz_9713990306
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f3012d6dac0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f3012d6dac0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_2835206639
finished samples sampling for zz_2835206639
 finished run 9 for problem zz_2835206639
 succesfully retrieved answer for problem {} zz_2835206639
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Joined all submitter threads.
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables
 finished writing answer for problem {} zz_2106543518
sampled for problem zz_9009261444
finished samples sampling for zz_9009261444
 finished run 4 for problem zz_9009261444
 start run 5 for problem zz_9009261444
   start samplings 1000 for problem zz_9009261444
sampled for problem zz_9009261444
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_5919623735
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_4790003576
finished samples sampling for zz_4790003576
 finished run 5 for problem zz_4790003576
 start run 6 for problem zz_4790003576
   start samplings 1000 for problem zz_4790003576
sampled for problem zz_4790003576
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8770741114
finished samples sampling for zz_8770741114
 finished run 5 for problem zz_8770741114
 start run 6 for problem zz_8770741114
   start samplings 1000 for problem zz_8770741114
sampled for problem zz_8770741114
sampled for problem zz_5768432036
finished samples sampling for zz_5768432036
 finished run 5 for problem zz_5768432036
 start run 6 for problem zz_5768432036
   start samplings 1000 for problem zz_5768432036
sampled for problem zz_5768432036
sampled for problem zz_0167361147
finished samples sampling for zz_0167361147
 finished run 5 for problem zz_0167361147
 start run 6 for problem zz_0167361147
   start samplings 1000 for problem zz_0167361147
sampled for problem zz_0167361147
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0857212263
finished samples sampling for zz_0857212263
 finished run 5 for problem zz_0857212263
 start run 6 for problem zz_0857212263
   start samplings 1000 for problem zz_0857212263
sampled for problem zz_0857212263
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_3593098853
finished samples sampling for zz_3593098853
 finished run 5 for problem zz_3593098853
 start run 6 for problem zz_3593098853
   start samplings 1000 for problem zz_3593098853
sampled for problem zz_3593098853
sampled for problem zz_9009261444
finished samples sampling for zz_9009261444
 finished run 5 for problem zz_9009261444
 start run 6 for problem zz_9009261444
   start samplings 1000 for problem zz_9009261444
sampled for problem zz_9009261444
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_4790003576
finished samples sampling for zz_4790003576
 finished run 6 for problem zz_4790003576
 start run 7 for problem zz_4790003576
   start samplings 1000 for problem zz_4790003576
sampled for problem zz_4790003576
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8770741114
finished samples sampling for zz_8770741114
 finished run 6 for problem zz_8770741114
 start run 7 for problem zz_8770741114
   start samplings 1000 for problem zz_8770741114
sampled for problem zz_8770741114
sampled for problem zz_5768432036
finished samples sampling for zz_5768432036
 finished run 6 for problem zz_5768432036
 start run 7 for problem zz_5768432036
   start samplings 1000 for problem zz_5768432036
sampled for problem zz_5768432036
sampled for problem zz_0167361147
finished samples sampling for zz_0167361147
 finished run 6 for problem zz_0167361147
 start run 7 for problem zz_0167361147
   start samplings 1000 for problem zz_0167361147
sampled for problem zz_0167361147
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0857212263
finished samples sampling for zz_0857212263
 finished run 6 for problem zz_0857212263
 start run 7 for problem zz_0857212263
   start samplings 1000 for problem zz_0857212263
sampled for problem zz_0857212263
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_3593098853
finished samples sampling for zz_3593098853
 finished run 6 for problem zz_3593098853
 start run 7 for problem zz_3593098853
   start samplings 1000 for problem zz_3593098853
sampled for problem zz_3593098853
sampled for problem zz_9009261444
finished samples sampling for zz_9009261444
 finished run 6 for problem zz_9009261444
 start run 7 for problem zz_9009261444
   start samplings 1000 for problem zz_9009261444
sampled for problem zz_9009261444
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_4790003576
finished samples sampling for zz_4790003576
 finished run 7 for problem zz_4790003576
 start run 8 for problem zz_4790003576
   start samplings 1000 for problem zz_4790003576
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_4790003576
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8770741114
finished samples sampling for zz_8770741114
 finished run 7 for problem zz_8770741114
 start run 8 for problem zz_8770741114
   start samplings 1000 for problem zz_8770741114
sampled for problem zz_8770741114
sampled for problem zz_5768432036
finished samples sampling for zz_5768432036
 finished run 7 for problem zz_5768432036
 start run 8 for problem zz_5768432036
   start samplings 1000 for problem zz_5768432036
sampled for problem zz_5768432036
sampled for problem zz_0167361147
finished samples sampling for zz_0167361147
 finished run 7 for problem zz_0167361147
finished samples sampling for zz_0180383007
 finished run 6 for problem zz_0180383007
 start run 7 for problem zz_0180383007
   start samplings 1000 for problem zz_0180383007
sampled for problem zz_0180383007
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2497804221
finished samples sampling for zz_2497804221
 finished run 7 for problem zz_2497804221
 start run 8 for problem zz_2497804221
   start samplings 1000 for problem zz_2497804221
sampled for problem zz_2497804221
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0318641083
finished samples sampling for zz_0318641083
 finished run 7 for problem zz_0318641083
 start run 8 for problem zz_0318641083
   start samplings 1000 for problem zz_0318641083
sampled for problem zz_0318641083
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_9818300553
finished samples sampling for zz_9818300553
 finished run 7 for problem zz_9818300553
 start run 8 for problem zz_9818300553
   start samplings 1000 for problem zz_9818300553
sampled for problem zz_9818300553
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0446214293
finished samples sampling for zz_0446214293
 finished run 8 for problem zz_0446214293
 start run 9 for problem zz_0446214293
   start samplings 1000 for problem zz_0446214293
sampled for problem zz_0446214293
sampled for problem zz_6269837941
finished samples sampling for zz_6269837941
 finished run 7 for problem zz_6269837941
 start run 8 for problem zz_6269837941
   start samplings 1000 for problem zz_6269837941
sampled for problem zz_6269837941
sampled for problem zz_3559114144
finished samples sampling for zz_3559114144
 finished run 7 for problem zz_3559114144
 start run 8 for problem zz_3559114144
   start samplings 1000 for problem zz_3559114144
sampled for problem zz_3559114144
sampled for problem zz_8129357418
finished samples sampling for zz_8129357418
 finished run 7 for problem zz_8129357418
 start run 8 for problem zz_8129357418
   start samplings 1000 for problem zz_8129357418
sampled for problem zz_8129357418
sampled for problem zz_0180383007
finished samples sampling for zz_0180383007
 finished run 7 for problem zz_0180383007
 start run 8 for problem zz_0180383007
   start samplings 1000 for problem zz_0180383007
sampled for problem zz_0180383007
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2497804221
finished samples sampling for zz_2497804221
 finished run 8 for problem zz_2497804221
 start run 9 for problem zz_2497804221
   start samplings 1000 for problem zz_2497804221
sampled for problem zz_2497804221
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0318641083
finished samples sampling for zz_0318641083
 finished run 8 for problem zz_0318641083
 start run 9 for problem zz_0318641083
   start samplings 1000 for problem zz_0318641083
sampled for problem zz_0318641083
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_9818300553
finished samples sampling for zz_9818300553
 finished run 8 for problem zz_9818300553
 start run 9 for problem zz_9818300553
   start samplings 1000 for problem zz_9818300553
sampled for problem zz_9818300553
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0446214293
finished samples sampling for zz_0446214293
 finished run 9 for problem zz_0446214293
 succesfully retrieved answer for problem {} zz_0446214293
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_0446214293
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd6787e27b0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd6787e27b0>
sampled for problem zz_6269837941
finished samples sampling for zz_6269837941
 finished run 8 for problem zz_6269837941
 start run 9 for problem zz_6269837941
   start samplings 1000 for problem zz_6269837941
sampled for problem zz_6269837941
sampled for problem zz_3559114144
finished samples sampling for zz_3559114144
 finished run 8 for problem zz_3559114144
 start run 9 for problem zz_3559114144
   start samplings 1000 for problem zz_3559114144
sampled for problem zz_3559114144
sampled for problem zz_8129357418
finished samples sampling for zz_8129357418
 finished run 8 for problem zz_8129357418
 start run 9 for problem zz_8129357418
   start samplings 1000 for problem zz_8129357418
sampled for problem zz_8129357418
sampled for problem zz_0180383007
finished samples sampling for zz_0180383007
 finished run 8 for problem zz_0180383007
 start run 9 for problem zz_0180383007
   start samplings 1000 for problem zz_0180383007
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0180383007
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2497804221
finished samples sampling for zz_2497804221
 finished run 9 for problem zz_2497804221
 succesfully retrieved answer for problem {} zz_2497804221
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_2497804221
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd3443c9eb0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd3443c9eb0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0318641083
finished samples sampling for zz_0318641083
 finished run 9 for problem zz_0318641083
 succesfully retrieved answer for problem {} zz_0318641083
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_9818300553
finished samples sampling for zz_9818300553
 finished run 9 for problem zz_9818300553
 succesfully retrieved answer for problem {} zz_9818300553
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_6269837941
finished samples sampling for zz_6269837941
 finished run 9 for problem zz_6269837941
 succesfully retrieved answer for problem {} zz_6269837941
 submitter queue is empty, will wait at barrier for all submitters to finish.
sampled for problem zz_3559114144
finished samples sampling for zz_3559114144
 finished run 9 for problem zz_3559114144
 succesfully retrieved answer for problem {} zz_3559114144
 submitter queue is empty, will wait at barrier for all submitters to finish.
sampled for problem zz_8129357418
finished samples sampling for zz_8129357418
 finished run 9 for problem zz_8129357418
 succesfully retrieved answer for problem {} zz_8129357418
 submitter queue is empty, will wait at barrier for all submitters to finish.
sampled for problem zz_0180383007
finished samples sampling for zz_0180383007
 finished run 9 for problem zz_0180383007
 succesfully retrieved answer for problem {} zz_0180383007
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Joined all submitter threads.
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
finished samples sampling for zz_0991124024
 finished run 3 for problem zz_0991124024
 start run 4 for problem zz_0991124024
   start samplings 1000 for problem zz_0991124024
sampled for problem zz_0991124024
sampled for problem zz_9085162316
finished samples sampling for zz_9085162316
 finished run 3 for problem zz_9085162316
 start run 4 for problem zz_9085162316
   start samplings 1000 for problem zz_9085162316
sampled for problem zz_9085162316
sampled for problem zz_2486085441
finished samples sampling for zz_2486085441
 finished run 3 for problem zz_2486085441
 start run 4 for problem zz_2486085441
   start samplings 1000 for problem zz_2486085441
sampled for problem zz_2486085441
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8979952804
finished samples sampling for zz_8979952804
 finished run 4 for problem zz_8979952804
 start run 5 for problem zz_8979952804
   start samplings 1000 for problem zz_8979952804
sampled for problem zz_8979952804
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_6214128419
finished samples sampling for zz_6214128419
 finished run 4 for problem zz_6214128419
 start run 5 for problem zz_6214128419
   start samplings 1000 for problem zz_6214128419
sampled for problem zz_6214128419
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_3002816115
finished samples sampling for zz_3002816115
 finished run 5 for problem zz_3002816115
 start run 6 for problem zz_3002816115
   start samplings 1000 for problem zz_3002816115
sampled for problem zz_3002816115
sampled for problem zz_5988593358
finished samples sampling for zz_5988593358
 finished run 4 for problem zz_5988593358
 start run 5 for problem zz_5988593358
   start samplings 1000 for problem zz_5988593358
sampled for problem zz_5988593358
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0991124024
finished samples sampling for zz_0991124024
 finished run 4 for problem zz_0991124024
 start run 5 for problem zz_0991124024
   start samplings 1000 for problem zz_0991124024
sampled for problem zz_0991124024
sampled for problem zz_9085162316
finished samples sampling for zz_9085162316
 finished run 4 for problem zz_9085162316
 start run 5 for problem zz_9085162316
   start samplings 1000 for problem zz_9085162316
sampled for problem zz_9085162316
sampled for problem zz_2486085441
finished samples sampling for zz_2486085441
 finished run 4 for problem zz_2486085441
 start run 5 for problem zz_2486085441
   start samplings 1000 for problem zz_2486085441
sampled for problem zz_2486085441
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8979952804
finished samples sampling for zz_8979952804
 finished run 5 for problem zz_8979952804
 start run 6 for problem zz_8979952804
   start samplings 1000 for problem zz_8979952804
sampled for problem zz_8979952804
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_6214128419
finished samples sampling for zz_6214128419
 finished run 5 for problem zz_6214128419
 start run 6 for problem zz_6214128419
   start samplings 1000 for problem zz_6214128419
sampled for problem zz_6214128419
sampled for problem zz_3002816115
finished samples sampling for zz_3002816115
 finished run 6 for problem zz_3002816115
 start run 7 for problem zz_3002816115
   start samplings 1000 for problem zz_3002816115
sampled for problem zz_3002816115
sampled for problem zz_5988593358
finished samples sampling for zz_5988593358
 finished run 5 for problem zz_5988593358
 start run 6 for problem zz_5988593358
   start samplings 1000 for problem zz_5988593358
sampled for problem zz_5988593358
sampled for problem zz_0991124024
finished samples sampling for zz_0991124024
 finished run 5 for problem zz_0991124024
 start run 6 for problem zz_0991124024
   start samplings 1000 for problem zz_0991124024
sampled for problem zz_0991124024
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_9085162316
finished samples sampling for zz_9085162316
 finished run 5 for problem zz_9085162316
 start run 6 for problem zz_9085162316
   start samplings 1000 for problem zz_9085162316
sampled for problem zz_9085162316
sampled for problem zz_2486085441
finished samples sampling for zz_2486085441
 finished run 5 for problem zz_2486085441
 start run 6 for problem zz_2486085441
   start samplings 1000 for problem zz_2486085441
sampled for problem zz_2486085441
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8979952804
finished samples sampling for zz_8979952804
 finished run 6 for problem zz_8979952804
 start run 7 for problem zz_8979952804
   start samplings 1000 for problem zz_8979952804
sampled for problem zz_8979952804
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_6214128419
finished samples sampling for zz_6214128419
 finished run 6 for problem zz_6214128419
 start run 7 for problem zz_6214128419
   start samplings 1000 for problem zz_6214128419
sampled for problem zz_6214128419
sampled for problem zz_3002816115
finished samples sampling for zz_3002816115
 finished run 7 for problem zz_3002816115
 start run 8 for problem zz_3002816115
   start samplings 1000 for problem zz_3002816115
sampled for problem zz_3002816115
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_5988593358
finished samples sampling for zz_5988593358
 finished run 6 for problem zz_5988593358
 start run 7 for problem zz_5988593358
   start samplings 1000 for problem zz_5988593358
sampled for problem zz_5988593358
sampled for problem zz_0991124024
finished samples sampling for zz_0991124024
 finished run 6 for problem zz_0991124024
 start run 7 for problem zz_0991124024
   start samplings 1000 for problem zz_0991124024
sampled for problem zz_0991124024
sampled for problem zz_9085162316
finished samples sampling for zz_9085162316
 finished run 6 for problem zz_9085162316
 start run 7 for problem zz_9085162316
   start samplings 1000 for problem zz_9085162316
sampled for problem zz_9085162316
sampled for problem zz_2486085441
finished samples sampling for zz_2486085441
 finished run 6 for problem zz_2486085441
 start run 7 for problem zz_2486085441
   start samplings 1000 for problem zz_2486085441
sampled for problem zz_2486085441
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8979952804
finished samples sampling for zz_8979952804
 finished run 7 for problem zz_8979952804
 start run 8 for problem zz_8979952804
   start samplings 1000 for problem zz_8979952804
sampled for problem zz_8979952804
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_6214128419
finished samples sampling for zz_6214128419
 finished run 7 for problem zz_6214128419
 start run 8 for problem zz_6214128419
   start samplings 1000 for problem zz_6214128419
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_6214128419
sampled for problem zz_3002816115
finished samples sampling for zz_3002816115
 finished run 8 for problem zz_3002816115
 start run 9 for problem zz_3002816115
   start samplings 1000 for problem zz_3002816115
sampled for problem zz_3002816115
sampled for problem zz_5988593358
finished samples sampling for zz_5988593358
 finished run 7 for problem zz_5988593358
 start run 8 for problem zz_5988593358
   start samplings 1000 for problem zz_5988593358
finished samples sampling for zz_1047118313
 finished run 6 for problem zz_1047118313
 start run 7 for problem zz_1047118313
   start samplings 1000 for problem zz_1047118313
sampled for problem zz_1047118313
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8965497403
finished samples sampling for zz_8965497403
 finished run 6 for problem zz_8965497403
 start run 7 for problem zz_8965497403
   start samplings 1000 for problem zz_8965497403
sampled for problem zz_8965497403
sampled for problem zz_2752062414
finished samples sampling for zz_2752062414
 finished run 7 for problem zz_2752062414
 start run 8 for problem zz_2752062414
   start samplings 1000 for problem zz_2752062414
sampled for problem zz_2752062414
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_5325823637
finished samples sampling for zz_5325823637
 finished run 7 for problem zz_5325823637
 start run 8 for problem zz_5325823637
   start samplings 1000 for problem zz_5325823637
sampled for problem zz_5325823637
sampled for problem zz_0244546704
finished samples sampling for zz_0244546704
 finished run 7 for problem zz_0244546704
 start run 8 for problem zz_0244546704
   start samplings 1000 for problem zz_0244546704
sampled for problem zz_0244546704
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8557696436
finished samples sampling for zz_8557696436
 finished run 7 for problem zz_8557696436
 start run 8 for problem zz_8557696436
   start samplings 1000 for problem zz_8557696436
sampled for problem zz_8557696436
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_4820464946
finished samples sampling for zz_4820464946
 finished run 7 for problem zz_4820464946
 start run 8 for problem zz_4820464946
   start samplings 1000 for problem zz_4820464946
sampled for problem zz_4820464946
sampled for problem zz_7975579866
finished samples sampling for zz_7975579866
 finished run 8 for problem zz_7975579866
 start run 9 for problem zz_7975579866
   start samplings 1000 for problem zz_7975579866
sampled for problem zz_7975579866
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1047118313
finished samples sampling for zz_1047118313
 finished run 7 for problem zz_1047118313
 start run 8 for problem zz_1047118313
   start samplings 1000 for problem zz_1047118313
sampled for problem zz_1047118313
sampled for problem zz_8965497403
finished samples sampling for zz_8965497403
 finished run 7 for problem zz_8965497403
 start run 8 for problem zz_8965497403
   start samplings 1000 for problem zz_8965497403
sampled for problem zz_8965497403
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2752062414
finished samples sampling for zz_2752062414
 finished run 8 for problem zz_2752062414
 start run 9 for problem zz_2752062414
   start samplings 1000 for problem zz_2752062414
sampled for problem zz_2752062414
sampled for problem zz_5325823637
finished samples sampling for zz_5325823637
 finished run 8 for problem zz_5325823637
 start run 9 for problem zz_5325823637
   start samplings 1000 for problem zz_5325823637
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_5325823637
sampled for problem zz_0244546704
finished samples sampling for zz_0244546704
 finished run 8 for problem zz_0244546704
 start run 9 for problem zz_0244546704
   start samplings 1000 for problem zz_0244546704
sampled for problem zz_0244546704
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8557696436
finished samples sampling for zz_8557696436
 finished run 8 for problem zz_8557696436
 start run 9 for problem zz_8557696436
   start samplings 1000 for problem zz_8557696436
sampled for problem zz_8557696436
sampled for problem zz_4820464946
finished samples sampling for zz_4820464946
 finished run 8 for problem zz_4820464946
 start run 9 for problem zz_4820464946
   start samplings 1000 for problem zz_4820464946
sampled for problem zz_4820464946
sampled for problem zz_7975579866
finished samples sampling for zz_7975579866
 finished run 9 for problem zz_7975579866
 succesfully retrieved answer for problem {} zz_7975579866
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_7975579866
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4bc30a2a0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4bc30a2a0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1047118313
finished samples sampling for zz_1047118313
 finished run 8 for problem zz_1047118313
 start run 9 for problem zz_1047118313
   start samplings 1000 for problem zz_1047118313
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_1047118313
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
sampled for problem zz_8965497403
finished samples sampling for zz_8965497403
 finished run 8 for problem zz_8965497403
 start run 9 for problem zz_8965497403
   start samplings 1000 for problem zz_8965497403
sampled for problem zz_8965497403
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_7975579866
sampled for problem zz_2752062414
sampled for problem zz_8281893723
sampled for problem zz_0616570644
finished samples sampling for zz_0616570644
 finished run 6 for problem zz_0616570644
 start run 7 for problem zz_0616570644
   start samplings 1000 for problem zz_0616570644
sampled for problem zz_0616570644
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_3172680174
finished samples sampling for zz_3172680174
 finished run 7 for problem zz_3172680174
 start run 8 for problem zz_3172680174
   start samplings 1000 for problem zz_3172680174
sampled for problem zz_3172680174
sampled for problem zz_7137191291
finished samples sampling for zz_7137191291
 finished run 7 for problem zz_7137191291
 start run 8 for problem zz_7137191291
   start samplings 1000 for problem zz_7137191291
sampled for problem zz_7137191291
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_3454216945
finished samples sampling for zz_3454216945
 finished run 7 for problem zz_3454216945
 start run 8 for problem zz_3454216945
   start samplings 1000 for problem zz_3454216945
sampled for problem zz_3454216945
sampled for problem zz_5044724301
finished samples sampling for zz_5044724301
 finished run 7 for problem zz_5044724301
 start run 8 for problem zz_5044724301
   start samplings 1000 for problem zz_5044724301
sampled for problem zz_5044724301
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8611608945
finished samples sampling for zz_8611608945
 finished run 7 for problem zz_8611608945
 start run 8 for problem zz_8611608945
   start samplings 1000 for problem zz_8611608945
sampled for problem zz_8611608945
sampled for problem zz_1357117085
finished samples sampling for zz_1357117085
 finished run 7 for problem zz_1357117085
 start run 8 for problem zz_1357117085
   start samplings 1000 for problem zz_1357117085
sampled for problem zz_1357117085
sampled for problem zz_8281893723
finished samples sampling for zz_8281893723
 finished run 7 for problem zz_8281893723
 start run 8 for problem zz_8281893723
   start samplings 1000 for problem zz_8281893723
sampled for problem zz_8281893723
sampled for problem zz_0616570644
finished samples sampling for zz_0616570644
 finished run 7 for problem zz_0616570644
 start run 8 for problem zz_0616570644
   start samplings 1000 for problem zz_0616570644
sampled for problem zz_0616570644
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_3172680174
finished samples sampling for zz_3172680174
 finished run 8 for problem zz_3172680174
 start run 9 for problem zz_3172680174
   start samplings 1000 for problem zz_3172680174
sampled for problem zz_3172680174
sampled for problem zz_7137191291
finished samples sampling for zz_7137191291
 finished run 8 for problem zz_7137191291
 start run 9 for problem zz_7137191291
   start samplings 1000 for problem zz_7137191291
sampled for problem zz_7137191291
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_3454216945
finished samples sampling for zz_3454216945
 finished run 8 for problem zz_3454216945
 start run 9 for problem zz_3454216945
   start samplings 1000 for problem zz_3454216945
sampled for problem zz_3454216945
sampled for problem zz_5044724301
finished samples sampling for zz_5044724301
 finished run 8 for problem zz_5044724301
 start run 9 for problem zz_5044724301
   start samplings 1000 for problem zz_5044724301
sampled for problem zz_5044724301
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8611608945
finished samples sampling for zz_8611608945
 finished run 8 for problem zz_8611608945
 start run 9 for problem zz_8611608945
   start samplings 1000 for problem zz_8611608945
sampled for problem zz_8611608945
sampled for problem zz_1357117085
finished samples sampling for zz_1357117085
 finished run 8 for problem zz_1357117085
 start run 9 for problem zz_1357117085
   start samplings 1000 for problem zz_1357117085
sampled for problem zz_1357117085
sampled for problem zz_8281893723
finished samples sampling for zz_8281893723
 finished run 8 for problem zz_8281893723
 start run 9 for problem zz_8281893723
   start samplings 1000 for problem zz_8281893723
sampled for problem zz_8281893723
sampled for problem zz_0616570644
finished samples sampling for zz_0616570644
 finished run 8 for problem zz_0616570644
 start run 9 for problem zz_0616570644
   start samplings 1000 for problem zz_0616570644
sampled for problem zz_0616570644
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_3172680174
finished samples sampling for zz_3172680174
 finished run 9 for problem zz_3172680174
 succesfully retrieved answer for problem {} zz_3172680174
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_3172680174
sampled for problem zz_7137191291
finished samples sampling for zz_7137191291
 finished run 9 for problem zz_7137191291
 succesfully retrieved answer for problem {} zz_7137191291
 submitter queue is empty, will wait at barrier for all submitters to finish.
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f765d8bf7d0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f765d8bf7d0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 start writing answer for problem {} zz_7137191291
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f77aa7c6030>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f77aa7c6030>
sampled for problem zz_3454216945
finished samples sampling for zz_3454216945
 finished run 9 for problem zz_3454216945
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 succesfully retrieved answer for problem {} zz_3454216945
 submitter queue is empty, will wait at barrier for all submitters to finish.
sampled for problem zz_5044724301
finished samples sampling for zz_5044724301
 finished run 9 for problem zz_5044724301
 succesfully retrieved answer for problem {} zz_5044724301
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
sampled for problem zz_8611608945
finished samples sampling for zz_8611608945
 finished run 9 for problem zz_8611608945
 succesfully retrieved answer for problem {} zz_8611608945
 submitter queue is empty, will wait at barrier for all submitters to finish.
sampled for problem zz_1357117085
finished samples sampling for zz_1357117085
 finished run 9 for problem zz_1357117085
 succesfully retrieved answer for problem {} zz_1357117085
 submitter queue is empty, will wait at barrier for all submitters to finish.
sampled for problem zz_8281893723
finished samples sampling for zz_8281893723
 finished run 9 for problem zz_8281893723
 succesfully retrieved answer for problem {} zz_8281893723
 submitter queue is empty, will wait at barrier for all submitters to finish.
sampled for problem zz_0616570644
finished samples sampling for zz_0616570644
 finished run 9 for problem zz_0616570644
 succesfully retrieved answer for problem {} zz_0616570644
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Joined all submitter threads.
 Queue sizes: problems_to_submit = 0, answers_to_write = 6 <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_9713990306
 start writing answer for problem {} zz_7103584348
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f3011af0ef0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f3011af0ef0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0984166701
 start writing answer for problem {} zz_1130858706
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f3011a32120>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f3011a32120>
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_7103584348
 start writing answer for problem {} zz_3657359779
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f30112935f0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f30112935f0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0446214293
 start writing answer for problem {} zz_0318641083
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd4d7b2b980>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd4d7b2b980>
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_2497804221
 start writing answer for problem {} zz_9818300553
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd4d7a4f290>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd4d7a4f290>
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_1130858706
 start writing answer for problem {} zz_2835206639
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f301044f440>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f301044f440>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_3657359779
 writer queue is empty and event_flag_submitters_should_work is not set (all submitters should have finished by now), so writer will also finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_2835206639
 writer queue is empty and event_flag_submitters_should_work is not set (all submitters should have finished by now), so writer will also finish.
 Joined all writer threads.
 Is queue_problems_to_submit empty: True
 Is queue_answers_to_write empty: True
Execution finished.

sampled for problem zz_5988593358
sampled for problem zz_0991124024
finished samples sampling for zz_0991124024
 finished run 7 for problem zz_0991124024
 start run 8 for problem zz_0991124024
   start samplings 1000 for problem zz_0991124024
sampled for problem zz_0991124024
sampled for problem zz_9085162316
finished samples sampling for zz_9085162316
 finished run 7 for problem zz_9085162316
 start run 8 for problem zz_9085162316
   start samplings 1000 for problem zz_9085162316
sampled for problem zz_9085162316
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_2486085441
finished samples sampling for zz_2486085441
 finished run 7 for problem zz_2486085441
 start run 8 for problem zz_2486085441
   start samplings 1000 for problem zz_2486085441
sampled for problem zz_2486085441
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8979952804
finished samples sampling for zz_8979952804
 finished run 8 for problem zz_8979952804
 start run 9 for problem zz_8979952804
   start samplings 1000 for problem zz_8979952804
sampled for problem zz_8979952804
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_6214128419
finished samples sampling for zz_6214128419
 finished run 8 for problem zz_6214128419
 start run 9 for problem zz_6214128419
   start samplings 1000 for problem zz_6214128419
sampled for problem zz_6214128419
sampled for problem zz_3002816115
finished samples sampling for zz_3002816115
 finished run 9 for problem zz_3002816115
 succesfully retrieved answer for problem {} zz_3002816115
 submitter queue is empty, will wait at barrier for all submitters to finish.
sampled for problem zz_5988593358
finished samples sampling for zz_5988593358
 finished run 8 for problem zz_5988593358
 start run 9 for problem zz_5988593358
   start samplings 1000 for problem zz_5988593358
 start writing answer for problem {} zz_3002816115
sampled for problem zz_5988593358
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5b4c1db500>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5b4c1db500>
sampled for problem zz_0991124024
finished samples sampling for zz_0991124024
 finished run 8 for problem zz_0991124024
 start run 9 for problem zz_0991124024
   start samplings 1000 for problem zz_0991124024
sampled for problem zz_0991124024
sampled for problem zz_9085162316
finished samples sampling for zz_9085162316
 finished run 8 for problem zz_9085162316
 start run 9 for problem zz_9085162316
   start samplings 1000 for problem zz_9085162316
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_9085162316
sampled for problem zz_2486085441
finished samples sampling for zz_2486085441
 finished run 8 for problem zz_2486085441
 start run 9 for problem zz_2486085441
   start samplings 1000 for problem zz_2486085441
sampled for problem zz_2486085441
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8979952804
finished samples sampling for zz_8979952804
 finished run 9 for problem zz_8979952804
 succesfully retrieved answer for problem {} zz_8979952804
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_8979952804
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5931b5a4e0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5931b5a4e0>
sampled for problem zz_6214128419
finished samples sampling for zz_6214128419
 finished run 9 for problem zz_6214128419
 succesfully retrieved answer for problem {} zz_6214128419
 submitter queue is empty, will wait at barrier for all submitters to finish.
sampled for problem zz_5988593358
finished samples sampling for zz_5988593358
 finished run 9 for problem zz_5988593358
 succesfully retrieved answer for problem {} zz_5988593358
 submitter queue is empty, will wait at barrier for all submitters to finish.
sampled for problem zz_0991124024
finished samples sampling for zz_0991124024
 finished run 9 for problem zz_0991124024
 succesfully retrieved answer for problem {} zz_0991124024
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_9085162316
finished samples sampling for zz_9085162316
 finished run 9 for problem zz_9085162316
 succesfully retrieved answer for problem {} zz_9085162316
 submitter queue is empty, will wait at barrier for all submitters to finish.
sampled for problem zz_2486085441
finished samples sampling for zz_2486085441
 finished run 9 for problem zz_2486085441
 succesfully retrieved answer for problem {} zz_2486085441
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Joined all submitter threads.
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8979952804
 start run 8 for problem zz_0167361147
   start samplings 1000 for problem zz_0167361147
sampled for problem zz_0167361147
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0857212263
finished samples sampling for zz_0857212263
 finished run 7 for problem zz_0857212263
 start run 8 for problem zz_0857212263
   start samplings 1000 for problem zz_0857212263
sampled for problem zz_0857212263
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_3593098853
finished samples sampling for zz_3593098853
 finished run 7 for problem zz_3593098853
 start run 8 for problem zz_3593098853
   start samplings 1000 for problem zz_3593098853
sampled for problem zz_3593098853
sampled for problem zz_9009261444
finished samples sampling for zz_9009261444
 finished run 7 for problem zz_9009261444
 start run 8 for problem zz_9009261444
   start samplings 1000 for problem zz_9009261444
sampled for problem zz_9009261444
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_4790003576
finished samples sampling for zz_4790003576
 finished run 8 for problem zz_4790003576
 start run 9 for problem zz_4790003576
   start samplings 1000 for problem zz_4790003576
sampled for problem zz_4790003576
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8770741114
finished samples sampling for zz_8770741114
 finished run 8 for problem zz_8770741114
 start run 9 for problem zz_8770741114
   start samplings 1000 for problem zz_8770741114
sampled for problem zz_8770741114
sampled for problem zz_5768432036
finished samples sampling for zz_5768432036
 finished run 8 for problem zz_5768432036
 start run 9 for problem zz_5768432036
   start samplings 1000 for problem zz_5768432036
sampled for problem zz_5768432036
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_0167361147
finished samples sampling for zz_0167361147
 finished run 8 for problem zz_0167361147
 start run 9 for problem zz_0167361147
   start samplings 1000 for problem zz_0167361147
sampled for problem zz_0167361147
sampled for problem zz_0857212263
finished samples sampling for zz_0857212263
 finished run 8 for problem zz_0857212263
 start run 9 for problem zz_0857212263
   start samplings 1000 for problem zz_0857212263
sampled for problem zz_0857212263
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_3593098853
finished samples sampling for zz_3593098853
 finished run 8 for problem zz_3593098853
 start run 9 for problem zz_3593098853
   start samplings 1000 for problem zz_3593098853
sampled for problem zz_3593098853
sampled for problem zz_9009261444
finished samples sampling for zz_9009261444
 finished run 8 for problem zz_9009261444
 start run 9 for problem zz_9009261444
   start samplings 1000 for problem zz_9009261444
sampled for problem zz_9009261444
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_4790003576
finished samples sampling for zz_4790003576
 finished run 9 for problem zz_4790003576
 succesfully retrieved answer for problem {} zz_4790003576
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_4790003576
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f58287f5ee0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f58287f5ee0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
sampled for problem zz_8770741114
finished samples sampling for zz_8770741114
 finished run 9 for problem zz_8770741114
 succesfully retrieved answer for problem {} zz_8770741114
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_8770741114
sampled for problem zz_5768432036
finished samples sampling for zz_5768432036
 finished run 9 for problem zz_5768432036
 succesfully retrieved answer for problem {} zz_5768432036
 submitter queue is empty, will wait at barrier for all submitters to finish.
sampled for problem zz_0167361147
finished samples sampling for zz_0167361147
 finished run 9 for problem zz_0167361147
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f574832bda0>
sampled for problem zz_0857212263
finished samples sampling for zz_0857212263
 finished run 9 for problem zz_0857212263
 succesfully retrieved answer for problem {} zz_0167361147
 submitter queue is empty, will wait at barrier for all submitters to finish.
 succesfully retrieved answer for problem {} zz_0857212263
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f574832bda0>
sampled for problem zz_3593098853
finished samples sampling for zz_3593098853
 finished run 9 for problem zz_3593098853
 succesfully retrieved answer for problem {} zz_3593098853
 submitter queue is empty, will wait at barrier for all submitters to finish.
sampled for problem zz_9009261444
finished samples sampling for zz_9009261444
 finished run 9 for problem zz_9009261444
 succesfully retrieved answer for problem {} zz_9009261444
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Joined all submitter threads.
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
finished samples sampling for zz_2752062414
 finished run 9 for problem zz_2752062414
 succesfully retrieved answer for problem {} zz_2752062414
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 start writing answer for problem {} zz_2752062414
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe47c6f5100>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe47c6f5100>
sampled for problem zz_5325823637
finished samples sampling for zz_5325823637
 finished run 9 for problem zz_5325823637
 succesfully retrieved answer for problem {} zz_5325823637
 submitter queue is empty, will wait at barrier for all submitters to finish.
 start writing answer for problem {} zz_5325823637
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2e53d1580>
sampled for problem zz_0244546704
finished samples sampling for zz_0244546704
 finished run 9 for problem zz_0244546704
 succesfully retrieved answer for problem {} zz_0244546704
 submitter queue is empty, will wait at barrier for all submitters to finish.
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2e53d1580>
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
sampled for problem zz_8557696436
finished samples sampling for zz_8557696436
 finished run 9 for problem zz_8557696436
sampled for problem zz_4820464946
finished samples sampling for zz_4820464946
 finished run 9 for problem zz_4820464946
 succesfully retrieved answer for problem {} zz_8557696436
 submitter queue is empty, will wait at barrier for all submitters to finish.
 succesfully retrieved answer for problem {} zz_4820464946
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
sampled for problem zz_1047118313
finished samples sampling for zz_1047118313
 finished run 9 for problem zz_1047118313
 succesfully retrieved answer for problem {} zz_1047118313
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
sampled for problem zz_8965497403
finished samples sampling for zz_8965497403
 finished run 9 for problem zz_8965497403
 succesfully retrieved answer for problem {} zz_8965497403
 submitter queue is empty, will wait at barrier for all submitters to finish.
 Joined all submitter threads.
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_2752062414
 start writing answer for problem {} zz_0244546704
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe151467b30>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe151467b30>
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
 Queue sizes: problems_to_submit = 0, answers_to_write = 6
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_3172680174
 start writing answer for problem {} zz_3454216945
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f77aa7c42c0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f77aa7c42c0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_3454216945
 start writing answer for problem {} zz_5044724301
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f78f83a5b80>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f78f83a5b80>
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 finished writing answer for problem {} zz_0318641083
 start writing answer for problem {} zz_6269837941
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd4d70699a0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd4d70699a0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_9818300553
 start writing answer for problem {} zz_3559114144
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd4d99f4d10>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd4d99f4d10>
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_3559114144
 start writing answer for problem {} zz_8129357418
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd4d99f7aa0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd4d99f7aa0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 finished writing answer for problem {} zz_6269837941
 start writing answer for problem {} zz_0180383007
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd4d89b9700>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fd4d89b9700>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0180383007
 writer queue is empty and event_flag_submitters_should_work is not set (all submitters should have finished by now), so writer will also finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8129357418
 writer queue is empty and event_flag_submitters_should_work is not set (all submitters should have finished by now), so writer will also finish.
 Joined all writer threads.
 Is queue_problems_to_submit empty: True
 Is queue_answers_to_write empty: True
Execution finished.

_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_5044724301
 start writing answer for problem {} zz_8611608945
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f77a872edb0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f77a872edb0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8611608945
 start writing answer for problem {} zz_1357117085
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f77a8ce63c0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f77a8ce63c0>
 finished writing answer for problem {} zz_7137191291
 start writing answer for problem {} zz_8281893723
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f77a9324680>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f77a9324680>
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 start writing answer for problem {} zz_6214128419
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5921536db0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5921536db0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_3002816115
 start writing answer for problem {} zz_5988593358
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5b4c194f20>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5b4c194f20>
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_5988593358
 start writing answer for problem {} zz_0991124024
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f575fd67bc0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f575fd67bc0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_5325823637
 start writing answer for problem {} zz_8557696436
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2e5268680>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2e5268680>
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0244546704
 start writing answer for problem {} zz_4820464946
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4f8246780>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe4f8246780>
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_4820464946
 start writing answer for problem {} zz_1047118313
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2e4944140>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2e4944140>
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 5
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_4790003576
 start writing answer for problem {} zz_5768432036
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f54afea1670>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f54afea1670>
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
 Queue sizes: problems_to_submit = 0, answers_to_write = 4
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8770741114
 start writing answer for problem {} zz_0167361147
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5643c23440>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5643c23440>
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
 Queue sizes: problems_to_submit = 0, answers_to_write = 3
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_5768432036
 start writing answer for problem {} zz_0857212263
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f54fb97ec30>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f54fb97ec30>
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0991124024
 start writing answer for problem {} zz_9085162316
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f59226c5f10>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f59226c5f10>
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_6214128419
 start writing answer for problem {} zz_2486085441
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f57da8bef00>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f57da8bef00>
 finished writing answer for problem {} zz_9085162316
 writer queue is empty and event_flag_submitters_should_work is not set (all submitters should have finished by now), so writer will also finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8557696436
 start writing answer for problem {} zz_8965497403
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2e40f89e0>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7fe2e40f89e0>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8965497403
 writer queue is empty and event_flag_submitters_should_work is not set (all submitters should have finished by now), so writer will also finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_1047118313
 writer queue is empty and event_flag_submitters_should_work is not set (all submitters should have finished by now), so writer will also finish.
 Joined all writer threads.
 Is queue_problems_to_submit empty: True
 Is queue_answers_to_write empty: True
Execution finished.

_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 2
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0167361147
 start writing answer for problem {} zz_3593098853
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5642a46510>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5642a46510>
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_3593098853
 start writing answer for problem {} zz_9009261444
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'>
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 1
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_8281893723
 start writing answer for problem {} zz_0616570644
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f75c9011730>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f75c9011730>
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_1357117085
 writer queue is empty and event_flag_submitters_should_work is not set (all submitters should have finished by now), so writer will also finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_2486085441
 writer queue is empty and event_flag_submitters_should_work is not set (all submitters should have finished by now), so writer will also finish.
 Joined all writer threads.
 Is queue_problems_to_submit empty: True
 Is queue_answers_to_write empty: True
Execution finished.

_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_0616570644
 writer queue is empty and event_flag_submitters_should_work is not set (all submitters should have finished by now), so writer will also finish.
 Joined all writer threads.
 Is queue_problems_to_submit empty: True
 Is queue_answers_to_write empty: True
Execution finished.
 <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5642e19c10>
elif concurrent.futures.thread.ThreadPoolExecutor
_download_answer_executor <class 'concurrent.futures.thread.ThreadPoolExecutor'> <concurrent.futures.thread.ThreadPoolExecutor object at 0x7f5642e19c10>
 finished writing answer for problem {} zz_0857212263
 writer queue is empty and event_flag_submitters_should_work is not set (all submitters should have finished by now), so writer will also finish.
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
 Queue sizes: problems_to_submit = 0, answers_to_write = 0
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
_variables <class 'dimod.variables.Variables'> Variables([(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5)])
 finished writing answer for problem {} zz_9009261444
 writer queue is empty and event_flag_submitters_should_work is not set (all submitters should have finished by now), so writer will also finish.
 Joined all writer threads.
 Is queue_problems_to_submit empty: True
 Is queue_answers_to_write empty: True
Execution finished.
